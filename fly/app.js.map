{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./fog_modules/Core/Core.js","webpack:///./fog_modules/Components/Mesh.js","webpack:///./fog_modules/Math/Mat4.js","webpack:///./fog_modules/Components/Camera.js","webpack:///./fog_modules/Math/Vec3.js","webpack:///./fog_modules/Components/Movement.js","webpack:///./fog_modules/Components/Rotation.js","webpack:///./fog_modules/Components/ATrigger.js","webpack:///./fog_modules/Components/STrigger.js","webpack:///./fog_modules/Components/Animator.js","webpack:///./fog_modules/Math/Quat.js","webpack:///./fog_modules/Components/Transform.js","webpack:///./fog_modules/Components/OrbitControl.js","webpack:///./fog_modules/Systems/TimeSystem.js","webpack:///./fog_modules/Systems/InputSystem.js","webpack:///./fog_modules/Systems/ScreenSystem.js","webpack:///./fog_modules/Math/DMap.js","webpack:///./fog_modules/Math/Batch.js","webpack:///./fog_modules/Systems/RenderSystem.js","webpack:///./fog_modules/Systems/RotationSystem.js","webpack:///./fog_modules/Systems/MovementSystem.js","webpack:///./fog_modules/Systems/OrbitControlSystem.js","webpack:///./fog_modules/Systems/TransformSystem.js","webpack:///./fog_modules/Systems/TriggerSystem.js","webpack:///./fog_modules/Systems/GameSystemHelper.js","webpack:///./fog_modules/Systems/GameSystem.js","webpack:///./fog_modules/Math/Vec2.js","webpack:///./fog_modules/Math/Vec4.js","webpack:///./fog_modules/Math/TLayer.js","webpack:///./fog_modules/Resources/Shader.js","webpack:///./fog_modules/Loaders/RawShaderLoader.js","webpack:///./fog_modules/Resources/Material.js","webpack:///./fog_modules/Loaders/MaterialLoader.js","webpack:///./fog_modules/Loaders/ImageLoader.js","webpack:///./fog_modules/Resources/Texture.js","webpack:///./fog_modules/Loaders/Texture2DLoader.js","webpack:///./fog_modules/Resources/Geometry.js","webpack:///./fog_modules/Loaders/GeometryLoader.js","webpack:///./fog_modules/Loaders/SceneLoader.js","webpack:///./modules/app.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","$gl","$ext","$dom","$gldom","$uidom","$raf","$res","$tags","$comp","$loop","$event","$state","$owner","$child","$depth","$entity","$system","$transform","$name","for","$new","$del","$modify","$loader","UBIT","EBIT","SBIT","NBIT","temp","freeSet","Set","Loader","constructor","core","this","load","file","fetch","then","response","text","JSON","parse","obj","Promise","resolve","conf","res","Component","owner","enable","disable","hasEnable","hasDisable","hasNeedsUpdate","needsUpdate","Entity","Map","add","child","depth","addTag","tag","delTag","delete","hasTag","has","getComp","compClass","undefined","getCompOne","gvarRes","Mesh","super","iid","geometry","material","skeleton","x2","y2","z2","xy","xz","xw","yz","yw","zw","tm","Float32Array","Mat4","copy","mat","identity","perspective","fov","aspect","near","far","Math","tan","orbit","polar","azimuthal","dist","target","cosa","cos","sina","sin","cosp","sinp","x","y","z","mul","premul","fromTRS","pos","rot","scl","w","fromTRSC","Camera","pmat","wmat","length","tx","ty","tz","tw","Vec3","vec","set","normalize","sqrt","abs","min","max","mins","scale","maxs","sub","addScaledVec","applyQuat","quat","mulNumber","num","Movement","speed","linear","direction","Rotation","axis","angle","ATrigger","next","inner","mask","offset","size","STrigger","radius","Animator","animation","loop","stop","time","tmp","Quat","fromAxisAngle","Transform","position","orientation","lmat","worldPosition","OrbitControl","distance","forward","nupd","afrozen","pfrozen","dfrozen","element","$k1","$in","$it1","$it2","DMap","start","ret","iterator","done","k1","k2","BATCH_SIZE","Batch","ibo","geo","vao","ext","createVertexArrayOES","gl","shader","bindBuffer","ARRAY_BUFFER","vbo","attr","attribute","enableVertexAttribArray","vertexAttribPointer","type","stride","ELEMENT_ARRAY_BUFFER","ebo","Error","draw","bindVertexArrayOES","inst","drawElementsInstancedANGLE","TRIANGLES","UNSIGNED_SHORT","batch","screen","transform","input","camera","towner","tvec","STS","c1","c2","ATS","ATA","Branch","xl","yl","xh","yh","stp","maxStp","bs","es","ba","ea","Array","clear","adds","comp","adda","test","push","tests","testa","TREEPOSX","TREEPOSY","TREESIZE","TREESTEP","createSphere","barrier","it","newEntity","newComp","random","createPillar1","createPillar2","createPillar3","createPillar4","createPillar5","createColumn1","createColumn2","createColumn3","createTunnel1","createTunnel2","createTrain","ent","zAxis","BARRIER_MAX","MAX_XMOVE","SCOREDT","tPos","Vec2","Vec4","TLayer","texture","layer","tlayer","Shader","program","uniform","use","useProgram","setUniform","uniformName","Number","uniform2f","uniform3f","uniform4f","uniform1i","uniformMatrix4fv","RawShaderLoader","vsh","createShader","VERTEX_SHADER","fsh","FRAGMENT_SHADER","createProgram","shaderSource","vs","compileShader","fs","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteShader","ACTIVE_UNIFORMS","getActiveUniform","includes","getUniformLocation","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","addRes","Material","depthtest","depthwrite","cullFace","blend","DEPTH_TEST","depthMask","CULL_FACE","BACK","FRONT","FRONT_AND_BACK","BLEND","MaterialLoader","getRes","ImageLoader","rv","rj","image","Image","substring","lastIndexOf","onload","onerror","src","Texture","tex","activeTexture","TEXTURE0","bindTexture","Texture2DLoader","TEXTURE_2D","createTexture","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","generateMipmap","Geometry","drawElements","disableVertexAttribArray","GeometryLoader","createBuffer","bufferData","STATIC_DRAW","Uint16Array","SceneLoader","loaders","loader","getLoader","robj","all","parseRes","entity","entt","tags","getCompClassByName","domId","document","getElementById","useEntity","delEntity","getContext","sd","getExtension","tf","tfa","e","performance","mark","fireEvent","requestAnimationFrame","measure","clearMarks","clearMeasures","cancelAnimationFrame","resType","loadRes","loaderName","regLoader","regSystem","system","getSystem","systemName","regEvent","event","systemArray","enableEntity","enableComp","getEntity","getEntitiesByName","result","CompClass","componentClass","delComp","modComp","useComp","getNewComp","getDelComp","getModComp","regComp","keys","dom","gldom","uidom","[object Object]","values","compMap","alpha","_time","now","_currentTime","_deltaTime","_timeScale","onStartFrame","deltaTime","timeScale","_up","Uint32Array","_down","_state","_pos","_dpos","_aup","_adown","_astate","_apos","_awheel","_pwheel","_dposflag","setAttribute","addEventListener","kUp","kDown","mUp","mDown","mMove","mWheel","tEnd","tStart","tMove","preventDefault","asyncDown","keyCode","floor","asyncUp","button","clientX","clientY","wheelDelta","changedTouches","keyUp","keyDown","keyState","mousePos","mouseDeltaPos","mouseWheel","VK_LBUTTON","VK_RBUTTON","VK_MBUTTON","VK_XBUTTON1","VK_XBUTTON2","VK_BACK","VK_TAB","VK_ESCAPE","VK_SPACE","VK_PAGEUP","VK_PAGEDOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_N0","VK_N1","VK_N2","VK_N3","VK_N4","VK_N5","VK_N6","VK_N7","VK_N8","VK_N9","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","curWidth","curHeight","newWidth","newHeight","onscreen","pr","window","devicePixelRatio","clientWidth","clientHeight","width","height","widthNPR","heightNPR","envMesh","batches","bid","console","log","onStart","clearColor","onScreen","viewport","onRender","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","onModify","setMainCamera","onUpdate","limearSpeed","count","onLateUpdate","onTransform","calcTransform","tree","onPHYUpdate","state","airplane","xmove","uibg","uimul","uiscore","uiresult","score","scoredt","movement","g1","g2","g3","g4","setTimeout","innerHTML","style","display","innerText","concat","ceil","move","Helper","createBarrier"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"D:\\\\$WEB\\\\prototype\\\\dist\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const $gl = Symbol('gl');\r\nconst $ext = Symbol('ext');\r\nconst $dom = Symbol('dom');\r\nconst $gldom = Symbol('gldom');\r\nconst $uidom = Symbol('uidom');\r\nconst $raf = Symbol('raf');\r\nconst $res = Symbol('res');\r\nconst $tags = Symbol('tags');\r\nconst $comp = Symbol('comp');\r\nconst $loop = Symbol('loop');\r\nconst $event = Symbol('event');\r\nconst $state = Symbol('state');\r\nconst $owner = Symbol('owner');\r\nconst $child = Symbol('child');\r\nconst $depth = Symbol('depth');\r\nconst $entity = Symbol('entity');\r\nconst $system = Symbol('system');\r\nconst $transform = Symbol('transform');\r\nconst $name = Symbol.for('name');\r\nconst $new = Symbol('new');\r\nconst $del = Symbol('del');\r\nconst $modify = Symbol('modify');\r\nconst $loader = Symbol('loader');\r\n\r\nconst UBIT = 1 << 31;\r\nconst EBIT = 1 << 30;\r\nconst SBIT = 1 << 29;\r\nconst NBIT = 1 << 28;\r\n\r\nlet temp = null;\r\nconst freeSet = new Set();\r\n\r\nexport class Loader {\r\n    constructor(core) {\r\n        this.core = core;\r\n    }\r\n    load(file) {\r\n        return fetch(file).then(response => response.text().then(text => JSON.parse(text)));\r\n    }\r\n    parse(obj) { return Promise.resolve(obj); }\r\n    conf(res) { return Promise.resolve(res); }\r\n}\r\n\r\nexport class Component {\r\n    constructor(owner, enable) {\r\n        this[$state] = UBIT;\r\n        this[$owner] = owner;\r\n        if (enable) this[$state] |= EBIT | SBIT;\r\n    }\r\n    get owner() { return this[$owner]; }\r\n    get enable() { return !!(this[$state] & EBIT); }\r\n    get disable() { return !(this[$state] & EBIT); }\r\n    get hasEnable() { return !!(this[$state] & ~EBIT) && !(this[$state] & ~SBIT); }\r\n    get hasDisable() { return !(this[$state] & ~EBIT) && !!(this[$state] & ~SBIT); }\r\n    get hasNeedsUpdate() { return !!(this[$state] & ~NBIT); }\r\n    set needsUpdate(value) {\r\n        if (value) this[$state] |= NBIT;\r\n        else this[$state] &= ~NBIT;\r\n    }\r\n}\r\n\r\nclass Entity {\r\n    constructor(owner, enable) {\r\n        this[$state] = UBIT;\r\n        this[$owner] = owner;\r\n        this[$name] = null;\r\n        this[$tags] = new Set();\r\n        this[$comp] = new Map(); // [CompClass, Set of component]\r\n        this[$child] = new Set();\r\n        this[$depth] = owner ? owner[$depth] + 1 : 0;\r\n        this[$transform] = null;\r\n        if (enable) this[$state] |= EBIT | SBIT;\r\n        if (owner !== null) owner[$child].add(this);\r\n    }\r\n    get owner() { return this[$owner]; }\r\n    get enable() { return !!(this[$state] & EBIT); }\r\n    get child() { return this[$child]; }\r\n    get depth() { return this[$depth]; }\r\n    get name() { return this[$name]; }\r\n    set name(value) { this[$name] = value; }\r\n    addTag(tag) { this[$tags].add(tag); }\r\n    delTag(tag) { this[$tags].delete(tag); }\r\n    hasTag(tag) { return this[$tags].has(tag); }\r\n    getComp(compClass) {\r\n        temp = this[$comp].get(compClass);\r\n        if (temp === undefined) temp = freeSet;\r\n        return temp;\r\n    }\r\n    getCompOne(compClass) {\r\n        temp = this[$comp].get(compClass);\r\n        if (temp !== undefined) [temp] = temp;\r\n        return temp !== undefined ? temp : null;\r\n    }\r\n}\r\n\r\nlet gvarRes = null;\r\nexport default class Core {\r\n    constructor(domId, conf) {\r\n        this[$dom] = document.getElementById(domId);\r\n        this[$gldom] = document.getElementById('app-gl');\r\n        this[$uidom] = document.getElementById('app-ui');\r\n        this[$comp] = new Map();\r\n        this[$entity] = {\r\n            useEntity: new Set(),\r\n            delEntity: new Set()\r\n        };\r\n        this[$loader] = new Map();\r\n        this[$system] = new Map();\r\n        this[$event] = new Map();\r\n        this[$res] = new Map();\r\n        this[$gl] = this[$gldom].getContext('webgl', conf);\r\n        if (this[$gl] === null) throw new Error('Get 3d context is failed');\r\n        this[$ext] = {\r\n            // tf: this[$gl].getExtension('OES_texture_float'),\r\n            sd: this[$gl].getExtension('OES_standard_derivatives'),\r\n            // tfa: this[$gl].getExtension('EXT_texture_filter_anisotropic'),\r\n            vao: this[$gl].getExtension('OES_vertex_array_object'),\r\n            inst: this[$gl].getExtension('ANGLE_instanced_arrays')\r\n        };\r\n        if (this[$ext].tf === null) throw new Error('Extension OES_texture_float not supported');\r\n        if (this[$ext].sd === null) throw new Error('Extension OES_standard_derivatives not supported');\r\n        if (this[$ext].tfa === null) throw new Error('Extension EXT_texture_filter_anisotropic not supported');\r\n        if (this[$ext].vao === null) throw new Error('Extension OES_vertex_array_object not supported');\r\n        if (this[$ext].inst === null) throw new Error('Extension ANGLE_instanced_arrays not supported');\r\n        for (const e in this[$ext].tfa) this[$gl][e] = this[$ext].tfa[e];\r\n\r\n        this[$state] = false;\r\n        this[$modify] = false;\r\n        this[$raf] = 0;\r\n        this[$loop] = () => {\r\n            performance.mark('frs');\r\n            this.fireEvent('onStartFrame');\r\n            this.fireEvent('onUpdate');\r\n            this.fireEvent('onTransform');\r\n            this.fireEvent('onPHYUpdate');\r\n            this.fireEvent('onLateUpdate');\r\n            this.fireEvent('onRender');\r\n            if (this[$modify]) {\r\n                this[$new]();\r\n                this.fireEvent('onModify');\r\n                this[$del]();\r\n                this[$modify] = false;\r\n            }\r\n            this[$raf] = requestAnimationFrame(this[$loop]);\r\n            performance.mark('fre');\r\n            performance.measure('frame', 'frs', 'fre');\r\n            performance.clearMarks();\r\n            performance.clearMeasures();\r\n        };\r\n    }\r\n    start() {\r\n        this[$raf] = requestAnimationFrame(this[$loop]);\r\n        this[$state] = true;\r\n        this.fireEvent('onStart');\r\n    }\r\n    stop() {\r\n        cancelAnimationFrame(this[$raf]);\r\n        this[$raf] = 0;\r\n        this[$state] = false;\r\n    }\r\n\r\n    addRes(type, name, res) {\r\n        if (!this[$res].has(type)) this[$res].set(type, {});\r\n        const resType = this[$res].get(type);\r\n        if (resType[name] !== undefined) throw new Error('Resource with this name already used');\r\n        resType[name] = res;\r\n    }\r\n    getRes(type, name) {\r\n        if (!this[$res].has(type)) throw new Error('Resource type not found');\r\n        gvarRes = this[$res].get(type)[name];\r\n        if (gvarRes === undefined) throw new Error('Resource not found');\r\n        return gvarRes;\r\n    }\r\n    loadRes(loaderName, file) {\r\n        if (!this[$loader].has(loaderName)) throw new Error('Loader not found');\r\n        const loader = this[$loader].get(loaderName);\r\n        return loader.load(file).then(obj => loader.parse(obj).then(res => loader.conf(res)));\r\n    }\r\n    parseRes(loaderName, obj) {\r\n        if (!this[$loader].has(loaderName)) throw new Error('Loader not found');\r\n        const loader = this[$loader].get(loaderName);\r\n        return loader.parse(obj).then(res => loader.conf(res));\r\n    }\r\n    regLoader(loader) {\r\n        if (loader[$name] === undefined) throw new Error('Loader not named');\r\n        if (this[$loader].has(loader)) throw new Error('Loader already used');\r\n        this[$loader].set(loader[$name], loader);\r\n    }\r\n    getLoader(loaderName) {\r\n        if (!this[$loader].has(loaderName)) throw new Error('Loader not found');\r\n        return this[$loader].get(loaderName);\r\n    }\r\n\r\n    regSystem(system) {\r\n        if (system[$name] === undefined) throw new Error('System not named');\r\n        if (this[$system].has(system[$name])) throw new Error('System already used');\r\n        this[$system].set(system[$name], system);\r\n    }\r\n    getSystem(systemName) {\r\n        return this[$system].get(systemName);\r\n    }\r\n    regEvent(event, system) {\r\n        if (!this[$event].has(event)) this[$event].set(event, []);\r\n        const systemArray = this[$event].get(event);\r\n        systemArray.push(system);\r\n    }\r\n    fireEvent(event) {\r\n        const systemArray = this[$event].get(event);\r\n        if (systemArray !== undefined) {\r\n            for (const system of systemArray) {\r\n                system[event](this);\r\n            }\r\n        }\r\n    }\r\n\r\n    newEntity(owner, enable) {\r\n        const entity = new Entity(owner, enable);\r\n        this[$entity].useEntity.add(entity);\r\n        this[$modify] = true;\r\n        return entity;\r\n    }\r\n    delEntity(entity) {\r\n        this[$entity].delEntity.add(entity);\r\n        this[$modify] = true;\r\n    }\r\n    enableEntity(entity, value) { // TODO!!!\r\n        if (value) entity[$state] |= SBIT;\r\n        else entity[$state] &= ~SBIT;\r\n        for (const comp of entity[$comp]) this.enableComp(comp, value);\r\n        for (const child of entity[$child]) this.enableEntity(child, value);\r\n    }\r\n    getEntity() { return this[$entity].useEntity; }\r\n    getEntitiesByName(name, result = []) {\r\n        result.length = 0;\r\n        for (const entity of this[$entity].useEntity) {\r\n            if (entity[$name] === name) result.push(entity);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    newComp(CompClass, owner, enable, conf) {\r\n        const componentClass = this[$comp].get(CompClass);\r\n        if (componentClass === undefined) throw new Error('Component class not registered');\r\n        const comp = new CompClass(owner, enable, conf);\r\n        componentClass.newComp.add(comp);\r\n        this[$modify] = true;\r\n        return comp;\r\n    }\r\n    delComp(comp) {\r\n        this[$comp].get(comp.constructor).delComp.add(comp);\r\n        this[$modify] = true;\r\n    }\r\n    enableComp(comp, value) { // TODO!!!\r\n        if (value) comp[$state] |= SBIT;\r\n        else comp[$state] &= ~SBIT;\r\n        this[$comp].get(comp.constructor).modComp.add(comp);\r\n        this[$modify] = true;\r\n    }\r\n    getComp(compClass) { return this[$comp].get(compClass).useComp; }\r\n    getNewComp(compClass) { return this[$comp].get(compClass).newComp; }\r\n    getDelComp(compClass) { return this[$comp].get(compClass).delComp; }\r\n    getModComp(compClass) { return this[$comp].get(compClass).modComp; }\r\n    regComp(compClass) {\r\n        if (compClass[$name] === undefined) throw new Error('Component class not named');\r\n        if (this[$comp].has(compClass)) throw new Error('Component class already used');\r\n        this[$comp].set(compClass, {\r\n            newComp: new Set(),\r\n            useComp: new Set(),\r\n            delComp: new Set(),\r\n            modComp: new Set()\r\n        });\r\n    }\r\n    getCompClassByName(name) {\r\n        for (const compClass of this[$comp].keys()) {\r\n            if (compClass[$name] === name) return compClass;\r\n        }\r\n        throw new Error('Component class not found');\r\n    }\r\n\r\n    get gl() { return this[$gl]; }\r\n    get ext() { return this[$ext]; }\r\n    get dom() { return this[$dom]; }\r\n    get gldom() { return this[$gldom]; }\r\n    get uidom() { return this[$uidom]; }\r\n\r\n    [$new]() {\r\n        // Copy components in use\r\n        for (const compClass of this[$comp].values()) {\r\n            for (const comp of compClass.newComp) {\r\n                compClass.useComp.add(comp);\r\n                if (!comp.owner[$comp].has(comp.constructor)) comp.owner[$comp].set(comp.constructor, new Set());\r\n                comp.owner[$comp].get(comp.constructor).add(comp);\r\n            }\r\n        }\r\n\r\n        // Reload delete array\r\n        for (const entity of this[$entity].delEntity) {\r\n            for (const compMap of entity[$comp].keys()) {\r\n                for (const comp of entity[$comp].get(compMap)) {\r\n                    this.delComp(comp);\r\n                }\r\n            }\r\n            for (const child of entity[$child]) this.delEntity(child);\r\n        }\r\n    }\r\n    [$del]() {\r\n        // Delete entities\r\n        for (const entity of this[$entity].delEntity) {\r\n            this[$entity].useEntity.delete(entity);\r\n        }\r\n        this[$entity].delEntity.clear();\r\n\r\n        // Delete components\r\n        for (const compClass of this[$comp].values()) {\r\n            // Mod\r\n            // TODO!!! Enabled entity\r\n            for (const comp of compClass.modComp) {\r\n                if (comp[$state] & comp[$owner][$state] & SBIT) comp[$state] |= EBIT;\r\n                else comp[$state] &= ~EBIT;\r\n                comp[$state] &= ~NBIT;\r\n            }\r\n            // Del\r\n            for (const comp of compClass.delComp) {\r\n                compClass.useComp.delete(comp);\r\n                comp[$owner][$comp].get(comp.constructor).delete(comp);\r\n            }\r\n            compClass.newComp.clear();\r\n            compClass.delComp.clear();\r\n            compClass.modComp.clear();\r\n        }\r\n    }\r\n}\r\n","import { Component } from '../Core/Core';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class Mesh extends Component {\r\n    constructor(owner, enable, conf) {\r\n        super(owner, enable);\r\n        this.iid = -1;\r\n        this.geometry = conf.geometry;\r\n        this.material = conf.material;\r\n        this.skeleton = conf.skeleton !== undefined ? conf.skeleton : null;\r\n    }\r\n}\r\nMesh[$name] = 'Mesh';\r\n","let x2 = 0;\r\nlet y2 = 0;\r\nlet z2 = 0;\r\nlet xy = 0;\r\nlet xz = 0;\r\nlet xw = 0;\r\nlet yz = 0;\r\nlet yw = 0;\r\nlet zw = 0;\r\nlet i = 0;\r\nconst tm = new Float32Array(16);\r\n\r\nexport default class Mat4 extends Float32Array {\r\n    constructor() {\r\n        super(16);\r\n        this[0] = 1;\r\n        this[5] = 1;\r\n        this[10] = 1;\r\n        this[15] = 1;\r\n    }\r\n\r\n    copy(mat) {\r\n        for (i = 0; i < 16; i++) this[i] = mat[i];\r\n        return this;\r\n    }\r\n\r\n    identity() {\r\n        for (i = 0; i < 16; i++) this[i] = (i % 5 === 0) ? 1 : 0;\r\n        return this;\r\n    }\r\n\r\n    perspective(fov, aspect, near, far) {\r\n        this.identity();\r\n        this[15] = 0;\r\n        this[14] = -2 * far * near / (far - near);\r\n        this[11] = 1;\r\n        this[10] = (far + near) / (far - near);\r\n        this[5] = 1 / Math.tan(fov * 0.5);\r\n        this[0] = this[5] / aspect;\r\n        return this;\r\n    }\r\n\r\n    orbit(polar, azimuthal, dist, target) {\r\n        const cosa = Math.cos(azimuthal);\r\n        const sina = Math.sin(azimuthal);\r\n        const cosp = Math.cos(polar);\r\n        const sinp = Math.sin(polar);\r\n        this.identity();\r\n\r\n        this[0] = cosa;\r\n        this[4] = 0;\r\n        this[8] = sina;\r\n        this[1] = sina * sinp;\r\n        this[5] = cosp;\r\n        this[9] = -cosa * sinp;\r\n        this[2] = -sina * cosp;\r\n        this[6] = sinp;\r\n        this[10] = cosa * cosp;\r\n\r\n        this[12] = dist * (this[2] * this[0] + this[6] * this[4] + this[10] * this[8]);\r\n        this[13] = dist * (this[2] * this[1] + this[6] * this[5] + this[10] * this[9]);\r\n        this[14] = dist * (this[2] * this[2] + this[6] * this[6] + this[10] * this[10]);\r\n\r\n        this[12] -= target.x * this[0] + target.y * this[4] + target.z * this[8];\r\n        this[13] -= target.x * this[1] + target.y * this[5] + target.z * this[9];\r\n        this[14] -= target.x * this[2] + target.y * this[6] + target.z * this[10];\r\n        return this;\r\n    }\r\n\r\n    mul(mat) {\r\n        tm[0] = this[0] * mat[0] + this[1] * mat[4] + this[2] * mat[8] + this[3] * mat[12];\r\n        tm[1] = this[0] * mat[1] + this[1] * mat[5] + this[2] * mat[9] + this[3] * mat[13];\r\n        tm[2] = this[0] * mat[2] + this[1] * mat[6] + this[2] * mat[10] + this[3] * mat[14];\r\n        tm[3] = this[0] * mat[3] + this[1] * mat[7] + this[2] * mat[11] + this[3] * mat[15];\r\n        tm[4] = this[4] * mat[0] + this[5] * mat[4] + this[6] * mat[8] + this[7] * mat[12];\r\n        tm[5] = this[4] * mat[1] + this[5] * mat[5] + this[6] * mat[9] + this[7] * mat[13];\r\n        tm[6] = this[4] * mat[2] + this[5] * mat[6] + this[6] * mat[10] + this[7] * mat[14];\r\n        tm[7] = this[4] * mat[3] + this[5] * mat[7] + this[6] * mat[11] + this[7] * mat[15];\r\n        tm[8] = this[8] * mat[0] + this[9] * mat[4] + this[10] * mat[8] + this[11] * mat[12];\r\n        tm[9] = this[8] * mat[1] + this[9] * mat[5] + this[10] * mat[9] + this[11] * mat[13];\r\n        tm[10] = this[8] * mat[2] + this[9] * mat[6] + this[10] * mat[10] + this[11] * mat[14];\r\n        tm[11] = this[8] * mat[3] + this[9] * mat[7] + this[10] * mat[11] + this[11] * mat[15];\r\n        tm[12] = this[12] * mat[0] + this[13] * mat[4] + this[14] * mat[8] + this[15] * mat[12];\r\n        tm[13] = this[12] * mat[1] + this[13] * mat[5] + this[14] * mat[9] + this[15] * mat[13];\r\n        tm[14] = this[12] * mat[2] + this[13] * mat[6] + this[14] * mat[10] + this[15] * mat[14];\r\n        tm[15] = this[12] * mat[3] + this[13] * mat[7] + this[14] * mat[11] + this[15] * mat[15];\r\n        for (i = 0; i < 16; i++) this[i] = tm[i];\r\n        return this;\r\n    }\r\n\r\n    premul(mat) {\r\n        tm[0] = mat[0] * this[0] + mat[1] * this[4] + mat[2] * this[8] + mat[3] * this[12];\r\n        tm[1] = mat[0] * this[1] + mat[1] * this[5] + mat[2] * this[9] + mat[3] * this[13];\r\n        tm[2] = mat[0] * this[2] + mat[1] * this[6] + mat[2] * this[10] + mat[3] * this[14];\r\n        tm[3] = mat[0] * this[3] + mat[1] * this[7] + mat[2] * this[11] + mat[3] * this[15];\r\n        tm[4] = mat[4] * this[0] + mat[5] * this[4] + mat[6] * this[8] + mat[7] * this[12];\r\n        tm[5] = mat[4] * this[1] + mat[5] * this[5] + mat[6] * this[9] + mat[7] * this[13];\r\n        tm[6] = mat[4] * this[2] + mat[5] * this[6] + mat[6] * this[10] + mat[7] * this[14];\r\n        tm[7] = mat[4] * this[3] + mat[5] * this[7] + mat[6] * this[11] + mat[7] * this[15];\r\n        tm[8] = mat[8] * this[0] + mat[9] * this[4] + mat[10] * this[8] + mat[11] * this[12];\r\n        tm[9] = mat[8] * this[1] + mat[9] * this[5] + mat[10] * this[9] + mat[11] * this[13];\r\n        tm[10] = mat[8] * this[2] + mat[9] * this[6] + mat[10] * this[10] + mat[11] * this[14];\r\n        tm[11] = mat[8] * this[3] + mat[9] * this[7] + mat[10] * this[11] + mat[11] * this[15];\r\n        tm[12] = mat[12] * this[0] + mat[13] * this[4] + mat[14] * this[8] + mat[15] * this[12];\r\n        tm[13] = mat[12] * this[1] + mat[13] * this[5] + mat[14] * this[9] + mat[15] * this[13];\r\n        tm[14] = mat[12] * this[2] + mat[13] * this[6] + mat[14] * this[10] + mat[15] * this[14];\r\n        tm[15] = mat[12] * this[3] + mat[13] * this[7] + mat[14] * this[11] + mat[15] * this[15];\r\n        for (i = 0; i < 16; i++) this[i] = tm[i];\r\n        return this;\r\n    }\r\n\r\n    fromTRS(pos, rot, scl) {\r\n        this[3] = 0;\r\n        this[7] = 0;\r\n        this[11] = 0;\r\n        this[15] = 1;\r\n\r\n        x2 = 2 * rot.x * rot.x;\r\n        y2 = 2 * rot.y * rot.y;\r\n        z2 = 2 * rot.z * rot.z;\r\n        xy = 2 * rot.x * rot.y;\r\n        xz = 2 * rot.x * rot.z;\r\n        xw = 2 * rot.x * rot.w;\r\n        yz = 2 * rot.y * rot.z;\r\n        yw = 2 * rot.y * rot.w;\r\n        zw = 2 * rot.z * rot.w;\r\n\r\n        this[0] = scl.x * (1 - y2 - z2);\r\n        this[1] = scl.x * (xy + zw);\r\n        this[2] = scl.x * (xz - yw);\r\n        this[4] = scl.y * (xy - zw);\r\n        this[5] = scl.y * (1 - x2 - z2);\r\n        this[6] = scl.y * (yz + xw);\r\n        this[8] = scl.z * (xz + yw);\r\n        this[9] = scl.z * (yz - xw);\r\n        this[10] = scl.z * (1 - x2 - y2);\r\n\r\n        this[12] = pos.x;\r\n        this[13] = pos.y;\r\n        this[14] = pos.z;\r\n        return this;\r\n    }\r\n\r\n    fromTRSC(pos, rot, scl) {\r\n        this[3] = 0;\r\n        this[7] = 0;\r\n        this[11] = 0;\r\n        this[15] = 1;\r\n\r\n        x2 = 2 * rot.x * rot.x;\r\n        y2 = 2 * rot.y * rot.y;\r\n        z2 = 2 * rot.z * rot.z;\r\n        xy = 2 * (-rot.x) * (-rot.y);\r\n        xz = 2 * (-rot.x) * (-rot.z);\r\n        xw = 2 * (-rot.x) * (-rot.w);\r\n        yz = 2 * (-rot.y) * (-rot.z);\r\n        yw = 2 * (-rot.y) * (-rot.w);\r\n        zw = 2 * (-rot.z) * (-rot.w);\r\n\r\n        this[0] = (1 - y2 - z2) / scl.x;\r\n        this[1] = (xy + zw) / scl.x;\r\n        this[2] = (xz - yw) / scl.x;\r\n        this[4] = (xy - zw) / scl.y;\r\n        this[5] = (1 - x2 - z2) / scl.y;\r\n        this[6] = (yz + xw) / scl.y;\r\n        this[8] = (xz + yw) / scl.z;\r\n        this[9] = (yz - xw) / scl.z;\r\n        this[10] = (1 - x2 - y2) / scl.z;\r\n\r\n        // this[12] = -pos.x;\r\n        // this[13] = -pos.y;\r\n        // this[14] = -pos.z;\r\n        this[12] = -pos.x * this[0] - pos.y * this[4] - pos.z * this[8];\r\n        this[13] = -pos.x * this[1] - pos.y * this[5] - pos.z * this[9];\r\n        this[14] = -pos.x * this[2] - pos.y * this[6] - pos.z * this[10];\r\n        return this;\r\n    }\r\n}\r\n","import { Component } from '../Core/Core';\r\nimport Mat4 from '../Math/Mat4';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class Camera extends Component {\r\n    constructor(owner, enable, conf) {\r\n        super(owner, enable);\r\n        this.aspect = conf.aspect || 1;\r\n        this.fov = conf.fov || 0.7;\r\n        this.near = conf.near || 1;\r\n        this.far = conf.far || 1000;\r\n        this.pmat = new Mat4();\r\n        this.wmat = new Mat4();\r\n    }\r\n}\r\nCamera[$name] = 'Camera';\r\n","let length = 0;\r\nlet tx = 0;\r\nlet ty = 0;\r\nlet tz = 0;\r\nlet tw = 0;\r\nexport default class Vec3 {\r\n    constructor(x = 0, y = 0, z = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n\r\n    copy(vec) {\r\n        this.x = vec.x;\r\n        this.y = vec.y;\r\n        this.z = vec.z;\r\n        return this;\r\n    }\r\n\r\n    set(x, y, z) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        return this;\r\n    }\r\n\r\n    normalize() {\r\n        length = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n        this.x /= length;\r\n        this.y /= length;\r\n        this.z /= length;\r\n        return this;\r\n    }\r\n\r\n    abs() {\r\n        this.x = Math.abs(this.x);\r\n        this.y = Math.abs(this.y);\r\n        this.z = Math.abs(this.z);\r\n        return this;\r\n    }\r\n\r\n    min(vec) {\r\n        this.x = Math.min(this.x, vec.x);\r\n        this.y = Math.min(this.y, vec.y);\r\n        this.z = Math.min(this.z, vec.z);\r\n        return this;\r\n    }\r\n\r\n    max(vec) {\r\n        this.x = Math.max(this.x, vec.x);\r\n        this.y = Math.max(this.y, vec.y);\r\n        this.z = Math.max(this.z, vec.z);\r\n        return this;\r\n    }\r\n\r\n    mins(scale) {\r\n        this.x = Math.min(this.x, scale);\r\n        this.y = Math.min(this.y, scale);\r\n        this.z = Math.min(this.z, scale);\r\n        return this;\r\n    }\r\n\r\n    maxs(scale) {\r\n        this.x = Math.max(this.x, scale);\r\n        this.y = Math.max(this.y, scale);\r\n        this.z = Math.max(this.z, scale);\r\n        return this;\r\n    }\r\n\r\n    add(vec) {\r\n        this.x += vec.x;\r\n        this.y += vec.y;\r\n        this.z += vec.z;\r\n        return this;\r\n    }\r\n\r\n    sub(vec) {\r\n        this.x -= vec.x;\r\n        this.y -= vec.y;\r\n        this.z -= vec.z;\r\n        return this;\r\n    }\r\n\r\n    addScaledVec(vec, scale) {\r\n        this.x += vec.x * scale;\r\n        this.y += vec.y * scale;\r\n        this.z += vec.z * scale;\r\n        return this;\r\n    }\r\n\r\n    applyQuat(quat) {\r\n        tx = quat.w * this.x + quat.y * this.z - quat.z * this.y;\r\n        ty = quat.w * this.y + quat.z * this.x - quat.x * this.z;\r\n        tz = quat.w * this.z + quat.x * this.y - quat.y * this.x;\r\n        tw = -quat.x * this.x - quat.y * this.y - quat.z * this.z;\r\n        this.x = tx * quat.w - tw * quat.x - ty * quat.z + tz * quat.y;\r\n        this.y = ty * quat.w - tw * quat.y - tz * quat.x + tx * quat.z;\r\n        this.z = tz * quat.w - tw * quat.z - tx * quat.y + ty * quat.x;\r\n        return this;\r\n    }\r\n\r\n    mulNumber(num) {\r\n        this.x *= num;\r\n        this.y *= num;\r\n        this.z *= num;\r\n        return this;\r\n    }\r\n\r\n    get length() {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n    }\r\n}\r\n","import { Component } from '../Core/Core';\r\nimport Vec3 from '../Math/Vec3';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class Movement extends Component {\r\n    constructor(owner, enable, conf) {\r\n        super(owner, enable);\r\n        this.speed = conf.speed !== undefined ? conf.speed : 0;\r\n        this.linear = conf.linear !== undefined ? conf.linear : true;\r\n        this.direction = new Vec3(0, 0, -1);\r\n        if (conf.direction !== undefined) this.direction.copy(conf.direction);\r\n    }\r\n}\r\nMovement[$name] = 'Movement';\r\n","import { Component } from '../Core/Core';\r\nimport Vec3 from '../Math/Vec3';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class Rotation extends Component {\r\n    constructor(owner, enable, conf) {\r\n        super(owner, enable);\r\n        this.axis = new Vec3();\r\n        this.angle = conf.angle || 0;\r\n        if (conf.axis) this.axis.copy(conf.axis);\r\n    }\r\n}\r\nRotation[$name] = 'Rotation';\r\n","import { Component } from '../Core/Core';\r\nimport Vec3 from '../Math/Vec3';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class ATrigger extends Component {\r\n    constructor(owner, enable, conf) {\r\n        super(owner, enable);\r\n        this.pos = new Vec3();\r\n        this.next = null;\r\n        this.inner = [];\r\n        this.mask = conf.mask !== undefined ? conf.mask : 0xFFFFFFFF;\r\n        this.offset = new Vec3();\r\n        if (conf.offset !== undefined) this.offset.copy(conf.offset);\r\n        this.size = new Vec3();\r\n        if (conf.size !== undefined) this.size.copy(conf.size);\r\n    }\r\n}\r\nATrigger[$name] = 'ATrigger';\r\n","import { Component } from '../Core/Core';\r\nimport Vec3 from '../Math/Vec3';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class STrigger extends Component {\r\n    constructor(owner, enable, conf) {\r\n        super(owner, enable);\r\n        this.pos = new Vec3();\r\n        this.next = null;\r\n        this.inner = [];\r\n        this.mask = conf.mask !== undefined ? conf.mask : 0xFFFFFFFF;\r\n        this.offset = new Vec3();\r\n        if (conf.offset !== undefined) this.offset.copy(conf.offset);\r\n        this.radius = conf.radius !== undefined ? conf.radius : 0;\r\n    }\r\n}\r\nSTrigger[$name] = 'STrigger';\r\n","import { Component } from '../Core/Core';\r\nimport Vec3 from '../Math/Vec3';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class Animator extends Component {\r\n    constructor(owner, enable, conf) {\r\n        super(owner, enable);\r\n        this.skeleton = conf.skeleton !== undefined ? conf.skeleton : null;\r\n        this.animation = conf.animation !== undefined ? conf.animation : null;\r\n        this.loop = true;\r\n        this.stop = false;\r\n        this.time = 0;\r\n        this.key = new Vec3(); // LayerKey, StartKey, DeltaKey\r\n    }\r\n}\r\nAnimator[$name] = 'Animator';\r\n","let tmp = null;\r\n\r\nexport default class Quat {\r\n    constructor(x = 0, y = 0, z = 0, w = 1) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n\r\n    copy(quat) {\r\n        this.x = quat.x;\r\n        this.y = quat.y;\r\n        this.z = quat.z;\r\n        this.w = quat.w;\r\n        return this;\r\n    }\r\n\r\n    set(x, y, z, w) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n        return this;\r\n    }\r\n\r\n    mul(quat) {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n        this.x = w * quat.x + x * quat.w + y * quat.z - z * quat.y;\r\n        this.y = w * quat.y - x * quat.z + y * quat.w + z * quat.x;\r\n        this.z = w * quat.z + x * quat.y - y * quat.x + z * quat.w;\r\n        this.w = w * quat.w - x * quat.x - y * quat.y - z * quat.z;\r\n        return this;\r\n    }\r\n\r\n    premul(quat) {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n        this.x = quat.w * x + quat.x * w + quat.y * z - quat.z * y;\r\n        this.y = quat.w * y - quat.x * z + quat.y * w + quat.z * x;\r\n        this.z = quat.w * z + quat.x * y - quat.y * x + quat.z * w;\r\n        this.w = quat.w * w - quat.x * x - quat.y * y - quat.z * z;\r\n        return this;\r\n    }\r\n\r\n    fromAxisAngle(axis, angle) {\r\n        tmp = Math.sin(angle * 0.5);\r\n        this.x = axis.x * tmp;\r\n        this.y = axis.y * tmp;\r\n        this.z = axis.z * tmp;\r\n        this.w = Math.cos(angle * 0.5);\r\n        return this;\r\n    }\r\n}\r\n","import { Component } from '../Core/Core';\r\nimport Vec3 from '../Math/Vec3';\r\nimport Quat from '../Math/Quat';\r\nimport Mat4 from '../Math/Mat4';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class Transform extends Component {\r\n    constructor(owner, enable, conf) {\r\n        super(owner, enable);\r\n        this.position = new Vec3();\r\n        this.orientation = new Quat();\r\n        this.scale = new Vec3(1, 1, 1);\r\n        if (conf.scale) this.scale.copy(conf.scale);\r\n        if (conf.position) this.position.copy(conf.position);\r\n        if (conf.orientation) this.orientation.copy(conf.orientation);\r\n\r\n        this.lmat = new Mat4();\r\n        this.wmat = new Mat4();\r\n    }\r\n\r\n    worldPosition(res) {\r\n        res.x = this.wmat[12];\r\n        res.y = this.wmat[13];\r\n        res.z = this.wmat[14];\r\n        return res;\r\n    }\r\n}\r\nTransform[$name] = 'Transform';\r\n","import { Component } from '../Core/Core';\r\nimport Vec3 from '../Math/Vec3';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class OrbitControl extends Component {\r\n    constructor(owner, enable, conf) {\r\n        super(owner, enable);\r\n        this.polar = conf.polar || 0;\r\n        this.azimuthal = conf.azimuthal || 0;\r\n        this.distance = conf.distance || 0;\r\n        this.forward = new Vec3();\r\n        this.speed = conf.speed || 0.004;\r\n        this.nupd = true;\r\n        this.afrozen = conf.afrozen || false;\r\n        this.pfrozen = conf.pfrozen || false;\r\n        this.dfrozen = conf.dfrozen || false;\r\n    }\r\n}\r\nOrbitControl[$name] = 'OrbitControl';\r\n","const $name = Symbol.for('name');\r\n\r\nexport default class TimeSystem {\r\n    constructor(core) {\r\n        this[$name] = 'Time';\r\n        core.regEvent('onStartFrame', this);\r\n        this._time = performance.now();\r\n        this._currentTime = 0;\r\n        this._deltaTime = 0;\r\n        this._timeScale = 1;\r\n    }\r\n\r\n    onStartFrame() {\r\n        this._deltaTime = Math.max((performance.now() - this._time), 0.00001) * this._timeScale * 0.001;\r\n        this._time = performance.now();\r\n        this._currentTime += this._deltaTime;\r\n    }\r\n\r\n    get time() { return this._currentTime; }\r\n    get deltaTime() { return this._deltaTime; }\r\n    get timeScale() { return this._timeScale; }\r\n    set timeScale(scale) { this._timeScale = scale; }\r\n}\r\n","const $name = Symbol.for('name');\r\n\r\nlet mask = null;\r\nlet element = null;\r\nexport default class InputSystem {\r\n    constructor(core) {\r\n        this[$name] = 'Input';\r\n        core.regEvent('onStartFrame', this);\r\n\r\n        this._up = new Uint32Array(8);\r\n        this._down = new Uint32Array(8);\r\n        this._state = new Uint32Array(8);\r\n        this._pos = { x: 0, y: 0 };\r\n        this._dpos = { x: 0, y: 0 };\r\n        this._aup = new Uint32Array(8);\r\n        this._adown = new Uint32Array(8);\r\n        this._astate = new Uint32Array(8);\r\n        this._apos = { x: 0, y: 0 };\r\n        this._awheel = 0;\r\n        this._pwheel = 0;\r\n        this._dposflag = true;\r\n\r\n        const dom = core.dom;\r\n        dom.setAttribute('tabindex', 1);\r\n        dom.addEventListener('keyup', (e) => { this.kUp(e); });\r\n        dom.addEventListener('keydown', (e) => { this.kDown(e); });\r\n        dom.addEventListener('mouseup', (e) => { this.mUp(e); });\r\n        dom.addEventListener('mousedown', (e) => { this.mDown(e); });\r\n        dom.addEventListener('mousemove', (e) => { this.mMove(e); });\r\n        dom.addEventListener('mousewheel', (e) => { this.mWheel(e); });\r\n        dom.addEventListener('touchend', (e) => { this.tEnd(e); });\r\n        dom.addEventListener('touchstart', (e) => { this.tStart(e); });\r\n        dom.addEventListener('touchmove', (e) => { this.tMove(e); });\r\n        dom.addEventListener('contextmenu', (e) => { e.preventDefault(); });\r\n    }\r\n\r\n    onStartFrame() {\r\n        for (let i = 0; i < 8; i++) {\r\n            this._up[i] = this._aup[i];\r\n            this._down[i] = this._adown[i];\r\n            this._state[i] = this._astate[i];\r\n            this._aup[i] = 0;\r\n            this._adown[i] = 0;\r\n        }\r\n        this._dpos.x = this._dposflag ? this._apos.x - this._pos.x : 0;\r\n        this._dpos.y = this._dposflag ? this._apos.y - this._pos.y : 0;\r\n        this._pos.x = this._apos.x;\r\n        this._pos.y = this._apos.y;\r\n        this._pwheel = this._awheel;\r\n        this._awheel = 0;\r\n        this._dposflag = true;\r\n    }\r\n\r\n    asyncDown(keyCode) {\r\n        mask = 1 << (keyCode % 32);\r\n        element = Math.floor(keyCode / 32);\r\n        this._adown[element] |= mask & ~this._astate[element];\r\n        this._astate[element] |= mask;\r\n    }\r\n    asyncUp(keyCode) {\r\n        mask = 1 << (keyCode % 32);\r\n        element = Math.floor(keyCode / 32);\r\n        this._aup[element] |= mask;\r\n        this._astate[element] &= ~mask;\r\n    }\r\n\r\n    kUp(e) {\r\n        this.asyncUp(e.keyCode);\r\n    }\r\n    kDown(e) {\r\n        this.asyncDown(e.keyCode);\r\n        if (e.keyCode !== 116) e.preventDefault();\r\n    }\r\n    mUp(e) {\r\n        switch (e.button) {\r\n            case 0: e.keyCode = 1; break;\r\n            case 1: e.keyCode = 4; break;\r\n            case 2: e.keyCode = 2; break;\r\n            default: e.keyCode = 0; break;\r\n        }\r\n        this.asyncUp(e.keyCode);\r\n    }\r\n    mDown(e) {\r\n        switch (e.button) {\r\n            case 0: e.keyCode = 1; break;\r\n            case 1: e.keyCode = 4; break;\r\n            case 2: e.keyCode = 2; break;\r\n            default: e.keyCode = 0; break;\r\n        }\r\n        this.asyncDown(e.keyCode);\r\n    }\r\n    mMove(e) {\r\n        this._apos.x = e.clientX;\r\n        this._apos.y = e.clientY;\r\n    }\r\n    mWheel(e) {\r\n        this._awheel += e.wheelDelta / 120;\r\n    }\r\n    tStart(e) {\r\n        this._apos.x = e.changedTouches[0].clientX;\r\n        this._apos.y = e.changedTouches[0].clientY;\r\n        this.asyncDown(1);\r\n        this._dposflag = false;\r\n        e.preventDefault();\r\n    }\r\n    tEnd(e) {\r\n        this._apos.x = e.changedTouches[0].clientX;\r\n        this._apos.y = e.changedTouches[0].clientY;\r\n        this.asyncUp(1);\r\n    }\r\n    tMove(e) {\r\n        this._apos.x = e.changedTouches[0].clientX;\r\n        this._apos.y = e.changedTouches[0].clientY;\r\n    }\r\n\r\n    keyUp(key) {\r\n        return (this._up[Math.floor(key / 32)] >> (key % 32)) & 0x1;\r\n    }\r\n    keyDown(key) {\r\n        return (this._down[Math.floor(key / 32)] >> (key % 32)) & 0x1;\r\n    }\r\n    keyState(key) {\r\n        return (this._state[Math.floor(key / 32)] >> (key % 32)) & 0x1;\r\n    }\r\n    mousePos() {\r\n        return this._pos;\r\n    }\r\n    mouseDeltaPos() {\r\n        return this._dpos;\r\n    }\r\n    mouseWheel() {\r\n        return this._pwheel;\r\n    }\r\n\r\n    get VK_LBUTTON() { return 1; }\r\n    get VK_RBUTTON() { return 2; }\r\n    get VK_MBUTTON() { return 4; }\r\n    get VK_XBUTTON1() { return 5; }\r\n    get VK_XBUTTON2() { return 6; }\r\n\r\n    get VK_BACK() { return 8; }\r\n    get VK_TAB() { return 9; }\r\n\r\n    get VK_ESCAPE() { return 27; }\r\n\r\n    get VK_SPACE() { return 32; }\r\n    get VK_PAGEUP() { return 33; }\r\n    get VK_PAGEDOWN() { return 34; }\r\n    get VK_END() { return 35; }\r\n    get VK_HOME() { return 36; }\r\n    get VK_LEFT() { return 37; }\r\n    get VK_UP() { return 38; }\r\n    get VK_RIGHT() { return 39; }\r\n    get VK_DOWN() { return 40; }\r\n\r\n    get VK_0() { return 48; }\r\n    get VK_1() { return 49; }\r\n    get VK_2() { return 50; }\r\n    get VK_3() { return 51; }\r\n    get VK_4() { return 52; }\r\n    get VK_5() { return 53; }\r\n    get VK_6() { return 54; }\r\n    get VK_7() { return 55; }\r\n    get VK_8() { return 56; }\r\n    get VK_9() { return 57; }\r\n\r\n    get VK_A() { return 65; }\r\n    get VK_B() { return 66; }\r\n    get VK_C() { return 67; }\r\n    get VK_D() { return 68; }\r\n    get VK_E() { return 69; }\r\n    get VK_F() { return 70; }\r\n    get VK_G() { return 71; }\r\n    get VK_H() { return 72; }\r\n    get VK_I() { return 73; }\r\n    get VK_J() { return 74; }\r\n    get VK_K() { return 75; }\r\n    get VK_L() { return 76; }\r\n    get VK_M() { return 77; }\r\n    get VK_N() { return 78; }\r\n    get VK_O() { return 79; }\r\n    get VK_P() { return 80; }\r\n    get VK_Q() { return 81; }\r\n    get VK_R() { return 82; }\r\n    get VK_S() { return 83; }\r\n    get VK_T() { return 84; }\r\n    get VK_U() { return 85; }\r\n    get VK_V() { return 86; }\r\n    get VK_W() { return 87; }\r\n    get VK_X() { return 88; }\r\n    get VK_Y() { return 89; }\r\n    get VK_Z() { return 90; }\r\n\r\n    get VK_N0() { return 96; }\r\n    get VK_N1() { return 97; }\r\n    get VK_N2() { return 98; }\r\n    get VK_N3() { return 99; }\r\n    get VK_N4() { return 100; }\r\n    get VK_N5() { return 101; }\r\n    get VK_N6() { return 102; }\r\n    get VK_N7() { return 103; }\r\n    get VK_N8() { return 104; }\r\n    get VK_N9() { return 105; }\r\n\r\n    get VK_F1() { return 112; }\r\n    get VK_F2() { return 113; }\r\n    get VK_F3() { return 114; }\r\n    get VK_F4() { return 115; }\r\n    get VK_F5() { return 116; }\r\n    get VK_F6() { return 117; }\r\n    get VK_F7() { return 118; }\r\n    get VK_F8() { return 119; }\r\n    get VK_F9() { return 120; }\r\n    get VK_F10() { return 121; }\r\n    get VK_F11() { return 122; }\r\n    get VK_F12() { return 123; }\r\n    get VK_F13() { return 124; }\r\n    get VK_F14() { return 125; }\r\n    get VK_F15() { return 126; }\r\n    get VK_F16() { return 127; }\r\n    get VK_F17() { return 128; }\r\n    get VK_F18() { return 129; }\r\n    get VK_F19() { return 130; }\r\n    get VK_F20() { return 131; }\r\n    get VK_F21() { return 132; }\r\n    get VK_F22() { return 133; }\r\n    get VK_F23() { return 134; }\r\n    get VK_F24() { return 135; }\r\n}\r\n","const $name = Symbol.for('name');\r\n\r\nexport default class ScreenSystem {\r\n    constructor(core) {\r\n        this[$name] = 'Screen';\r\n        core.regEvent('onStartFrame', this);\r\n        this.curWidth = 1;\r\n        this.curHeight = 1;\r\n        this.newWidth = 1;\r\n        this.newHeight = 1;\r\n        this.onscreen = false;\r\n        this.pr = window.devicePixelRatio || 1;\r\n    }\r\n\r\n    onStartFrame(core) {\r\n        performance.mark('screens');\r\n        this.newWidth = core.dom.clientWidth * this.pr;\r\n        this.newHeight = core.dom.clientHeight * this.pr;\r\n        this.onscreen = false;\r\n        if (this.curWidth !== this.newWidth) { this.curWidth = this.newWidth; this.onscreen = true; }\r\n        if (this.curHeight !== this.newHeight) { this.curHeight = this.newHeight; this.onscreen = true; }\r\n        if (this.onscreen) core.fireEvent('onScreen');\r\n        performance.mark('screene');\r\n        performance.measure('screen', 'screens', 'screene');\r\n    }\r\n\r\n    get width() { return this.curWidth; }\r\n    get height() { return this.curHeight; }\r\n    get widthNPR() { return this.curWidth / this.pr; }\r\n    get heightNPR() { return this.curHeight / this.pr; }\r\n}\r\n","const $k1 = Symbol('k1');\r\nconst $in = Symbol('in');\r\nconst $it1 = Symbol('it1');\r\nconst $it2 = Symbol('it2');\r\n\r\nlet temp = null;\r\nexport default class DMap {\r\n    constructor() {\r\n        this[$in] = new Map();\r\n        this[$it1] = null;\r\n        this[$it2] = null;\r\n    }\r\n\r\n    start() {\r\n        this[$it1] = null;\r\n        this[$it2] = null;\r\n    }\r\n\r\n    next(ret) {\r\n        if (!this[$it1]) this[$it1] = this[$in][Symbol.iterator]();\r\n\r\n        while (true) {\r\n            if (!this[$it2]) {\r\n                temp = this[$it1].next();\r\n                if (temp.done) {\r\n                    this[$it1] = null;\r\n                    this[$it2] = null;\r\n                    return null;\r\n                }\r\n                this[$k1] = temp.value[0];\r\n                this[$it2] = temp.value[1][Symbol.iterator]();\r\n            }\r\n\r\n            temp = this[$it2].next();\r\n            if (!temp.done) {\r\n                ret.k1 = this[$k1];\r\n                ret.k2 = temp.value[0];\r\n                ret.value = temp.value[1];\r\n                return ret;\r\n            }\r\n            this[$it2] = null;\r\n        }\r\n    }\r\n\r\n    set(k1, k2, value) {\r\n        if (this[$in].has(k1)) {\r\n            temp = this[$in].get(k1);\r\n        } else {\r\n            temp = new Map();\r\n            this[$in].set(k1, temp);\r\n        }\r\n        temp.set(k2, value);\r\n    }\r\n\r\n    get(k1, k2) {\r\n        temp = this[$in].get(k1);\r\n        if (temp) {\r\n            return temp.get(k2);\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    has(k1, k2) {\r\n        temp = this[$in].get(k1);\r\n        if (temp) {\r\n            return temp.has(k2);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    delete(k1, k2) {\r\n        temp = this[$in].get(k1);\r\n        if (temp) {\r\n            return temp.delete(k2);\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","const BATCH_SIZE = 64;\r\n\r\nexport default class Batch {\r\n    constructor(core, material, geometry, ibo, offset) {\r\n        this.mat = material;\r\n        this.geo = geometry;\r\n        this.ibo = ibo;\r\n        this.offset = offset * BATCH_SIZE;\r\n        this.size = 0;\r\n        this.vao = core.ext.vao.createVertexArrayOES();\r\n\r\n        // vao\r\n        const gl = core.gl;\r\n        const shader = this.mat.shader;\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.geo.vbo);\r\n        for (const attr in this.attribute) {\r\n            if (shader.attribute[attr] !== undefined) {\r\n                gl.enableVertexAttribArray(shader.attribute[attr]);\r\n                gl.vertexAttribPointer(\r\n                    shader.attribute[attr],\r\n                    this.attribute[attr].size,\r\n                    this.attribute[attr].type,\r\n                    false,\r\n                    this.attribute[attr].stride,\r\n                    this.attribute[attr].offset\r\n                );\r\n            }\r\n        }\r\n\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.geo.ebo);\r\n\r\n        // instance attr\r\n    }\r\n\r\n    add() {\r\n        this.size++;\r\n        if (this.size > BATCH_SIZE) throw new Error('BATCH_SIZE ERROR');\r\n        return this.offset + this.size - 1;\r\n    }\r\n\r\n    draw(core) {\r\n        core.ext.vao.bindVertexArrayOES(this.vao);\r\n        core.ext.inst.drawElementsInstancedANGLE(core.gl.TRIANGLES, this.geo.length, core.gl.UNSIGNED_SHORT, 0, this.size);\r\n    }\r\n}\r\n","import Mesh from '../Components/Mesh';\r\nimport Camera from '../Components/Camera';\r\nimport Transform from '../Components/Transform';\r\nimport DMap from '../Math/DMap';\r\nimport Batch from '../Math/Batch';\r\n// import Animator from '../Components/Animator';\r\n\r\nconst $name = Symbol.for('name');\r\nconst IBO_SIZE = 256 * 1024;\r\n\r\nlet batch = null;\r\nlet screen = null;\r\nlet material = null;\r\nlet geometry = null;\r\nlet transform = null;\r\n// let animator = null;\r\n// let skeleton = null;\r\nexport default class RenderSystem {\r\n    constructor(core) {\r\n        this[$name] = 'Render';\r\n        core.regEvent('onStart', this);\r\n        core.regEvent('onScreen', this);\r\n        core.regEvent('onRender', this);\r\n        core.regEvent('onModify', this);\r\n        this.camera = null;\r\n        this.envMesh = null;\r\n        this.batches = new DMap();\r\n        this.bid = 0;\r\n        console.log(this.batches);\r\n    }\r\n\r\n    onStart(core) {\r\n        core.gl.clearColor(0.7, 0.65, 0.6, 1);\r\n    }\r\n\r\n    onScreen(core) {\r\n        screen = core.getSystem('Screen');\r\n        core.gl.viewport(0, 0, screen.width, screen.height);\r\n        core.gldom.width = screen.width;\r\n        core.gldom.height = screen.height;\r\n    }\r\n\r\n    onRender(core) {\r\n        performance.mark('rnds');\r\n        core.gl.clear(core.gl.COLOR_BUFFER_BIT | core.gl.DEPTH_BUFFER_BIT);\r\n\r\n        if (this.camera) {\r\n            if (this.envMesh) {\r\n                material = core.getRes('material', this.envMesh.material);\r\n                material.use(core);\r\n                core.getRes('geometry', this.envMesh.geometry).use(core, material.shader);\r\n            }\r\n\r\n            for (const comp of core.getComp(Mesh)) {\r\n                if (comp.disable) continue;\r\n                transform = comp.owner.getCompOne(Transform);\r\n                material = core.getRes('material', comp.material);\r\n                material.use(core);\r\n                material.shader.setUniform(core, 'PM', this.camera.pmat);\r\n                material.shader.setUniform(core, 'WM', this.camera.wmat);\r\n                material.shader.setUniform(core, 'OM', transform.wmat);\r\n\r\n                // if (comp.skeleton) {\r\n                //     animator = comp.owner.getCompOne(Animator);\r\n                //     if (animator) {\r\n                //         skeleton = core.getRes('skeleton', animator.skeleton);\r\n                //         material.shader.setUniform(core, 'key', animator.key);\r\n                //         core.gl.uniform1i(material.shader.uniform.bones, 8);\r\n                //         core.gl.activeTexture(core.gl.TEXTURE0 + 8);\r\n                //         core.gl.bindTexture(core.gl.TEXTURE_2D, skeleton.bakeTex);\r\n                //     }\r\n                // }\r\n\r\n                core.getRes('geometry', comp.geometry).use(core, material.shader);\r\n            }\r\n        }\r\n        performance.mark('rnde');\r\n        performance.measure('render', 'rnds', 'rnde');\r\n    }\r\n\r\n    onModify(core) { // TODO!!!\r\n        for (const comp of core.getNewComp(Camera)) {\r\n            this.camera = comp;\r\n            screen = core.getSystem('Screen');\r\n            this.camera.aspect = screen.width / screen.height;\r\n            this.envMesh = comp.owner.getCompOne(Mesh);\r\n        }\r\n\r\n        for (const comp of core.getNewComp(Mesh)) {\r\n            material = core.getRes('material', comp.material);\r\n            if (material.batch) {\r\n                geometry = core.getRes('geometry', comp.geometry);\r\n                batch = this.batches.get(comp.material, comp.geometry);\r\n                if (!batch) {\r\n                    batch = new Batch(\r\n                        core,\r\n                        geometry,\r\n                        material,\r\n                        null, // TODO ibo\r\n                        this.bid\r\n                    );\r\n                    this.bid++;\r\n                    this.batches.set(comp.material, comp.geometry, batch);\r\n                }\r\n                // comp.iid = batch.add();\r\n            }\r\n        }\r\n    }\r\n\r\n    setMainCamera(camera) { this.camera = camera; }\r\n}\r\n","import Rotation from '../Components/Rotation';\r\nimport Transform from '../Components/Transform';\r\nimport Quat from '../Math/Quat';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nlet transform = null;\r\nconst quat = new Quat();\r\nexport default class RotationSystem {\r\n    constructor(core) {\r\n        this[$name] = 'Rotation';\r\n        core.regEvent('onUpdate', this);\r\n    }\r\n\r\n    onUpdate(core) {\r\n        for (const comp of core.getComp(Rotation)) {\r\n            if (comp.disable) continue;\r\n            transform = comp.owner.getCompOne(Transform);\r\n            quat.fromAxisAngle(comp.axis, comp.angle);\r\n            transform.orientation.premul(quat);\r\n        }\r\n    }\r\n}\r\n","import Movement from '../Components/Movement';\r\nimport Transform from '../Components/Transform';\r\nimport Vec3 from '../Math/Vec3';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nlet transform = null;\r\nexport default class MovementSystem {\r\n    constructor(core) {\r\n        this[$name] = 'Movement';\r\n        core.regEvent('onStart', this);\r\n        core.regEvent('onUpdate', this);\r\n        this.limearSpeed = new Vec3();\r\n    }\r\n\r\n    onStart(core) {\r\n        this.time = core.getSystem('Time');\r\n    }\r\n\r\n    onUpdate(core) {\r\n        for (const comp of core.getComp(Movement)) {\r\n            if (comp.disable) continue;\r\n            transform = comp.owner.getCompOne(Transform);\r\n            if (comp.linear && comp.owner.owner === null) transform.position.addScaledVec(this.limearSpeed, this.time.deltaTime);\r\n            transform.position.addScaledVec(comp.direction, this.time.deltaTime * comp.speed);\r\n        }\r\n    }\r\n}\r\n","import Camera from '../Components/Camera';\r\nimport Transform from '../Components/Transform';\r\nimport OrbitControl from '../Components/OrbitControl';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nlet input = null;\r\nlet camera = null;\r\nlet transform = null;\r\nexport default class OrbitControlSystem {\r\n    constructor(core) {\r\n        this[$name] = 'OrbitControl';\r\n        core.regEvent('onStart', this);\r\n        core.regEvent('onScreen', this);\r\n        core.regEvent('onLateUpdate', this);\r\n        this.count = 0;\r\n        this.screen = null;\r\n    }\r\n\r\n    onStart(core) {\r\n        this.screen = core.getSystem('Screen');\r\n        this.input = core.getSystem('Input');\r\n    }\r\n\r\n    onScreen(core) {\r\n        for (const comp of core.getComp(OrbitControl)) {\r\n            if (comp.disable) continue;\r\n            camera = comp.owner.getCompOne(Camera);\r\n            camera.aspect = this.screen.width / this.screen.height;\r\n            camera.pmat.perspective(camera.fov, camera.aspect, camera.near, camera.far);\r\n        }\r\n    }\r\n\r\n    onLateUpdate(core) { // TODO!!!\r\n        input = this.input;\r\n        for (const comp of core.getComp(OrbitControl)) {\r\n            if (comp.disable) continue;\r\n\r\n            transform = comp.owner.getCompOne(Transform);\r\n            camera = comp.owner.getCompOne(Camera);\r\n            if (input.keyState(input.VK_LBUTTON)) {\r\n                if (!comp.pfrozen) comp.polar -= input.mouseDeltaPos().y * comp.speed;\r\n                if (!comp.afrozen) comp.azimuthal -= input.mouseDeltaPos().x * comp.speed;\r\n                camera.wmat.orbit(comp.polar, comp.azimuthal, comp.distance, transform.position);\r\n            } else if (input.mouseWheel()) {\r\n                if (!comp.dfrozen) comp.distance -= input.mouseWheel() * comp.speed * 100;\r\n                camera.wmat.orbit(comp.polar, comp.azimuthal, comp.distance, transform.position);\r\n            } else if (comp.nupd) {\r\n                comp.nupd = false;\r\n                camera.wmat.orbit(comp.polar, comp.azimuthal, comp.distance, transform.position);\r\n                camera.aspect = this.screen.width / this.screen.height;\r\n                camera.pmat.perspective(camera.fov, camera.aspect, camera.near, camera.far);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import Transform from '../Components/Transform';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nlet towner = null;\r\nlet transform = null;\r\nexport default class TransformSystem {\r\n    constructor(core) {\r\n        this[$name] = 'Transform';\r\n        core.regEvent('onTransform', this);\r\n        core.regEvent('onModify', this);\r\n    }\r\n\r\n    onTransform(core) {\r\n        performance.mark('trfs');\r\n        for (const entity of core.getEntity()) {\r\n            if (entity.depth === 0) this.calcTransform(entity);\r\n        }\r\n        performance.mark('trfe');\r\n        performance.measure('transform', 'trfs', 'trfe');\r\n    }\r\n\r\n    onModify(core) { // TODO!!!\r\n        for (const comp of core.getNewComp(Transform)) {\r\n            this.calcTransform(comp.owner);\r\n        }\r\n    }\r\n\r\n    calcTransform(entity) {\r\n        transform = entity.getCompOne(Transform);\r\n        if (transform) {\r\n            transform.lmat.fromTRS(transform.position, transform.orientation, transform.scale);\r\n            transform.wmat.copy(transform.lmat);\r\n            if (entity.owner) {\r\n                towner = entity.owner.getCompOne(Transform);\r\n                transform.wmat.mul(towner.wmat);\r\n            }\r\n        }\r\n        for (const child of entity.child) this.calcTransform(child);\r\n    }\r\n}\r\n","import ATrigger from '../Components/ATrigger';\r\nimport STrigger from '../Components/STrigger';\r\nimport Transform from '../Components/Transform';\r\nimport Vec3 from '../Math/Vec3';\r\n\r\nconst $name = Symbol.for('name');\r\nconst tvec = new Vec3();\r\n\r\nfunction STS(c1, c2) {\r\n    tvec.copy(c1.pos).sub(c2.pos);\r\n    return (tvec.length - c1.radius - c2.radius) <= 0;\r\n}\r\nfunction ATS(c1, c2) {\r\n    tvec.copy(c2.pos).sub(c1.pos).abs().sub(c1.size).maxs(0);\r\n    return (tvec.length - c2.radius) <= 0;\r\n}\r\nfunction ATA(c1, c2) {\r\n    tvec.copy(c2.pos).sub(c1.pos).abs().sub(c1.size).sub(c2.size);\r\n    return (tvec.x <= 0) && (tvec.y <= 0) && (tvec.z <= 0);\r\n}\r\n\r\nclass Branch {\r\n    constructor(xl, yl, xh, yh, stp, maxStp) {\r\n        this.child = null;\r\n        this.inner = false;\r\n        this.xl = xl;\r\n        this.yl = yl;\r\n        this.xh = xh;\r\n        this.yh = yh;\r\n        this.c1 = null;\r\n        this.c2 = null;\r\n        this.bs = null;\r\n        this.es = null;\r\n        this.ba = null;\r\n        this.ea = null;\r\n\r\n        this.tx = (xl + xh) * 0.5;\r\n        this.ty = (yl + yh) * 0.5;\r\n\r\n        if (stp < maxStp) {\r\n            this.child = new Array(4);\r\n            this.child[0] = new Branch(xl, yl, this.tx, this.ty, stp + 1, maxStp);\r\n            this.child[1] = new Branch(this.tx, yl, xh, this.ty, stp + 1, maxStp);\r\n            this.child[2] = new Branch(xl, this.ty, this.tx, yh, stp + 1, maxStp);\r\n            this.child[3] = new Branch(this.tx, this.ty, xh, yh, stp + 1, maxStp);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.bs = null;\r\n        this.es = null;\r\n        this.ba = null;\r\n        this.ea = null;\r\n        if (this.child && this.inner) {\r\n            this.child[0].clear();\r\n            this.child[1].clear();\r\n            this.child[2].clear();\r\n            this.child[3].clear();\r\n        }\r\n        this.inner = false;\r\n    }\r\n\r\n    adds(comp, x, y, r) {\r\n        this.tx = (this.xl + this.xh) * 0.5;\r\n        this.ty = (this.yl + this.yh) * 0.5;\r\n\r\n        if (this.child) {\r\n            if (x + r < this.tx && y + r < this.ty) {\r\n                this.inner = true;\r\n                this.child[0].adds(comp, x, y, r);\r\n            } else if (x - r > this.tx && y + r < this.ty) {\r\n                this.inner = true;\r\n                this.child[1].adds(comp, x, y, r);\r\n            } else if (x + r < this.tx && y - r > this.ty) {\r\n                this.inner = true;\r\n                this.child[2].adds(comp, x, y, r);\r\n            } else if (x - r > this.tx && y - r > this.ty) {\r\n                this.inner = true;\r\n                this.child[3].adds(comp, x, y, r);\r\n            } else {\r\n                if (this.es === null) {\r\n                    this.bs = comp;\r\n                } else {\r\n                    this.es.next = comp;\r\n                }\r\n                this.es = comp;\r\n                comp.next = null;\r\n            }\r\n        } else {\r\n            if (this.es === null) {\r\n                this.bs = comp;\r\n            } else {\r\n                this.es.next = comp;\r\n            }\r\n            this.es = comp;\r\n            comp.next = null;\r\n        }\r\n    }\r\n\r\n    adda(comp, x, y, s) {\r\n        this.tx = (this.xl + this.xh) * 0.5;\r\n        this.ty = (this.yl + this.yh) * 0.5;\r\n\r\n        if (this.child) {\r\n            if (x + s.x < this.tx && y + s.z < this.ty) {\r\n                this.inner = true;\r\n                this.child[0].adda(comp, x, y, s);\r\n            } else if (x - s.x > this.tx && y + s.z < this.ty) {\r\n                this.inner = true;\r\n                this.child[1].adda(comp, x, y, s);\r\n            } else if (x + s.x < this.tx && y - s.z > this.ty) {\r\n                this.inner = true;\r\n                this.child[2].adda(comp, x, y, s);\r\n            } else if (x - s.x > this.tx && y - s.z > this.ty) {\r\n                this.inner = true;\r\n                this.child[3].adda(comp, x, y, s);\r\n            } else {\r\n                if (this.ea === null) {\r\n                    this.ba = comp;\r\n                } else {\r\n                    this.ea.next = comp;\r\n                }\r\n                this.ea = comp;\r\n                comp.next = null;\r\n            }\r\n        } else {\r\n            if (this.ea === null) {\r\n                this.ba = comp;\r\n            } else {\r\n                this.ea.next = comp;\r\n            }\r\n            this.ea = comp;\r\n            comp.next = null;\r\n        }\r\n    }\r\n\r\n    test() {\r\n        // STrigger\r\n        for (this.c1 = this.bs; this.c1 !== null; this.c1 = this.c1.next) {\r\n            // STrigger\r\n            for (this.c2 = this.c1.next; this.c2 !== null; this.c2 = this.c2.next) {\r\n                if (STS(this.c1, this.c2)) {\r\n                    this.c1.inner.push(this.c2);\r\n                    this.c2.inner.push(this.c1);\r\n                }\r\n            }\r\n            // ATrigger\r\n            for (this.c2 = this.ba; this.c2 !== null; this.c2 = this.c2.next) {\r\n                if (ATS(this.c2, this.c1)) {\r\n                    this.c1.inner.push(this.c2);\r\n                    this.c2.inner.push(this.c1);\r\n                }\r\n            }\r\n            // Child three\r\n            if (this.inner && this.child) {\r\n                this.child[0].tests(this.c1);\r\n                this.child[1].tests(this.c1);\r\n                this.child[2].tests(this.c1);\r\n                this.child[3].tests(this.c1);\r\n            }\r\n        }\r\n        // ATrigger\r\n        for (this.c1 = this.ba; this.c1 !== null; this.c1 = this.c1.next) {\r\n            // ATrigger\r\n            for (this.c2 = this.c1.next; this.c2 !== null; this.c2 = this.c2.next) {\r\n                if (ATA(this.c1, this.c2)) {\r\n                    this.c1.inner.push(this.c2);\r\n                    this.c2.inner.push(this.c1);\r\n                }\r\n            }\r\n            // Child three\r\n            if (this.inner && this.child) {\r\n                this.child[0].testa(this.c1);\r\n                this.child[1].testa(this.c1);\r\n                this.child[2].testa(this.c1);\r\n                this.child[3].testa(this.c1);\r\n            }\r\n        }\r\n        // Child three\r\n        if (this.inner && this.child) {\r\n            this.child[0].test();\r\n            this.child[1].test();\r\n            this.child[2].test();\r\n            this.child[3].test();\r\n        }\r\n    }\r\n\r\n    tests(comp) {\r\n        for (this.c1 = this.bs; this.c1 !== null; this.c1 = this.c1.next) {\r\n            if (STS(this.c1, comp)) {\r\n                this.c1.inner.push(comp);\r\n                comp.inner.push(this.c1);\r\n            }\r\n        }\r\n        for (this.c1 = this.ba; this.c1 !== null; this.c1 = this.c1.next) {\r\n            if (ATS(this.c1, comp)) {\r\n                this.c1.inner.push(comp);\r\n                comp.inner.push(this.c1);\r\n            }\r\n        }\r\n        if (this.inner && this.child) {\r\n            this.child[0].tests(comp);\r\n            this.child[1].tests(comp);\r\n            this.child[2].tests(comp);\r\n            this.child[3].tests(comp);\r\n        }\r\n    }\r\n\r\n    testa(comp) {\r\n        for (this.c1 = this.ba; this.c1 !== null; this.c1 = this.c1.next) {\r\n            if (ATA(this.c1, comp)) {\r\n                this.c1.inner.push(comp);\r\n                comp.inner.push(this.c1);\r\n            }\r\n        }\r\n        for (this.c1 = this.bs; this.c1 !== null; this.c1 = this.c1.next) {\r\n            if (ATS(comp, this.c1)) {\r\n                this.c1.inner.push(comp);\r\n                comp.inner.push(this.c1);\r\n            }\r\n        }\r\n        if (this.inner && this.child) {\r\n            this.child[0].testa(comp);\r\n            this.child[1].testa(comp);\r\n            this.child[2].testa(comp);\r\n            this.child[3].testa(comp);\r\n        }\r\n    }\r\n}\r\n\r\nconst TREEPOSX = 0;\r\nconst TREEPOSY = 700;\r\nconst TREESIZE = 1024;\r\nconst TREESTEP = 5;\r\nexport default class TriggerSystem {\r\n    constructor(core) {\r\n        this[$name] = 'Trigger';\r\n        core.regEvent('onStart', this);\r\n        core.regEvent('onPHYUpdate', this);\r\n    }\r\n\r\n    onStart() {\r\n        this.tree = new Branch(\r\n            TREEPOSX - TREESIZE,\r\n            TREEPOSY - TREESIZE,\r\n            TREEPOSX + TREESIZE,\r\n            TREEPOSY + TREESIZE,\r\n            0,\r\n            TREESTEP\r\n        );\r\n    }\r\n\r\n    onPHYUpdate(core) {\r\n        performance.mark('trs');\r\n\r\n        this.tree.clear();\r\n        for (const comp of core.getComp(STrigger)) {\r\n            comp.inner.length = 0;\r\n            comp.owner.getCompOne(Transform).worldPosition(comp.pos).add(comp.offset);\r\n            this.tree.adds(comp, comp.pos.x, comp.pos.z, comp.radius);\r\n        }\r\n        for (const comp of core.getComp(ATrigger)) {\r\n            comp.inner.length = 0;\r\n            comp.owner.getCompOne(Transform).worldPosition(comp.pos).add(comp.offset);\r\n            this.tree.adda(comp, comp.pos.x, comp.pos.z, comp.size);\r\n        }\r\n        this.tree.test();\r\n\r\n        performance.mark('tre');\r\n        performance.measure('trigger', 'trs', 'tre');\r\n    }\r\n}\r\n","import Transform from '../Components/Transform';\r\nimport Mesh from '../Components/Mesh';\r\nimport Movement from '../Components/Movement';\r\nimport ATrigger from '../Components/ATrigger';\r\nimport STrigger from '../Components/STrigger';\r\n\r\nexport function createSphere(core, barrier, it, pos) {\r\n    barrier[it] = core.newEntity(null, true);\r\n    core.newComp(Transform, barrier[it], true, {\r\n        position: pos\r\n    }).position.y = 6;\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'SPHERE_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'SPHERE_SILVER',\r\n        material: 'silver_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'SPHERE_LIGHT',\r\n        material: 'light_mat'\r\n    });\r\n    core.newComp(Movement, barrier[it], true, {\r\n        direction: { x: -1, y: 0, z: 0 },\r\n        speed: Math.random() * 20 * pos.x / Math.abs(pos.x)\r\n    });\r\n    core.newComp(STrigger, barrier[it], true, {\r\n        radius: 1\r\n    });\r\n}\r\n\r\nexport function createPillar1(core, barrier, it, pos) {\r\n    barrier[it] = core.newEntity(null, true);\r\n    core.newComp(Transform, barrier[it], true, {\r\n        position: pos\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR1_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR1_SILVER',\r\n        material: 'silver_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR1_WALL_W',\r\n        material: 'wall_w_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR1_WALL_WG',\r\n        material: 'wall_wg_mat'\r\n    });\r\n    core.newComp(Movement, barrier[it], true, {\r\n        direction: { x: 0, y: 0, z: 1 },\r\n        speed: 0\r\n    });\r\n    core.newComp(ATrigger, barrier[it], true, {\r\n        size: { x: 4, y: 8, z: 4 }\r\n    });\r\n}\r\n\r\nexport function createPillar2(core, barrier, it, pos) {\r\n    barrier[it] = core.newEntity(null, true);\r\n    core.newComp(Transform, barrier[it], true, {\r\n        position: pos\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR2_SILVER',\r\n        material: 'silver_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR2_WALL_W',\r\n        material: 'wall_w_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR2_WALL_WG',\r\n        material: 'wall_wg_mat'\r\n    });\r\n    core.newComp(Movement, barrier[it], true, {\r\n        direction: { x: 0, y: 0, z: 1 },\r\n        speed: 0\r\n    });\r\n    core.newComp(ATrigger, barrier[it], true, {\r\n        size: { x: 4, y: 8, z: 4 }\r\n    });\r\n}\r\n\r\nexport function createPillar3(core, barrier, it, pos) {\r\n    barrier[it] = core.newEntity(null, true);\r\n    core.newComp(Transform, barrier[it], true, {\r\n        position: pos\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR3_SILVER',\r\n        material: 'silver_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR3_WALL_W',\r\n        material: 'wall_w_mat'\r\n    });\r\n    core.newComp(Movement, barrier[it], true, {\r\n        direction: { x: 0, y: 0, z: 1 },\r\n        speed: 0\r\n    });\r\n    core.newComp(ATrigger, barrier[it], true, {\r\n        size: { x: 4, y: 8, z: 4 }\r\n    });\r\n}\r\n\r\nexport function createPillar4(core, barrier, it, pos) {\r\n    barrier[it] = core.newEntity(null, true);\r\n    core.newComp(Transform, barrier[it], true, {\r\n        position: pos\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR4_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR4_SILVER',\r\n        material: 'silver_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR4_WALL_W',\r\n        material: 'wall_w_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR4_WALL_WG',\r\n        material: 'wall_wg_mat'\r\n    });\r\n    core.newComp(Movement, barrier[it], true, {\r\n        direction: { x: 0, y: 0, z: 1 },\r\n        speed: 0\r\n    });\r\n    core.newComp(ATrigger, barrier[it], true, {\r\n        size: { x: 4, y: 8, z: 4 }\r\n    });\r\n}\r\n\r\nexport function createPillar5(core, barrier, it, pos) {\r\n    barrier[it] = core.newEntity(null, true);\r\n    core.newComp(Transform, barrier[it], true, {\r\n        position: pos\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR5_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR5_SILVER',\r\n        material: 'silver_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR5_WALL_W',\r\n        material: 'wall_w_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR5_WALL_WG',\r\n        material: 'wall_wg_mat'\r\n    });\r\n    core.newComp(Movement, barrier[it], true, {\r\n        direction: { x: 0, y: 0, z: 1 },\r\n        speed: 0\r\n    });\r\n    core.newComp(ATrigger, barrier[it], true, {\r\n        size: { x: 4, y: 8, z: 4 }\r\n    });\r\n}\r\n\r\nexport function createColumn1(core, barrier, it, pos) {\r\n    barrier[it] = core.newEntity(null, true);\r\n    core.newComp(Transform, barrier[it], true, {\r\n        position: pos\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN1_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN1_WALL_S',\r\n        material: 'wall_s_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN1_WALL_W',\r\n        material: 'wall_w_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN1_WALL_WG',\r\n        material: 'wall_wg_mat'\r\n    });\r\n    core.newComp(Movement, barrier[it], true, {\r\n        direction: { x: 0, y: 0, z: 1 },\r\n        speed: 0\r\n    });\r\n    core.newComp(ATrigger, barrier[it], true, {\r\n        size: { x: 7, y: 8, z: 7 }\r\n    });\r\n}\r\n\r\nexport function createColumn2(core, barrier, it, pos) {\r\n    barrier[it] = core.newEntity(null, true);\r\n    core.newComp(Transform, barrier[it], true, {\r\n        position: pos\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN2_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN2_SILVER',\r\n        material: 'silver_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN2_WALL_S',\r\n        material: 'wall_s_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN2_WALL_W',\r\n        material: 'wall_w_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN2_WALL_WG',\r\n        material: 'wall_wg_mat'\r\n    });\r\n    core.newComp(Movement, barrier[it], true, {\r\n        direction: { x: 0, y: 0, z: 1 },\r\n        speed: 0\r\n    });\r\n    core.newComp(ATrigger, barrier[it], true, {\r\n        size: { x: 7, y: 8, z: 7 }\r\n    });\r\n}\r\n\r\nexport function createColumn3(core, barrier, it, pos) {\r\n    barrier[it] = core.newEntity(null, true);\r\n    core.newComp(Transform, barrier[it], true, {\r\n        position: pos\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN3_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN3_SILVER',\r\n        material: 'silver_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN3_WALL_S',\r\n        material: 'wall_s_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN3_WALL_W',\r\n        material: 'wall_w_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN3_WALL_WG',\r\n        material: 'wall_wg_mat'\r\n    });\r\n    core.newComp(Movement, barrier[it], true, {\r\n        direction: { x: 0, y: 0, z: 1 },\r\n        speed: 0\r\n    });\r\n    core.newComp(ATrigger, barrier[it], true, {\r\n        size: { x: 7, y: 8, z: 7 }\r\n    });\r\n}\r\n\r\nexport function createTunnel1(core, barrier, it, pos) {\r\n    barrier[it] = core.newEntity(null, true);\r\n    core.newComp(Transform, barrier[it], true, {\r\n        position: pos\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'TUNNEL1_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'TUNNEL1_WALL_S',\r\n        material: 'wall_s_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'TUNNEL1_WALL_WG',\r\n        material: 'wall_wg_mat'\r\n    });\r\n    core.newComp(Movement, barrier[it], true, {\r\n        direction: { x: 0, y: 0, z: 1 },\r\n        speed: 0\r\n    });\r\n    core.newComp(ATrigger, barrier[it], true, {\r\n        size: { x: 8, y: 8, z: 67 }\r\n    });\r\n}\r\n\r\nexport function createTunnel2(core, barrier, it, pos) {\r\n    barrier[it] = core.newEntity(null, true);\r\n    core.newComp(Transform, barrier[it], true, {\r\n        position: pos\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'TUNNEL2_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'TUNNEL2_WALL_S',\r\n        material: 'wall_s_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'TUNNEL2_WALL_W',\r\n        material: 'wall_w_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'TUNNEL2_WALL_WG',\r\n        material: 'wall_wg_mat'\r\n    });\r\n    core.newComp(Movement, barrier[it], true, {\r\n        direction: { x: 0, y: 0, z: 1 },\r\n        speed: 0\r\n    });\r\n    core.newComp(ATrigger, barrier[it], true, {\r\n        size: { x: 8, y: 8, z: 67 }\r\n    });\r\n}\r\n\r\nexport function createTrain(core, barrier, it, pos) {\r\n    const tmp = pos.x;\r\n\r\n    pos.x = 0;\r\n    barrier[it] = core.newEntity(null, true);\r\n    core.newComp(Transform, barrier[it], true, {\r\n        position: pos\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'GATE_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'GATE_LIGHT',\r\n        material: 'light_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'GATE_WALL_S',\r\n        material: 'wall_s_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'GATE_WALL_SG',\r\n        material: 'wall_sg_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'GATE_WALL_W',\r\n        material: 'wall_w_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'GATE_WALL_WG',\r\n        material: 'wall_wg_mat'\r\n    });\r\n    core.newComp(Movement, barrier[it], true, {\r\n        direction: { x: 0, y: 0, z: 1 },\r\n        speed: 0\r\n    });\r\n    core.newComp(ATrigger, barrier[it], true, {\r\n        size: { x: 20, y: 20, z: 20 },\r\n        offset: { x: 220, y: 0, z: 0 }\r\n    });\r\n    core.newComp(ATrigger, barrier[it], true, {\r\n        size: { x: 20, y: 20, z: 20 },\r\n        offset: { x: -220, y: 0, z: 0 }\r\n    });\r\n\r\n    pos.x = tmp;\r\n    pos.y = 5;\r\n    pos.z = 0;\r\n    let ent = core.newEntity(barrier[it], true);\r\n    core.newComp(Transform, ent, true, {\r\n        position: pos\r\n    });\r\n    core.newComp(Mesh, ent, true, {\r\n        geometry: 'PYRAMID_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, ent, true, {\r\n        geometry: 'PYRAMID_SILVER',\r\n        material: 'silver_mat'\r\n    });\r\n    core.newComp(Movement, ent, true, {\r\n        direction: { x: 1, y: 0, z: 0 },\r\n        speed: tmp < 0 ? 30 : -30\r\n    });\r\n    core.newComp(STrigger, ent, true, {\r\n        radius: 10\r\n    });\r\n\r\n    pos.x += 28;\r\n    ent = core.newEntity(barrier[it], true);\r\n    core.newComp(Transform, ent, true, {\r\n        position: pos,\r\n        scale: { x: 0.7, y: 0.7, z: 0.7 }\r\n    });\r\n    core.newComp(Mesh, ent, true, {\r\n        geometry: 'PYRAMID_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, ent, true, {\r\n        geometry: 'PYRAMID_SILVER',\r\n        material: 'silver_mat'\r\n    });\r\n    core.newComp(Movement, ent, true, {\r\n        direction: { x: 1, y: 0, z: 0 },\r\n        speed: tmp < 0 ? 30 : -30\r\n    });\r\n    core.newComp(STrigger, ent, true, {\r\n        radius: 7\r\n    });\r\n\r\n    pos.x -= 56;\r\n    ent = core.newEntity(barrier[it], true);\r\n    core.newComp(Transform, ent, true, {\r\n        position: pos,\r\n        scale: { x: 0.7, y: 0.7, z: 0.7 }\r\n    });\r\n    core.newComp(Mesh, ent, true, {\r\n        geometry: 'PYRAMID_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, ent, true, {\r\n        geometry: 'PYRAMID_SILVER',\r\n        material: 'silver_mat'\r\n    });\r\n    core.newComp(Movement, ent, true, {\r\n        direction: { x: 1, y: 0, z: 0 },\r\n        speed: tmp < 0 ? 30 : -30\r\n    });\r\n    core.newComp(STrigger, ent, true, {\r\n        radius: 7\r\n    });\r\n}\r\n","import * as Helper from './GameSystemHelper';\r\nimport Transform from '../Components/Transform';\r\nimport STrigger from '../Components/STrigger';\r\nimport OrbitControl from '../Components/OrbitControl';\r\nimport Vec3 from '../Math/Vec3';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nlet it = 0;\r\nlet tmp = 0;\r\nlet transform = null;\r\nconst zAxis = new Vec3(0, 0, 1);\r\nconst BARRIER_MAX = 128;\r\nconst MAX_XMOVE = 0.5;\r\nconst SCOREDT = 0.25;\r\nconst tPos = new Vec3(0, 0, 0);\r\n\r\nexport default class GameSystem {\r\n    constructor(core) {\r\n        this[$name] = 'Game';\r\n        core.regEvent('onStart', this);\r\n        core.regEvent('onUpdate', this);\r\n        core.regEvent('onLateUpdate', this);\r\n\r\n        this.state = 0;\r\n        this.count = 0;\r\n        this.airplane = null;\r\n        this.transform = null;\r\n\r\n        this.speed = 500;\r\n        this.xmove = 0;\r\n\r\n        this.uibg = document.getElementById('app-ui-bg');\r\n        this.uimul = document.getElementById('app-ui-mul');\r\n        this.uiscore = document.getElementById('app-ui-score');\r\n        this.uiresult = document.getElementById('app-ui-result');\r\n\r\n        this.mul = 1;\r\n        this.score = 0;\r\n        this.scoredt = 0;\r\n\r\n        console.log(core); // TODO!!!\r\n    }\r\n\r\n    onStart(core) {\r\n        this.time = core.getSystem('Time');\r\n        this.input = core.getSystem('Input');\r\n        this.screen = core.getSystem('Screen');\r\n        this.movement = core.getSystem('Movement');\r\n\r\n        [this.airplane] = core.getEntitiesByName('airplane');\r\n        [this.camera] = core.getEntitiesByName('player');\r\n\r\n        [this.g1] = core.getEntitiesByName('ground1');\r\n        [this.g2] = core.getEntitiesByName('ground2');\r\n        [this.g3] = core.getEntitiesByName('ground3');\r\n        [this.g4] = core.getEntitiesByName('ground4');\r\n\r\n        this.barrier = new Array(BARRIER_MAX);\r\n\r\n        // Hide load screen\r\n        this.time.timeScale = 0;\r\n        setTimeout(() => {\r\n            const start = document.getElementById('app-ui-start');\r\n            start.innerHTML = 'START';\r\n            start.addEventListener('click', () => {\r\n                this.uibg.style.display = 'none';\r\n                this.time.timeScale = 1;\r\n                this.state = 1;\r\n                this.start(core);\r\n            });\r\n            start.addEventListener('touchstart', () => {\r\n                this.uibg.style.display = 'none';\r\n                this.time.timeScale = 1;\r\n                this.state = 1;\r\n                this.start(core);\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    onUpdate(core) {\r\n        if (this.state === 0) return;\r\n\r\n        if (this.input.keyState(this.input.VK_SPACE)) {\r\n            this.mul = 2;\r\n            this.speed = 0; // 1000; // TODO\r\n            this.uimul.innerHTML = 'x2';\r\n        } else {\r\n            this.mul = 1;\r\n            this.speed = 500;\r\n            this.uimul.innerHTML = null;\r\n        }\r\n\r\n        this.score += this.time.deltaTime * this.mul * 10;\r\n        this.scoredt += this.time.deltaTime;\r\n        if (this.scoredt >= SCOREDT) {\r\n            this.scoredt = 0;\r\n            this.uiscore.innerText = `${Math.ceil(this.score)}`;\r\n        }\r\n\r\n        if (this.state === 1) this.movement.limearSpeed.z = -this.speed;\r\n        else this.movement.limearSpeed.z = 0;\r\n\r\n        transform = this.g1.getCompOne(Transform);\r\n        if (transform && transform.position.z < -510) transform.position.z += 4000;\r\n        transform = this.g2.getCompOne(Transform);\r\n        if (transform && transform.position.z < -510) transform.position.z += 4000;\r\n        transform = this.g3.getCompOne(Transform);\r\n        if (transform && transform.position.z < -510) transform.position.z += 4000;\r\n        transform = this.g4.getCompOne(Transform);\r\n        if (transform && transform.position.z < -510) transform.position.z += 4000;\r\n\r\n        if (this.state) this.move();\r\n\r\n        for (it = 0; it < BARRIER_MAX; it++) {\r\n            if (!this.barrier[it]) continue;\r\n            transform = this.barrier[it].getCompOne(Transform);\r\n            if (transform) {\r\n                if (transform.position.z < -20) {\r\n                    core.delEntity(this.barrier[it]);\r\n                    tmp = Math.random();\r\n                    if (tmp > 0.99) Helper.createTrain(core, this.barrier, it, { x: (Math.random() - 0.5) * 440, y: 0, z: 3000 + Math.random() * 1000 });\r\n                    else if (tmp > 0.9) Helper.createPillar1(core, this.barrier, it, { x: (Math.random() - 0.5) * 440, y: 0, z: 3000 + Math.random() * 1000 });\r\n                    else if (tmp > 0.8) Helper.createPillar2(core, this.barrier, it, { x: (Math.random() - 0.5) * 440, y: 0, z: 3000 + Math.random() * 1000 });\r\n                    else if (tmp > 0.7) Helper.createPillar3(core, this.barrier, it, { x: (Math.random() - 0.5) * 440, y: 0, z: 3000 + Math.random() * 1000 });\r\n                    else if (tmp > 0.6) Helper.createPillar4(core, this.barrier, it, { x: (Math.random() - 0.5) * 440, y: 0, z: 3000 + Math.random() * 1000 });\r\n                    else if (tmp > 0.5) Helper.createPillar5(core, this.barrier, it, { x: (Math.random() - 0.5) * 440, y: 0, z: 3000 + Math.random() * 1000 });\r\n                    else if (tmp > 0.48) Helper.createColumn1(core, this.barrier, it, { x: (Math.random() - 0.5) * 440, y: 0, z: 3000 + Math.random() * 1000 });\r\n                    else if (tmp > 0.46) Helper.createColumn2(core, this.barrier, it, { x: (Math.random() - 0.5) * 440, y: 0, z: 3000 + Math.random() * 1000 });\r\n                    else if (tmp > 0.44) Helper.createColumn3(core, this.barrier, it, { x: (Math.random() - 0.5) * 440, y: 0, z: 3000 + Math.random() * 1000 });\r\n                    else if (tmp > 0.42) Helper.createTunnel1(core, this.barrier, it, { x: (Math.random() - 0.5) * 440, y: 0, z: 3000 + Math.random() * 1000 });\r\n                    else if (tmp > 0.40) Helper.createTunnel2(core, this.barrier, it, { x: (Math.random() - 0.5) * 440, y: 0, z: 3000 + Math.random() * 1000 });\r\n                    else Helper.createSphere(core, this.barrier, it, { x: (Math.random() - 0.5) * 440, y: 6, z: 3000 + Math.random() * 1000 });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onLateUpdate(core) {\r\n        transform = this.airplane.getCompOne(STrigger);\r\n        if (transform) {\r\n            if (transform.inner.length > 0 && this.state) {\r\n                this.time.timeScale = 0;\r\n                this.state = 0;\r\n                setTimeout(() => {\r\n                    this.uiresult.innerHTML = `${Math.ceil(this.score)}`;\r\n                    this.uibg.style.display = 'block';\r\n                    this.clear(core);\r\n                }, 1000);\r\n            }\r\n        }\r\n    }\r\n\r\n    move() {\r\n        transform = this.airplane.getCompOne(Transform);\r\n        if (transform) {\r\n            tmp = 0;\r\n            if (this.input.keyState(this.input.VK_LEFT)) tmp += 0.5;\r\n            if (this.input.keyState(this.input.VK_RIGHT)) tmp -= 0.5;\r\n            if (this.input.keyState(this.input.VK_LBUTTON)) {\r\n                if (this.input.mousePos().x > this.screen.widthNPR * 0.5) tmp -= 0.5;\r\n                else tmp += 0.5;\r\n            }\r\n\r\n            if (tmp > 0) {\r\n                this.xmove += 0.05;\r\n                if (this.xmove > MAX_XMOVE) this.xmove = MAX_XMOVE;\r\n            } else if (tmp < 0) {\r\n                this.xmove -= 0.05;\r\n                if (this.xmove < -MAX_XMOVE) this.xmove = -MAX_XMOVE;\r\n            } else if (this.xmove > 0) {\r\n                this.xmove -= 0.05;\r\n                if (this.xmove < 0) this.xmove = 0;\r\n            } else if (this.xmove < 0) {\r\n                this.xmove += 0.05;\r\n                if (this.xmove > 0) this.xmove = 0;\r\n            }\r\n\r\n            transform.orientation.fromAxisAngle(zAxis, this.xmove);\r\n            transform.position.x -= this.xmove * 2;\r\n            if (transform.position.x < -212) transform.position.x = -212;\r\n            if (transform.position.x > 216) transform.position.x = 216;\r\n        }\r\n        transform = this.camera.getCompOne(Transform);\r\n        if (transform) {\r\n            transform.position.x -= this.xmove * 2;\r\n            if (transform.position.x < -212) transform.position.x = -212;\r\n            if (transform.position.x > 216) transform.position.x = 216;\r\n        }\r\n        transform = this.camera.getCompOne(OrbitControl);\r\n        if (transform) {\r\n            transform.nupd = true;\r\n        }\r\n    }\r\n\r\n    clear(core) { // TODO\r\n        for (it = 0; it < BARRIER_MAX; it++) {\r\n            if (this.barrier[it]) core.delEntity(this.barrier[it]);\r\n        }\r\n    }\r\n\r\n    start(core) {\r\n        this.score = 0;\r\n        this.uiscore.innerText = '0';\r\n        this.xmove = 0;\r\n        this.createBarrier(core); // TODO\r\n    }\r\n\r\n    createBarrier(core) {\r\n        for (it = 0; it < BARRIER_MAX; it++) {\r\n            tPos.x = (Math.random() - 0.5) * 440;\r\n            tPos.y = 0;\r\n            tPos.z = 3000 + Math.random() * 2000;\r\n\r\n            if (it < 50) Helper.createSphere(core, this.barrier, it, tPos);\r\n            else if (it < 62) Helper.createPillar1(core, this.barrier, it, tPos);\r\n            else if (it < 74) Helper.createPillar2(core, this.barrier, it, tPos);\r\n            else if (it < 86) Helper.createPillar3(core, this.barrier, it, tPos);\r\n            else if (it < 98) Helper.createPillar4(core, this.barrier, it, tPos);\r\n            else if (it < 110) Helper.createPillar5(core, this.barrier, it, tPos);\r\n            else if (it < 113) Helper.createColumn1(core, this.barrier, it, tPos);\r\n            else if (it < 116) Helper.createColumn2(core, this.barrier, it, tPos);\r\n            else if (it < 119) Helper.createColumn3(core, this.barrier, it, tPos);\r\n            else if (it < 122) Helper.createTunnel1(core, this.barrier, it, tPos);\r\n            else if (it < 125) Helper.createTunnel2(core, this.barrier, it, tPos);\r\n            else Helper.createTrain(core, this.barrier, it, tPos);\r\n        }\r\n    }\r\n\r\n    // =========================TEMP================================\r\n    // const e0 = core.newEntity(null, true);\r\n    // const c0 = core.newComp(Transform, e0, true, {});\r\n    // core.enableEntity(owner, false);\r\n    // core.enableComp(comp, false);\r\n    // core.delComp(c0);\r\n    // core.delEntity(e0);\r\n    // =========================TEMP================================\r\n}\r\n","export default class Vec2 {\r\n    constructor(x = 0, y = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n","export default class Vec4 {\r\n    constructor(x = 0, y = 0, z = 0, w = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n\r\n    copy(vec) {\r\n        this.x = vec.x;\r\n        this.y = vec.y;\r\n        this.z = vec.z;\r\n        this.w = vec.w;\r\n        return this;\r\n    }\r\n}\r\n","export default class TLayer {\r\n    constructor(texture = null, layer = 0) {\r\n        this.texture = texture;\r\n        this.layer = layer;\r\n    }\r\n\r\n    copy(tlayer) {\r\n        this.texture = tlayer.texture;\r\n        this.layer = tlayer.layer;\r\n    }\r\n}\r\n","import Vec2 from '../Math/Vec2';\r\nimport Vec3 from '../Math/Vec3';\r\nimport Vec4 from '../Math/Vec4';\r\nimport Quat from '../Math/Quat';\r\nimport Mat4 from '../Math/Mat4';\r\nimport TLayer from '../Math/TLayer';\r\n\r\nexport default class Shader {\r\n    constructor() {\r\n        this.program = null;\r\n        this.uniform = {};\r\n        this.attribute = {};\r\n    }\r\n\r\n    use(core) {\r\n        core.gl.useProgram(this.program);\r\n    }\r\n\r\n    setUniform(core, uniformName, value) { // TODO!!!\r\n        switch (value.constructor) {\r\n            case Number:\r\n                core.gl.uniform2f(this.uniform[uniformName], value);\r\n                break;\r\n            case Vec2:\r\n                core.gl.uniform2f(this.uniform[uniformName], value.x, value.y);\r\n                break;\r\n            case Vec3:\r\n                core.gl.uniform3f(this.uniform[uniformName], value.x, value.y, value.z);\r\n                break;\r\n            case Vec4:\r\n            case Quat:\r\n                core.gl.uniform4f(this.uniform[uniformName], value.x, value.y, value.z, value.w);\r\n                break;\r\n            case TLayer:\r\n                core.gl.uniform1i(this.uniform[uniformName], value.layer);\r\n                value.texture.use(core, value.layer);\r\n                break;\r\n            case Mat4:\r\n                core.gl.uniformMatrix4fv(this.uniform[uniformName], false, value);\r\n                break;\r\n            default: throw new Error('Type of value not found');\r\n        }\r\n    }\r\n}\r\n","import { Loader } from '../Core/Core';\r\nimport Shader from '../Resources/Shader';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class RawShaderLoader extends Loader {\r\n    parse(obj) {\r\n        if (typeof obj.name !== 'string' || obj.name === '') throw new Error('Shader not named');\r\n        const gl = this.core.gl;\r\n        const vsh = gl.createShader(gl.VERTEX_SHADER);\r\n        const fsh = gl.createShader(gl.FRAGMENT_SHADER);\r\n        const shader = new Shader();\r\n        shader.program = gl.createProgram();\r\n\r\n        gl.shaderSource(vsh, obj.vs);\r\n        gl.compileShader(vsh);\r\n        gl.shaderSource(fsh, obj.fs);\r\n        gl.compileShader(fsh);\r\n\r\n        if (!gl.getShaderParameter(vsh, gl.COMPILE_STATUS)) {\r\n            throw new Error(gl.getShaderInfoLog(vsh));\r\n        }\r\n        if (!gl.getShaderParameter(fsh, gl.COMPILE_STATUS)) {\r\n            throw new Error(gl.getShaderInfoLog(fsh));\r\n        }\r\n\r\n        gl.attachShader(shader.program, vsh);\r\n        gl.attachShader(shader.program, fsh);\r\n        gl.linkProgram(shader.program);\r\n\r\n        if (!gl.getProgramParameter(shader.program, gl.LINK_STATUS)) {\r\n            throw new Error(gl.getProgramInfoLog(shader.program));\r\n        }\r\n\r\n        gl.deleteShader(vsh);\r\n        gl.deleteShader(fsh);\r\n\r\n        // Get unifornm\r\n        for (let i = 0; i < gl.getProgramParameter(shader.program, gl.ACTIVE_UNIFORMS); i++) {\r\n            const name = gl.getActiveUniform(shader.program, i).name;\r\n            if (!name.includes('gl_')) shader.uniform[name] = gl.getUniformLocation(shader.program, name);\r\n        }\r\n\r\n        // Get attribute\r\n        for (let i = 0; i < gl.getProgramParameter(shader.program, gl.ACTIVE_ATTRIBUTES); i++) {\r\n            const name = gl.getActiveAttrib(shader.program, i).name;\r\n            if (!name.includes('gl_')) shader.attribute[name] = gl.getAttribLocation(shader.program, name);\r\n        }\r\n\r\n        this.core.addRes('shader', obj.name, shader);\r\n\r\n        return Promise.resolve(shader);\r\n    }\r\n}\r\nRawShaderLoader.prototype[$name] = 'RawShaderLoader';\r\n","let gl = null;\r\n\r\nexport default class Material {\r\n    constructor() {\r\n        this.shader = null;\r\n        this.depthtest = true;\r\n        this.depthwrite = true;\r\n        this.cullFace = 0;\r\n        this.blend = 0;\r\n        this.uniform = {};\r\n        this.batch = false;\r\n    }\r\n\r\n    use(core) {\r\n        gl = core.gl;\r\n        this.shader.use(core);\r\n\r\n        // DEPTH_TEST\r\n        if (this.depthtest) gl.enable(gl.DEPTH_TEST);\r\n        else gl.disable(gl.DEPTH_TEST);\r\n\r\n        // DEPTH_WRITE\r\n        gl.depthMask(this.depthwrite);\r\n\r\n        // CULL_FACE\r\n        switch (this.cullFace) {\r\n            case 0: gl.disable(gl.CULL_FACE); break;\r\n            case 1: gl.enable(gl.CULL_FACE); gl.cullFace(gl.BACK); break;\r\n            case 2: gl.enable(gl.CULL_FACE); gl.cullFace(gl.FRONT); break;\r\n            case 3: gl.enable(gl.CULL_FACE); gl.cullFace(gl.FRONT_AND_BACK); break;\r\n            default: gl.disable(gl.CULL_FACE); break;\r\n        }\r\n\r\n        // BLEND\r\n        switch (this.blend) { // TODO!!!\r\n            case 0: gl.disable(gl.BLEND); break;\r\n            case 1: gl.enable(gl.BLEND); break;\r\n            default: gl.disable(gl.BLEND); break;\r\n        }\r\n\r\n        // UNIFORMS\r\n        for (const key in this.uniform) {\r\n            this.shader.setUniform(core, key, this.uniform[key]);\r\n        }\r\n    }\r\n}\r\n","import { Loader } from '../Core/Core';\r\nimport Material from '../Resources/Material';\r\nimport Vec2 from '../Math/Vec2';\r\nimport Vec3 from '../Math/Vec3';\r\nimport Vec4 from '../Math/Vec4';\r\nimport TLayer from '../Math/TLayer';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class MaterialLoader extends Loader {\r\n    parse(obj) {\r\n        if (typeof obj.name !== 'string' || obj.name === '') throw new Error('Material not named');\r\n\r\n        const material = new Material();\r\n        material.shader = obj.shader;\r\n        material.depthtest = obj.depthtest !== undefined ? obj.depthtest : true;\r\n        material.depthwrite = obj.depthwrite !== undefined ? obj.depthwrite : true;\r\n        material.cullFace = obj.cullFace !== undefined ? obj.cullFace : 0;\r\n        material.blend = obj.blend !== undefined ? obj.blend : 0;\r\n        material.batch = obj.batch !== undefined ? obj.batch : false;\r\n\r\n        for (const name in obj.uniform) {\r\n            switch (obj.uniform[name].type) { // TODO!!!\r\n                case 'Float':\r\n                    material.uniform[name] = obj.uniform[name].value;\r\n                    break;\r\n                case 'Vec2':\r\n                    material.uniform[name] = new Vec2();\r\n                    material.uniform[name].copy(obj.uniform[name].value);\r\n                    break;\r\n                case 'Vec3':\r\n                    material.uniform[name] = new Vec3();\r\n                    material.uniform[name].copy(obj.uniform[name].value);\r\n                    break;\r\n                case 'Vec4':\r\n                    material.uniform[name] = new Vec4();\r\n                    material.uniform[name].copy(obj.uniform[name].value);\r\n                    break;\r\n                case 'Texture':\r\n                    material.uniform[name] = new TLayer();\r\n                    material.uniform[name].copy(obj.uniform[name].value);\r\n                    break;\r\n                default: throw new Error('Uniform type not found');\r\n            }\r\n        }\r\n\r\n        this.core.addRes('material', obj.name, material);\r\n\r\n        return Promise.resolve(material);\r\n    }\r\n    conf(material) {\r\n        material.shader = this.core.getRes('shader', material.shader);\r\n        for (const key in material.uniform) {\r\n            if (material.uniform[key] instanceof TLayer) {\r\n                material.uniform[key].texture = this.core.getRes('texture', material.uniform[key].texture);\r\n            }\r\n        }\r\n        return Promise.resolve(material);\r\n    }\r\n}\r\nMaterialLoader.prototype[$name] = 'MaterialLoader';\r\n","import { Loader } from '../Core/Core';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class ImageLoader extends Loader {\r\n    load(file) {\r\n        return new Promise((rv, rj) => {\r\n            const image = new Image();\r\n            const name = file.substring(file.lastIndexOf('/') + 1, file.lastIndexOf('.'));\r\n            image.onload = () => { rv(image); this.core.addRes('image', name, image); };\r\n            image.onerror = () => { rj(image); };\r\n            image.src = file;\r\n        });\r\n    }\r\n}\r\nImageLoader.prototype[$name] = 'ImageLoader';\r\n","let gl = null;\r\n\r\nexport default class Texture {\r\n    constructor() {\r\n        this.image = null;\r\n        this.tex = null;\r\n        this.type = 0x0DE1;\r\n    }\r\n\r\n    use(core, layer) {\r\n        gl = core.gl;\r\n        gl.activeTexture(gl.TEXTURE0 + layer);\r\n        gl.bindTexture(this.type, this.tex);\r\n    }\r\n}\r\n","import { Loader } from '../Core/Core';\r\nimport Texture from '../Resources/Texture';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class Texture2DLoader extends Loader { // TODO!!!\r\n    parse(obj) {\r\n        if (typeof obj.name !== 'string' || obj.name === '') throw new Error('Texture not named');\r\n        const gl = this.core.gl;\r\n\r\n        const texture = new Texture();\r\n        texture.image = obj.image;\r\n        texture.type = gl.TEXTURE_2D;\r\n        texture.tex = gl.createTexture();\r\n\r\n        this.core.addRes('texture', obj.name, texture);\r\n        return Promise.resolve(texture);\r\n    }\r\n    conf(texture) {\r\n        const gl = this.core.gl;\r\n        texture.image = this.core.getRes('image', texture.image);\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, texture.tex);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, texture.image);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\r\n        // gl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_MAX_ANISOTROPY_EXT, 8); // TODO!!!\r\n        gl.generateMipmap(gl.TEXTURE_2D);\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n\r\n        return Promise.resolve(texture);\r\n    }\r\n}\r\nTexture2DLoader.prototype[$name] = 'Texture2DLoader';\r\n","let gl = null;\r\n\r\nexport default class Geometry {\r\n    constructor() {\r\n        this.attribute = {};\r\n        this.length = 0;\r\n        this.vbo = null;\r\n        this.ebo = null;\r\n    }\r\n\r\n    use(core, shader) { // TODO!!! TEMP NEED RECODE!!!\r\n        gl = core.gl;\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vbo);\r\n        for (const attr in this.attribute) {\r\n            if (shader.attribute[attr] !== undefined) {\r\n                gl.enableVertexAttribArray(shader.attribute[attr]);\r\n                gl.vertexAttribPointer(\r\n                    shader.attribute[attr],\r\n                    this.attribute[attr].size,\r\n                    this.attribute[attr].type,\r\n                    false,\r\n                    this.attribute[attr].stride,\r\n                    this.attribute[attr].offset\r\n                );\r\n            }\r\n        }\r\n\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.ebo);\r\n        gl.drawElements(gl.TRIANGLES, this.length, gl.UNSIGNED_SHORT, 0);\r\n\r\n        for (const attr in this.attribute) {\r\n            if (shader.attribute[attr] !== undefined) gl.disableVertexAttribArray(shader.attribute[attr]);\r\n        }\r\n    }\r\n}\r\n","import { Loader } from '../Core/Core';\r\nimport Geometry from '../Resources/Geometry';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class GeometryLoader extends Loader {\r\n    parse(obj) {\r\n        if (typeof obj.name !== 'string' || obj.name === '') throw new Error('Geometry not named');\r\n\r\n        const gl = this.core.gl;\r\n        const geometry = new Geometry();\r\n\r\n        for (const key in obj.attribute) {\r\n            geometry.attribute[key] = obj.attribute[key];\r\n        }\r\n        geometry.vbo = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, geometry.vbo);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(obj.vbo), gl.STATIC_DRAW);\r\n\r\n        geometry.ebo = gl.createBuffer();\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, geometry.ebo);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(obj.ebo), gl.STATIC_DRAW);\r\n        geometry.length = obj.ebo.length;\r\n\r\n        this.core.addRes('geometry', obj.name, geometry);\r\n        return Promise.resolve(geometry);\r\n    }\r\n}\r\nGeometryLoader.prototype[$name] = 'GeometryLoader';\r\n","import { Loader } from '../Core/Core';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class SceneLoader extends Loader {\r\n    parse(obj) {\r\n        const parse = [];\r\n        const loaders = [];\r\n\r\n        for (const res of obj.res) {\r\n            const loader = this.core.getLoader(res.loader);\r\n            loaders.push(loader);\r\n            if (typeof res.conf === 'string') {\r\n                parse.push(loader.load(res.conf).then(robj => loader.parse(robj)));\r\n            } else {\r\n                parse.push(loader.parse(res.conf));\r\n            }\r\n        }\r\n\r\n        return Promise.all(parse).then((parseRes) => {\r\n            const conf = [];\r\n            for (let i = 0; i < parseRes.length; i++) {\r\n                conf.push(loaders[i].conf(parseRes[i]));\r\n            }\r\n            return Promise.all(conf);\r\n        }).then(() => {\r\n            const ent = [];\r\n            let owner = null;\r\n            for (const entity of obj.ent) {\r\n                owner = (entity.owner !== undefined && entity.owner !== null) ? ent[entity.owner] : null;\r\n                const entt = this.core.newEntity(owner, entity.enable || true);\r\n                ent.push(entt);\r\n                if (entity.name) entt.name = entity.name;\r\n                if (entity.tags) {\r\n                    for (const tag of entity.tags) entt.addTag(tag);\r\n                }\r\n                if (entity.comp) {\r\n                    for (const comp of entity.comp) {\r\n                        const compClass = this.core.getCompClassByName(comp.type);\r\n                        if (comp.enable === undefined) comp.enable = true;\r\n                        this.core.newComp(compClass, entt, comp.enable, comp.conf);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nSceneLoader.prototype[$name] = 'SceneLoader';\r\n","import Core from '../fog_modules/Core/Core';\r\n\r\nimport Mesh from '../fog_modules/Components/Mesh';\r\nimport Camera from '../fog_modules/Components/Camera';\r\nimport Movement from '../fog_modules/Components/Movement';\r\nimport Rotation from '../fog_modules/Components/Rotation';\r\nimport ATrigger from '../fog_modules/Components/ATrigger';\r\nimport STrigger from '../fog_modules/Components/STrigger';\r\nimport Animator from '../fog_modules/Components/Animator';\r\nimport Transform from '../fog_modules/Components/Transform';\r\nimport OrbitControl from '../fog_modules/Components/OrbitControl';\r\n\r\nimport TimeSystem from '../fog_modules/Systems/TimeSystem';\r\nimport InputSystem from '../fog_modules/Systems/InputSystem';\r\nimport ScreenSystem from '../fog_modules/Systems/ScreenSystem';\r\nimport RenderSystem from '../fog_modules/Systems/RenderSystem';\r\nimport RotationSystem from '../fog_modules/Systems/RotationSystem';\r\nimport MovementSystem from '../fog_modules/Systems/MovementSystem';\r\nimport OrbitControlSystem from '../fog_modules/Systems/OrbitControlSystem';\r\nimport TransformSystem from '../fog_modules/Systems/TransformSystem';\r\nimport TriggerSystem from '../fog_modules/Systems/TriggerSystem';\r\n// import AnimationSystem from '../fog_modules/Systems/AnimationSystem';\r\nimport GameSystem from '../fog_modules/Systems/GameSystem';\r\n\r\nimport RawShaderLoader from '../fog_modules/Loaders/RawShaderLoader';\r\nimport MaterialLoader from '../fog_modules/Loaders/MaterialLoader';\r\nimport ImageLoader from '../fog_modules/Loaders/ImageLoader';\r\nimport Texture2DLoader from '../fog_modules/Loaders/Texture2DLoader';\r\nimport GeometryLoader from '../fog_modules/Loaders/GeometryLoader';\r\n// import SkeletonLoader from '../fog_modules/Loaders/SkeletonLoader';\r\n// import AnimationLoader from '../fog_modules/Loaders/AnimationLoader';\r\nimport SceneLoader from '../fog_modules/Loaders/SceneLoader';\r\n\r\nconst core = new Core('app', {\r\n    alpha: false\r\n});\r\n\r\ncore.regLoader(new RawShaderLoader(core));\r\ncore.regLoader(new MaterialLoader(core));\r\ncore.regLoader(new ImageLoader(core));\r\ncore.regLoader(new Texture2DLoader(core));\r\ncore.regLoader(new GeometryLoader(core));\r\n// core.regLoader(new SkeletonLoader(core));\r\n// core.regLoader(new AnimationLoader(core));\r\ncore.regLoader(new SceneLoader(core));\r\n\r\ncore.regComp(Mesh);\r\ncore.regComp(Camera);\r\ncore.regComp(Movement);\r\ncore.regComp(Rotation);\r\ncore.regComp(ATrigger);\r\ncore.regComp(STrigger);\r\ncore.regComp(Animator);\r\ncore.regComp(Transform);\r\ncore.regComp(OrbitControl);\r\n\r\ncore.regSystem(new TimeSystem(core));\r\ncore.regSystem(new InputSystem(core));\r\ncore.regSystem(new ScreenSystem(core));\r\ncore.regSystem(new RenderSystem(core));\r\ncore.regSystem(new RotationSystem(core));\r\ncore.regSystem(new MovementSystem(core));\r\ncore.regSystem(new OrbitControlSystem(core));\r\ncore.regSystem(new TransformSystem(core));\r\ncore.regSystem(new TriggerSystem(core));\r\n// core.regSystem(new AnimationSystem(core));\r\ncore.regSystem(new GameSystem(core));\r\n\r\ncore.loadRes('SceneLoader', './res/scene.json').then(() => { core.start(); });\r\n"],"sourceRoot":""}