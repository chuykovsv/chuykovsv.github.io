{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./fog_modules/Core/Core.js","webpack:///./fog_modules/Components/Mesh.js","webpack:///./fog_modules/Math/Mat4.js","webpack:///./fog_modules/Components/Camera.js","webpack:///./fog_modules/Math/Vec3.js","webpack:///./fog_modules/Components/Movement.js","webpack:///./fog_modules/Components/Rotation.js","webpack:///./fog_modules/Components/ATrigger.js","webpack:///./fog_modules/Components/STrigger.js","webpack:///./fog_modules/Components/Animator.js","webpack:///./fog_modules/Math/Quat.js","webpack:///./fog_modules/Components/Transform.js","webpack:///./fog_modules/Components/OrbitControl.js","webpack:///./fog_modules/Systems/TimeSystem.js","webpack:///./fog_modules/Systems/InputSystem.js","webpack:///./fog_modules/Systems/ScreenSystem.js","webpack:///./fog_modules/Math/DMap.js","webpack:///./fog_modules/Math/Batch.js","webpack:///./fog_modules/Systems/RenderSystem.js","webpack:///./fog_modules/Systems/RotationSystem.js","webpack:///./fog_modules/Systems/MovementSystem.js","webpack:///./fog_modules/Systems/OrbitControlSystem.js","webpack:///./fog_modules/Systems/TransformSystem.js","webpack:///./fog_modules/Systems/TriggerSystem.js","webpack:///./fog_modules/Systems/GameSystemHelper.js","webpack:///./fog_modules/Systems/GameSystem.js","webpack:///./fog_modules/Math/Vec2.js","webpack:///./fog_modules/Math/Vec4.js","webpack:///./fog_modules/Math/TLayer.js","webpack:///./fog_modules/Resources/Shader.js","webpack:///./fog_modules/Loaders/RawShaderLoader.js","webpack:///./fog_modules/Resources/Material.js","webpack:///./fog_modules/Loaders/MaterialLoader.js","webpack:///./fog_modules/Loaders/ImageLoader.js","webpack:///./fog_modules/Resources/Texture.js","webpack:///./fog_modules/Loaders/Texture2DLoader.js","webpack:///./fog_modules/Resources/Geometry.js","webpack:///./fog_modules/Loaders/GeometryLoader.js","webpack:///./fog_modules/Loaders/SceneLoader.js","webpack:///./modules/app.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","$gl","$ext","$dom","$gldom","$uidom","$raf","$res","$tags","$comp","$loop","$event","$state","$owner","$child","$depth","$entity","$system","$transform","$name","for","$new","$del","$modify","$loader","UBIT","EBIT","SBIT","NBIT","temp","freeSet","Set","Loader","constructor","core","this","load","file","fetch","then","response","text","JSON","parse","obj","Promise","resolve","conf","res","Component","owner","enable","disable","hasEnable","hasDisable","hasNeedsUpdate","needsUpdate","Entity","Map","add","child","depth","addTag","tag","delTag","delete","hasTag","has","getComp","compClass","undefined","getCompOne","gvarRes","Mesh","super","iid","geometry","material","skeleton","x2","y2","z2","xy","xz","xw","yz","yw","zw","tm","Float32Array","Mat4","copy","mat","identity","perspective","fov","aspect","near","far","Math","tan","orbit","polar","azimuthal","dist","target","cosa","cos","sina","sin","cosp","sinp","x","y","z","mul","premul","fromTRS","pos","rot","scl","w","fromTRSC","Camera","pmat","wmat","length","tx","ty","tz","tw","Vec3","vec","set","normalize","sqrt","abs","min","max","mins","scale","maxs","sub","addScaledVec","applyQuat","quat","mulNumber","num","Movement","speed","linear","direction","Rotation","axis","angle","ATrigger","next","inner","mask","offset","size","STrigger","radius","Animator","animation","loop","stop","time","tmp","Quat","fromAxisAngle","Transform","position","orientation","lmat","worldPosition","OrbitControl","distance","forward","nupd","afrozen","pfrozen","dfrozen","element","$k1","$in","$it1","$it2","DMap","start","ret","iterator","done","k1","k2","BATCH_SIZE","Batch","ibo","geo","vao","ext","createVertexArrayOES","gl","shader","bindVertexArrayOES","bindBuffer","ARRAY_BUFFER","vbo","attr","attribute","enableVertexAttribArray","vertexAttribPointer","type","stride","getAttribLocation","program","FLOAT","inst","vertexAttribDivisorANGLE","ELEMENT_ARRAY_BUFFER","ebo","Error","draw","camera","use","setUniform","drawElementsInstancedANGLE","TRIANGLES","UNSIGNED_SHORT","IBO_LENGTH","batch","screen","transform","input","towner","tvec","STS","c1","c2","ATS","ATA","Branch","xl","yl","xh","yh","stp","maxStp","bs","es","ba","ea","Array","clear","adds","comp","adda","test","push","tests","testa","TREEPOSX","TREEPOSY","TREESIZE","TREESTEP","movement","tPos","moveSphere","barrier","it","random","moveStatic","moveTrain","createSphere","newEntity","newComp","createPillar1","createPillar2","createPillar3","createPillar4","createPillar5","createColumn1","createColumn2","createColumn3","createTunnel1","createTunnel2","createTrain","ent","zAxis","BARRIER_MAX","MAX_XMOVE","SCOREDT","Vec2","Vec4","TLayer","texture","layer","tlayer","Shader","uniform","useProgram","uniformName","Number","uniform2f","uniform3f","uniform4f","uniform1i","uniformMatrix4fv","RawShaderLoader","vsh","createShader","VERTEX_SHADER","fsh","FRAGMENT_SHADER","createProgram","shaderSource","vs","compileShader","fs","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteShader","ACTIVE_UNIFORMS","getActiveUniform","includes","getUniformLocation","ACTIVE_ATTRIBUTES","getActiveAttrib","addRes","Material","depthtest","depthwrite","cullFace","blend","DEPTH_TEST","depthMask","CULL_FACE","BACK","FRONT","FRONT_AND_BACK","BLEND","MaterialLoader","getRes","ImageLoader","rv","rj","image","Image","substring","lastIndexOf","onload","onerror","src","Texture","tex","activeTexture","TEXTURE0","bindTexture","Texture2DLoader","TEXTURE_2D","createTexture","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","generateMipmap","Geometry","drawElements","disableVertexAttribArray","GeometryLoader","createBuffer","bufferData","STATIC_DRAW","Uint16Array","SceneLoader","loaders","loader","getLoader","robj","all","parseRes","entity","entt","tags","getCompClassByName","domId","document","getElementById","useEntity","delEntity","getContext","sd","getExtension","tf","tfa","e","performance","mark","fireEvent","requestAnimationFrame","measure","clearMarks","clearMeasures","cancelAnimationFrame","resType","loadRes","loaderName","regLoader","regSystem","system","getSystem","systemName","regEvent","event","systemArray","enableEntity","enableComp","getEntity","getEntitiesByName","result","CompClass","componentClass","delComp","modComp","useComp","getNewComp","getDelComp","getModComp","regComp","keys","dom","gldom","uidom","[object Object]","values","compMap","alpha","_time","now","_currentTime","_deltaTime","_timeScale","onStartFrame","deltaTime","timeScale","_up","Uint32Array","_down","_state","_pos","_dpos","_aup","_adown","_astate","_apos","_awheel","_pwheel","_dposflag","setAttribute","addEventListener","kUp","kDown","mUp","mDown","mMove","mWheel","tEnd","tStart","tMove","preventDefault","asyncDown","keyCode","floor","asyncUp","button","clientX","clientY","wheelDelta","changedTouches","keyUp","keyDown","keyState","mousePos","mouseDeltaPos","mouseWheel","VK_LBUTTON","VK_RBUTTON","VK_MBUTTON","VK_XBUTTON1","VK_XBUTTON2","VK_BACK","VK_TAB","VK_ESCAPE","VK_SPACE","VK_PAGEUP","VK_PAGEDOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_N0","VK_N1","VK_N2","VK_N3","VK_N4","VK_N5","VK_N6","VK_N7","VK_N8","VK_N9","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","curWidth","curHeight","newWidth","newHeight","onscreen","pr","window","devicePixelRatio","clientWidth","clientHeight","width","height","widthNPR","heightNPR","envMesh","batches","bid","ibuf","console","log","onStart","clearColor","STREAM_DRAW","onScreen","viewport","onRender","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","bufferSubData","onModify","setMainCamera","onUpdate","limearSpeed","count","onLateUpdate","onTransform","calcTransform","tree","onPHYUpdate","state","airplane","xmove","uibg","uimul","uiscore","uiresult","score","scoredt","g1","g2","g3","g4","createBarrier","setTimeout","innerHTML","style","display","innerText","concat","ceil","move","updateBarrier","startMoveBarrier","Helper"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"D:\\\\$WEB\\\\prototype\\\\dist\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const $gl = Symbol('gl');\r\nconst $ext = Symbol('ext');\r\nconst $dom = Symbol('dom');\r\nconst $gldom = Symbol('gldom');\r\nconst $uidom = Symbol('uidom');\r\nconst $raf = Symbol('raf');\r\nconst $res = Symbol('res');\r\nconst $tags = Symbol('tags');\r\nconst $comp = Symbol('comp');\r\nconst $loop = Symbol('loop');\r\nconst $event = Symbol('event');\r\nconst $state = Symbol('state');\r\nconst $owner = Symbol('owner');\r\nconst $child = Symbol('child');\r\nconst $depth = Symbol('depth');\r\nconst $entity = Symbol('entity');\r\nconst $system = Symbol('system');\r\nconst $transform = Symbol('transform');\r\nconst $name = Symbol.for('name');\r\nconst $new = Symbol('new');\r\nconst $del = Symbol('del');\r\nconst $modify = Symbol('modify');\r\nconst $loader = Symbol('loader');\r\n\r\nconst UBIT = 1 << 31;\r\nconst EBIT = 1 << 30;\r\nconst SBIT = 1 << 29;\r\nconst NBIT = 1 << 28;\r\n\r\nlet temp = null;\r\nconst freeSet = new Set();\r\n\r\nexport class Loader {\r\n    constructor(core) {\r\n        this.core = core;\r\n    }\r\n    load(file) {\r\n        return fetch(file).then(response => response.text().then(text => JSON.parse(text)));\r\n    }\r\n    parse(obj) { return Promise.resolve(obj); }\r\n    conf(res) { return Promise.resolve(res); }\r\n}\r\n\r\nexport class Component {\r\n    constructor(owner, enable) {\r\n        this[$state] = UBIT;\r\n        this[$owner] = owner;\r\n        if (enable) this[$state] |= EBIT | SBIT;\r\n    }\r\n    get owner() { return this[$owner]; }\r\n    get enable() { return !!(this[$state] & EBIT); }\r\n    get disable() { return !(this[$state] & EBIT); }\r\n    get hasEnable() { return !!(this[$state] & ~EBIT) && !(this[$state] & ~SBIT); }\r\n    get hasDisable() { return !(this[$state] & ~EBIT) && !!(this[$state] & ~SBIT); }\r\n    get hasNeedsUpdate() { return !!(this[$state] & ~NBIT); }\r\n    set needsUpdate(value) {\r\n        if (value) this[$state] |= NBIT;\r\n        else this[$state] &= ~NBIT;\r\n    }\r\n}\r\n\r\nclass Entity {\r\n    constructor(owner, enable) {\r\n        this[$state] = UBIT;\r\n        this[$owner] = owner;\r\n        this[$name] = null;\r\n        this[$tags] = new Set();\r\n        this[$comp] = new Map(); // [CompClass, Set of component]\r\n        this[$child] = new Set();\r\n        this[$depth] = owner ? owner[$depth] + 1 : 0;\r\n        this[$transform] = null;\r\n        if (enable) this[$state] |= EBIT | SBIT;\r\n        if (owner !== null) owner[$child].add(this);\r\n    }\r\n    get owner() { return this[$owner]; }\r\n    get enable() { return !!(this[$state] & EBIT); }\r\n    get child() { return this[$child]; }\r\n    get depth() { return this[$depth]; }\r\n    get name() { return this[$name]; }\r\n    set name(value) { this[$name] = value; }\r\n    addTag(tag) { this[$tags].add(tag); }\r\n    delTag(tag) { this[$tags].delete(tag); }\r\n    hasTag(tag) { return this[$tags].has(tag); }\r\n    getComp(compClass) {\r\n        temp = this[$comp].get(compClass);\r\n        if (temp === undefined) temp = freeSet;\r\n        return temp;\r\n    }\r\n    getCompOne(compClass) {\r\n        temp = this[$comp].get(compClass);\r\n        if (temp !== undefined) [temp] = temp;\r\n        return temp !== undefined ? temp : null;\r\n    }\r\n}\r\n\r\nlet gvarRes = null;\r\nexport default class Core {\r\n    constructor(domId, conf) {\r\n        this[$dom] = document.getElementById(domId);\r\n        this[$gldom] = document.getElementById('app-gl');\r\n        this[$uidom] = document.getElementById('app-ui');\r\n        this[$comp] = new Map();\r\n        this[$entity] = {\r\n            useEntity: new Set(),\r\n            delEntity: new Set()\r\n        };\r\n        this[$loader] = new Map();\r\n        this[$system] = new Map();\r\n        this[$event] = new Map();\r\n        this[$res] = new Map();\r\n        this[$gl] = this[$gldom].getContext('webgl', conf);\r\n        if (this[$gl] === null) throw new Error('Get 3d context is failed');\r\n        this[$ext] = {\r\n            // tf: this[$gl].getExtension('OES_texture_float'),\r\n            sd: this[$gl].getExtension('OES_standard_derivatives'),\r\n            // tfa: this[$gl].getExtension('EXT_texture_filter_anisotropic'),\r\n            vao: this[$gl].getExtension('OES_vertex_array_object'),\r\n            inst: this[$gl].getExtension('ANGLE_instanced_arrays')\r\n        };\r\n        if (this[$ext].tf === null) throw new Error('Extension OES_texture_float not supported');\r\n        if (this[$ext].sd === null) throw new Error('Extension OES_standard_derivatives not supported');\r\n        if (this[$ext].tfa === null) throw new Error('Extension EXT_texture_filter_anisotropic not supported');\r\n        if (this[$ext].vao === null) throw new Error('Extension OES_vertex_array_object not supported');\r\n        if (this[$ext].inst === null) throw new Error('Extension ANGLE_instanced_arrays not supported');\r\n        for (const e in this[$ext].tfa) this[$gl][e] = this[$ext].tfa[e];\r\n\r\n        this[$state] = false;\r\n        this[$modify] = false;\r\n        this[$raf] = 0;\r\n        this[$loop] = () => {\r\n            performance.mark('frs');\r\n            this.fireEvent('onStartFrame');\r\n            this.fireEvent('onUpdate');\r\n            this.fireEvent('onTransform');\r\n            this.fireEvent('onPHYUpdate');\r\n            this.fireEvent('onLateUpdate');\r\n            this.fireEvent('onRender');\r\n            if (this[$modify]) {\r\n                this[$new]();\r\n                this.fireEvent('onModify');\r\n                this[$del]();\r\n                this[$modify] = false;\r\n            }\r\n            this[$raf] = requestAnimationFrame(this[$loop]);\r\n            performance.mark('fre');\r\n            performance.measure('frame', 'frs', 'fre');\r\n            performance.clearMarks();\r\n            performance.clearMeasures();\r\n        };\r\n    }\r\n    start() {\r\n        this[$raf] = requestAnimationFrame(this[$loop]);\r\n        this[$state] = true;\r\n        this.fireEvent('onStart');\r\n    }\r\n    stop() {\r\n        cancelAnimationFrame(this[$raf]);\r\n        this[$raf] = 0;\r\n        this[$state] = false;\r\n    }\r\n\r\n    addRes(type, name, res) {\r\n        if (!this[$res].has(type)) this[$res].set(type, {});\r\n        const resType = this[$res].get(type);\r\n        if (resType[name] !== undefined) throw new Error('Resource with this name already used');\r\n        resType[name] = res;\r\n    }\r\n    getRes(type, name) {\r\n        if (!this[$res].has(type)) throw new Error('Resource type not found');\r\n        gvarRes = this[$res].get(type)[name];\r\n        if (gvarRes === undefined) throw new Error('Resource not found');\r\n        return gvarRes;\r\n    }\r\n    loadRes(loaderName, file) {\r\n        if (!this[$loader].has(loaderName)) throw new Error('Loader not found');\r\n        const loader = this[$loader].get(loaderName);\r\n        return loader.load(file).then(obj => loader.parse(obj).then(res => loader.conf(res)));\r\n    }\r\n    parseRes(loaderName, obj) {\r\n        if (!this[$loader].has(loaderName)) throw new Error('Loader not found');\r\n        const loader = this[$loader].get(loaderName);\r\n        return loader.parse(obj).then(res => loader.conf(res));\r\n    }\r\n    regLoader(loader) {\r\n        if (loader[$name] === undefined) throw new Error('Loader not named');\r\n        if (this[$loader].has(loader)) throw new Error('Loader already used');\r\n        this[$loader].set(loader[$name], loader);\r\n    }\r\n    getLoader(loaderName) {\r\n        if (!this[$loader].has(loaderName)) throw new Error('Loader not found');\r\n        return this[$loader].get(loaderName);\r\n    }\r\n\r\n    regSystem(system) {\r\n        if (system[$name] === undefined) throw new Error('System not named');\r\n        if (this[$system].has(system[$name])) throw new Error('System already used');\r\n        this[$system].set(system[$name], system);\r\n    }\r\n    getSystem(systemName) {\r\n        return this[$system].get(systemName);\r\n    }\r\n    regEvent(event, system) {\r\n        if (!this[$event].has(event)) this[$event].set(event, []);\r\n        const systemArray = this[$event].get(event);\r\n        systemArray.push(system);\r\n    }\r\n    fireEvent(event) {\r\n        const systemArray = this[$event].get(event);\r\n        if (systemArray !== undefined) {\r\n            for (const system of systemArray) {\r\n                system[event](this);\r\n            }\r\n        }\r\n    }\r\n\r\n    newEntity(owner, enable) {\r\n        const entity = new Entity(owner, enable);\r\n        this[$entity].useEntity.add(entity);\r\n        this[$modify] = true;\r\n        return entity;\r\n    }\r\n    delEntity(entity) {\r\n        this[$entity].delEntity.add(entity);\r\n        this[$modify] = true;\r\n    }\r\n    enableEntity(entity, value) { // TODO!!!\r\n        if (value) entity[$state] |= SBIT;\r\n        else entity[$state] &= ~SBIT;\r\n        for (const comp of entity[$comp]) this.enableComp(comp, value);\r\n        for (const child of entity[$child]) this.enableEntity(child, value);\r\n    }\r\n    getEntity() { return this[$entity].useEntity; }\r\n    getEntitiesByName(name, result = []) {\r\n        result.length = 0;\r\n        for (const entity of this[$entity].useEntity) {\r\n            if (entity[$name] === name) result.push(entity);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    newComp(CompClass, owner, enable, conf) {\r\n        const componentClass = this[$comp].get(CompClass);\r\n        if (componentClass === undefined) throw new Error('Component class not registered');\r\n        const comp = new CompClass(owner, enable, conf);\r\n        componentClass.newComp.add(comp);\r\n        this[$modify] = true;\r\n        return comp;\r\n    }\r\n    delComp(comp) {\r\n        this[$comp].get(comp.constructor).delComp.add(comp);\r\n        this[$modify] = true;\r\n    }\r\n    enableComp(comp, value) { // TODO!!!\r\n        if (value) comp[$state] |= SBIT;\r\n        else comp[$state] &= ~SBIT;\r\n        this[$comp].get(comp.constructor).modComp.add(comp);\r\n        this[$modify] = true;\r\n    }\r\n    getComp(compClass) { return this[$comp].get(compClass).useComp; }\r\n    getNewComp(compClass) { return this[$comp].get(compClass).newComp; }\r\n    getDelComp(compClass) { return this[$comp].get(compClass).delComp; }\r\n    getModComp(compClass) { return this[$comp].get(compClass).modComp; }\r\n    regComp(compClass) {\r\n        if (compClass[$name] === undefined) throw new Error('Component class not named');\r\n        if (this[$comp].has(compClass)) throw new Error('Component class already used');\r\n        this[$comp].set(compClass, {\r\n            newComp: new Set(),\r\n            useComp: new Set(),\r\n            delComp: new Set(),\r\n            modComp: new Set()\r\n        });\r\n    }\r\n    getCompClassByName(name) {\r\n        for (const compClass of this[$comp].keys()) {\r\n            if (compClass[$name] === name) return compClass;\r\n        }\r\n        throw new Error('Component class not found');\r\n    }\r\n\r\n    get gl() { return this[$gl]; }\r\n    get ext() { return this[$ext]; }\r\n    get dom() { return this[$dom]; }\r\n    get gldom() { return this[$gldom]; }\r\n    get uidom() { return this[$uidom]; }\r\n\r\n    [$new]() {\r\n        // Copy components in use\r\n        for (const compClass of this[$comp].values()) {\r\n            for (const comp of compClass.newComp) {\r\n                compClass.useComp.add(comp);\r\n                if (!comp.owner[$comp].has(comp.constructor)) comp.owner[$comp].set(comp.constructor, new Set());\r\n                comp.owner[$comp].get(comp.constructor).add(comp);\r\n            }\r\n        }\r\n\r\n        // Reload delete array\r\n        for (const entity of this[$entity].delEntity) {\r\n            for (const compMap of entity[$comp].keys()) {\r\n                for (const comp of entity[$comp].get(compMap)) {\r\n                    this.delComp(comp);\r\n                }\r\n            }\r\n            for (const child of entity[$child]) this.delEntity(child);\r\n        }\r\n    }\r\n    [$del]() {\r\n        // Delete entities\r\n        for (const entity of this[$entity].delEntity) {\r\n            this[$entity].useEntity.delete(entity);\r\n        }\r\n        this[$entity].delEntity.clear();\r\n\r\n        // Delete components\r\n        for (const compClass of this[$comp].values()) {\r\n            // Mod\r\n            // TODO!!! Enabled entity\r\n            for (const comp of compClass.modComp) {\r\n                if (comp[$state] & comp[$owner][$state] & SBIT) comp[$state] |= EBIT;\r\n                else comp[$state] &= ~EBIT;\r\n                comp[$state] &= ~NBIT;\r\n            }\r\n            // Del\r\n            for (const comp of compClass.delComp) {\r\n                compClass.useComp.delete(comp);\r\n                comp[$owner][$comp].get(comp.constructor).delete(comp);\r\n            }\r\n            compClass.newComp.clear();\r\n            compClass.delComp.clear();\r\n            compClass.modComp.clear();\r\n        }\r\n    }\r\n}\r\n","import { Component } from '../Core/Core';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class Mesh extends Component {\r\n    constructor(owner, enable, conf) {\r\n        super(owner, enable);\r\n        this.iid = -1;\r\n        this.geometry = conf.geometry;\r\n        this.material = conf.material;\r\n        this.skeleton = conf.skeleton !== undefined ? conf.skeleton : null;\r\n    }\r\n}\r\nMesh[$name] = 'Mesh';\r\n","let x2 = 0;\r\nlet y2 = 0;\r\nlet z2 = 0;\r\nlet xy = 0;\r\nlet xz = 0;\r\nlet xw = 0;\r\nlet yz = 0;\r\nlet yw = 0;\r\nlet zw = 0;\r\nlet i = 0;\r\nconst tm = new Float32Array(16);\r\n\r\nexport default class Mat4 extends Float32Array {\r\n    constructor() {\r\n        super(16);\r\n        this[0] = 1;\r\n        this[5] = 1;\r\n        this[10] = 1;\r\n        this[15] = 1;\r\n    }\r\n\r\n    copy(mat) {\r\n        for (i = 0; i < 16; i++) this[i] = mat[i];\r\n        return this;\r\n    }\r\n\r\n    identity() {\r\n        for (i = 0; i < 16; i++) this[i] = (i % 5 === 0) ? 1 : 0;\r\n        return this;\r\n    }\r\n\r\n    perspective(fov, aspect, near, far) {\r\n        this.identity();\r\n        this[15] = 0;\r\n        this[14] = -2 * far * near / (far - near);\r\n        this[11] = 1;\r\n        this[10] = (far + near) / (far - near);\r\n        this[5] = 1 / Math.tan(fov * 0.5);\r\n        this[0] = this[5] / aspect;\r\n        return this;\r\n    }\r\n\r\n    orbit(polar, azimuthal, dist, target) {\r\n        const cosa = Math.cos(azimuthal);\r\n        const sina = Math.sin(azimuthal);\r\n        const cosp = Math.cos(polar);\r\n        const sinp = Math.sin(polar);\r\n        this.identity();\r\n\r\n        this[0] = cosa;\r\n        this[4] = 0;\r\n        this[8] = sina;\r\n        this[1] = sina * sinp;\r\n        this[5] = cosp;\r\n        this[9] = -cosa * sinp;\r\n        this[2] = -sina * cosp;\r\n        this[6] = sinp;\r\n        this[10] = cosa * cosp;\r\n\r\n        this[12] = dist * (this[2] * this[0] + this[6] * this[4] + this[10] * this[8]);\r\n        this[13] = dist * (this[2] * this[1] + this[6] * this[5] + this[10] * this[9]);\r\n        this[14] = dist * (this[2] * this[2] + this[6] * this[6] + this[10] * this[10]);\r\n\r\n        this[12] -= target.x * this[0] + target.y * this[4] + target.z * this[8];\r\n        this[13] -= target.x * this[1] + target.y * this[5] + target.z * this[9];\r\n        this[14] -= target.x * this[2] + target.y * this[6] + target.z * this[10];\r\n        return this;\r\n    }\r\n\r\n    mul(mat) {\r\n        tm[0] = this[0] * mat[0] + this[1] * mat[4] + this[2] * mat[8] + this[3] * mat[12];\r\n        tm[1] = this[0] * mat[1] + this[1] * mat[5] + this[2] * mat[9] + this[3] * mat[13];\r\n        tm[2] = this[0] * mat[2] + this[1] * mat[6] + this[2] * mat[10] + this[3] * mat[14];\r\n        tm[3] = this[0] * mat[3] + this[1] * mat[7] + this[2] * mat[11] + this[3] * mat[15];\r\n        tm[4] = this[4] * mat[0] + this[5] * mat[4] + this[6] * mat[8] + this[7] * mat[12];\r\n        tm[5] = this[4] * mat[1] + this[5] * mat[5] + this[6] * mat[9] + this[7] * mat[13];\r\n        tm[6] = this[4] * mat[2] + this[5] * mat[6] + this[6] * mat[10] + this[7] * mat[14];\r\n        tm[7] = this[4] * mat[3] + this[5] * mat[7] + this[6] * mat[11] + this[7] * mat[15];\r\n        tm[8] = this[8] * mat[0] + this[9] * mat[4] + this[10] * mat[8] + this[11] * mat[12];\r\n        tm[9] = this[8] * mat[1] + this[9] * mat[5] + this[10] * mat[9] + this[11] * mat[13];\r\n        tm[10] = this[8] * mat[2] + this[9] * mat[6] + this[10] * mat[10] + this[11] * mat[14];\r\n        tm[11] = this[8] * mat[3] + this[9] * mat[7] + this[10] * mat[11] + this[11] * mat[15];\r\n        tm[12] = this[12] * mat[0] + this[13] * mat[4] + this[14] * mat[8] + this[15] * mat[12];\r\n        tm[13] = this[12] * mat[1] + this[13] * mat[5] + this[14] * mat[9] + this[15] * mat[13];\r\n        tm[14] = this[12] * mat[2] + this[13] * mat[6] + this[14] * mat[10] + this[15] * mat[14];\r\n        tm[15] = this[12] * mat[3] + this[13] * mat[7] + this[14] * mat[11] + this[15] * mat[15];\r\n        for (i = 0; i < 16; i++) this[i] = tm[i];\r\n        return this;\r\n    }\r\n\r\n    premul(mat) {\r\n        tm[0] = mat[0] * this[0] + mat[1] * this[4] + mat[2] * this[8] + mat[3] * this[12];\r\n        tm[1] = mat[0] * this[1] + mat[1] * this[5] + mat[2] * this[9] + mat[3] * this[13];\r\n        tm[2] = mat[0] * this[2] + mat[1] * this[6] + mat[2] * this[10] + mat[3] * this[14];\r\n        tm[3] = mat[0] * this[3] + mat[1] * this[7] + mat[2] * this[11] + mat[3] * this[15];\r\n        tm[4] = mat[4] * this[0] + mat[5] * this[4] + mat[6] * this[8] + mat[7] * this[12];\r\n        tm[5] = mat[4] * this[1] + mat[5] * this[5] + mat[6] * this[9] + mat[7] * this[13];\r\n        tm[6] = mat[4] * this[2] + mat[5] * this[6] + mat[6] * this[10] + mat[7] * this[14];\r\n        tm[7] = mat[4] * this[3] + mat[5] * this[7] + mat[6] * this[11] + mat[7] * this[15];\r\n        tm[8] = mat[8] * this[0] + mat[9] * this[4] + mat[10] * this[8] + mat[11] * this[12];\r\n        tm[9] = mat[8] * this[1] + mat[9] * this[5] + mat[10] * this[9] + mat[11] * this[13];\r\n        tm[10] = mat[8] * this[2] + mat[9] * this[6] + mat[10] * this[10] + mat[11] * this[14];\r\n        tm[11] = mat[8] * this[3] + mat[9] * this[7] + mat[10] * this[11] + mat[11] * this[15];\r\n        tm[12] = mat[12] * this[0] + mat[13] * this[4] + mat[14] * this[8] + mat[15] * this[12];\r\n        tm[13] = mat[12] * this[1] + mat[13] * this[5] + mat[14] * this[9] + mat[15] * this[13];\r\n        tm[14] = mat[12] * this[2] + mat[13] * this[6] + mat[14] * this[10] + mat[15] * this[14];\r\n        tm[15] = mat[12] * this[3] + mat[13] * this[7] + mat[14] * this[11] + mat[15] * this[15];\r\n        for (i = 0; i < 16; i++) this[i] = tm[i];\r\n        return this;\r\n    }\r\n\r\n    fromTRS(pos, rot, scl) {\r\n        this[3] = 0;\r\n        this[7] = 0;\r\n        this[11] = 0;\r\n        this[15] = 1;\r\n\r\n        x2 = 2 * rot.x * rot.x;\r\n        y2 = 2 * rot.y * rot.y;\r\n        z2 = 2 * rot.z * rot.z;\r\n        xy = 2 * rot.x * rot.y;\r\n        xz = 2 * rot.x * rot.z;\r\n        xw = 2 * rot.x * rot.w;\r\n        yz = 2 * rot.y * rot.z;\r\n        yw = 2 * rot.y * rot.w;\r\n        zw = 2 * rot.z * rot.w;\r\n\r\n        this[0] = scl.x * (1 - y2 - z2);\r\n        this[1] = scl.x * (xy + zw);\r\n        this[2] = scl.x * (xz - yw);\r\n        this[4] = scl.y * (xy - zw);\r\n        this[5] = scl.y * (1 - x2 - z2);\r\n        this[6] = scl.y * (yz + xw);\r\n        this[8] = scl.z * (xz + yw);\r\n        this[9] = scl.z * (yz - xw);\r\n        this[10] = scl.z * (1 - x2 - y2);\r\n\r\n        this[12] = pos.x;\r\n        this[13] = pos.y;\r\n        this[14] = pos.z;\r\n        return this;\r\n    }\r\n\r\n    fromTRSC(pos, rot, scl) {\r\n        this[3] = 0;\r\n        this[7] = 0;\r\n        this[11] = 0;\r\n        this[15] = 1;\r\n\r\n        x2 = 2 * rot.x * rot.x;\r\n        y2 = 2 * rot.y * rot.y;\r\n        z2 = 2 * rot.z * rot.z;\r\n        xy = 2 * (-rot.x) * (-rot.y);\r\n        xz = 2 * (-rot.x) * (-rot.z);\r\n        xw = 2 * (-rot.x) * (-rot.w);\r\n        yz = 2 * (-rot.y) * (-rot.z);\r\n        yw = 2 * (-rot.y) * (-rot.w);\r\n        zw = 2 * (-rot.z) * (-rot.w);\r\n\r\n        this[0] = (1 - y2 - z2) / scl.x;\r\n        this[1] = (xy + zw) / scl.x;\r\n        this[2] = (xz - yw) / scl.x;\r\n        this[4] = (xy - zw) / scl.y;\r\n        this[5] = (1 - x2 - z2) / scl.y;\r\n        this[6] = (yz + xw) / scl.y;\r\n        this[8] = (xz + yw) / scl.z;\r\n        this[9] = (yz - xw) / scl.z;\r\n        this[10] = (1 - x2 - y2) / scl.z;\r\n\r\n        // this[12] = -pos.x;\r\n        // this[13] = -pos.y;\r\n        // this[14] = -pos.z;\r\n        this[12] = -pos.x * this[0] - pos.y * this[4] - pos.z * this[8];\r\n        this[13] = -pos.x * this[1] - pos.y * this[5] - pos.z * this[9];\r\n        this[14] = -pos.x * this[2] - pos.y * this[6] - pos.z * this[10];\r\n        return this;\r\n    }\r\n}\r\n","import { Component } from '../Core/Core';\r\nimport Mat4 from '../Math/Mat4';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class Camera extends Component {\r\n    constructor(owner, enable, conf) {\r\n        super(owner, enable);\r\n        this.aspect = conf.aspect || 1;\r\n        this.fov = conf.fov || 0.7;\r\n        this.near = conf.near || 1;\r\n        this.far = conf.far || 1000;\r\n        this.pmat = new Mat4();\r\n        this.wmat = new Mat4();\r\n    }\r\n}\r\nCamera[$name] = 'Camera';\r\n","let length = 0;\r\nlet tx = 0;\r\nlet ty = 0;\r\nlet tz = 0;\r\nlet tw = 0;\r\nexport default class Vec3 {\r\n    constructor(x = 0, y = 0, z = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n\r\n    copy(vec) {\r\n        this.x = vec.x;\r\n        this.y = vec.y;\r\n        this.z = vec.z;\r\n        return this;\r\n    }\r\n\r\n    set(x, y, z) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        return this;\r\n    }\r\n\r\n    normalize() {\r\n        length = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n        this.x /= length;\r\n        this.y /= length;\r\n        this.z /= length;\r\n        return this;\r\n    }\r\n\r\n    abs() {\r\n        this.x = Math.abs(this.x);\r\n        this.y = Math.abs(this.y);\r\n        this.z = Math.abs(this.z);\r\n        return this;\r\n    }\r\n\r\n    min(vec) {\r\n        this.x = Math.min(this.x, vec.x);\r\n        this.y = Math.min(this.y, vec.y);\r\n        this.z = Math.min(this.z, vec.z);\r\n        return this;\r\n    }\r\n\r\n    max(vec) {\r\n        this.x = Math.max(this.x, vec.x);\r\n        this.y = Math.max(this.y, vec.y);\r\n        this.z = Math.max(this.z, vec.z);\r\n        return this;\r\n    }\r\n\r\n    mins(scale) {\r\n        this.x = Math.min(this.x, scale);\r\n        this.y = Math.min(this.y, scale);\r\n        this.z = Math.min(this.z, scale);\r\n        return this;\r\n    }\r\n\r\n    maxs(scale) {\r\n        this.x = Math.max(this.x, scale);\r\n        this.y = Math.max(this.y, scale);\r\n        this.z = Math.max(this.z, scale);\r\n        return this;\r\n    }\r\n\r\n    add(vec) {\r\n        this.x += vec.x;\r\n        this.y += vec.y;\r\n        this.z += vec.z;\r\n        return this;\r\n    }\r\n\r\n    sub(vec) {\r\n        this.x -= vec.x;\r\n        this.y -= vec.y;\r\n        this.z -= vec.z;\r\n        return this;\r\n    }\r\n\r\n    addScaledVec(vec, scale) {\r\n        this.x += vec.x * scale;\r\n        this.y += vec.y * scale;\r\n        this.z += vec.z * scale;\r\n        return this;\r\n    }\r\n\r\n    applyQuat(quat) {\r\n        tx = quat.w * this.x + quat.y * this.z - quat.z * this.y;\r\n        ty = quat.w * this.y + quat.z * this.x - quat.x * this.z;\r\n        tz = quat.w * this.z + quat.x * this.y - quat.y * this.x;\r\n        tw = -quat.x * this.x - quat.y * this.y - quat.z * this.z;\r\n        this.x = tx * quat.w - tw * quat.x - ty * quat.z + tz * quat.y;\r\n        this.y = ty * quat.w - tw * quat.y - tz * quat.x + tx * quat.z;\r\n        this.z = tz * quat.w - tw * quat.z - tx * quat.y + ty * quat.x;\r\n        return this;\r\n    }\r\n\r\n    mulNumber(num) {\r\n        this.x *= num;\r\n        this.y *= num;\r\n        this.z *= num;\r\n        return this;\r\n    }\r\n\r\n    get length() {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n    }\r\n}\r\n","import { Component } from '../Core/Core';\r\nimport Vec3 from '../Math/Vec3';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class Movement extends Component {\r\n    constructor(owner, enable, conf) {\r\n        super(owner, enable);\r\n        this.speed = conf.speed !== undefined ? conf.speed : 0;\r\n        this.linear = conf.linear !== undefined ? conf.linear : true;\r\n        this.direction = new Vec3(0, 0, -1);\r\n        if (conf.direction !== undefined) this.direction.copy(conf.direction);\r\n    }\r\n}\r\nMovement[$name] = 'Movement';\r\n","import { Component } from '../Core/Core';\r\nimport Vec3 from '../Math/Vec3';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class Rotation extends Component {\r\n    constructor(owner, enable, conf) {\r\n        super(owner, enable);\r\n        this.axis = new Vec3();\r\n        this.angle = conf.angle || 0;\r\n        if (conf.axis) this.axis.copy(conf.axis);\r\n    }\r\n}\r\nRotation[$name] = 'Rotation';\r\n","import { Component } from '../Core/Core';\r\nimport Vec3 from '../Math/Vec3';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class ATrigger extends Component {\r\n    constructor(owner, enable, conf) {\r\n        super(owner, enable);\r\n        this.pos = new Vec3();\r\n        this.next = null;\r\n        this.inner = [];\r\n        this.mask = conf.mask !== undefined ? conf.mask : 0xFFFFFFFF;\r\n        this.offset = new Vec3();\r\n        if (conf.offset !== undefined) this.offset.copy(conf.offset);\r\n        this.size = new Vec3();\r\n        if (conf.size !== undefined) this.size.copy(conf.size);\r\n    }\r\n}\r\nATrigger[$name] = 'ATrigger';\r\n","import { Component } from '../Core/Core';\r\nimport Vec3 from '../Math/Vec3';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class STrigger extends Component {\r\n    constructor(owner, enable, conf) {\r\n        super(owner, enable);\r\n        this.pos = new Vec3();\r\n        this.next = null;\r\n        this.inner = [];\r\n        this.mask = conf.mask !== undefined ? conf.mask : 0xFFFFFFFF;\r\n        this.offset = new Vec3();\r\n        if (conf.offset !== undefined) this.offset.copy(conf.offset);\r\n        this.radius = conf.radius !== undefined ? conf.radius : 0;\r\n    }\r\n}\r\nSTrigger[$name] = 'STrigger';\r\n","import { Component } from '../Core/Core';\r\nimport Vec3 from '../Math/Vec3';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class Animator extends Component {\r\n    constructor(owner, enable, conf) {\r\n        super(owner, enable);\r\n        this.skeleton = conf.skeleton !== undefined ? conf.skeleton : null;\r\n        this.animation = conf.animation !== undefined ? conf.animation : null;\r\n        this.loop = true;\r\n        this.stop = false;\r\n        this.time = 0;\r\n        this.key = new Vec3(); // LayerKey, StartKey, DeltaKey\r\n    }\r\n}\r\nAnimator[$name] = 'Animator';\r\n","let tmp = null;\r\n\r\nexport default class Quat {\r\n    constructor(x = 0, y = 0, z = 0, w = 1) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n\r\n    copy(quat) {\r\n        this.x = quat.x;\r\n        this.y = quat.y;\r\n        this.z = quat.z;\r\n        this.w = quat.w;\r\n        return this;\r\n    }\r\n\r\n    set(x, y, z, w) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n        return this;\r\n    }\r\n\r\n    mul(quat) {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n        this.x = w * quat.x + x * quat.w + y * quat.z - z * quat.y;\r\n        this.y = w * quat.y - x * quat.z + y * quat.w + z * quat.x;\r\n        this.z = w * quat.z + x * quat.y - y * quat.x + z * quat.w;\r\n        this.w = w * quat.w - x * quat.x - y * quat.y - z * quat.z;\r\n        return this;\r\n    }\r\n\r\n    premul(quat) {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n        this.x = quat.w * x + quat.x * w + quat.y * z - quat.z * y;\r\n        this.y = quat.w * y - quat.x * z + quat.y * w + quat.z * x;\r\n        this.z = quat.w * z + quat.x * y - quat.y * x + quat.z * w;\r\n        this.w = quat.w * w - quat.x * x - quat.y * y - quat.z * z;\r\n        return this;\r\n    }\r\n\r\n    fromAxisAngle(axis, angle) {\r\n        tmp = Math.sin(angle * 0.5);\r\n        this.x = axis.x * tmp;\r\n        this.y = axis.y * tmp;\r\n        this.z = axis.z * tmp;\r\n        this.w = Math.cos(angle * 0.5);\r\n        return this;\r\n    }\r\n}\r\n","import { Component } from '../Core/Core';\r\nimport Vec3 from '../Math/Vec3';\r\nimport Quat from '../Math/Quat';\r\nimport Mat4 from '../Math/Mat4';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class Transform extends Component {\r\n    constructor(owner, enable, conf) {\r\n        super(owner, enable);\r\n        this.position = new Vec3();\r\n        this.orientation = new Quat();\r\n        this.scale = new Vec3(1, 1, 1);\r\n        if (conf.scale) this.scale.copy(conf.scale);\r\n        if (conf.position) this.position.copy(conf.position);\r\n        if (conf.orientation) this.orientation.copy(conf.orientation);\r\n\r\n        this.lmat = new Mat4();\r\n        this.wmat = new Mat4();\r\n    }\r\n\r\n    worldPosition(res) {\r\n        res.x = this.wmat[12];\r\n        res.y = this.wmat[13];\r\n        res.z = this.wmat[14];\r\n        return res;\r\n    }\r\n}\r\nTransform[$name] = 'Transform';\r\n","import { Component } from '../Core/Core';\r\nimport Vec3 from '../Math/Vec3';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class OrbitControl extends Component {\r\n    constructor(owner, enable, conf) {\r\n        super(owner, enable);\r\n        this.polar = conf.polar || 0;\r\n        this.azimuthal = conf.azimuthal || 0;\r\n        this.distance = conf.distance || 0;\r\n        this.forward = new Vec3();\r\n        this.speed = conf.speed || 0.004;\r\n        this.nupd = true;\r\n        this.afrozen = conf.afrozen || false;\r\n        this.pfrozen = conf.pfrozen || false;\r\n        this.dfrozen = conf.dfrozen || false;\r\n    }\r\n}\r\nOrbitControl[$name] = 'OrbitControl';\r\n","const $name = Symbol.for('name');\r\n\r\nexport default class TimeSystem {\r\n    constructor(core) {\r\n        this[$name] = 'Time';\r\n        core.regEvent('onStartFrame', this);\r\n        this._time = performance.now();\r\n        this._currentTime = 0;\r\n        this._deltaTime = 0;\r\n        this._timeScale = 1;\r\n    }\r\n\r\n    onStartFrame() {\r\n        this._deltaTime = Math.max((performance.now() - this._time), 0.00001) * this._timeScale * 0.001;\r\n        this._time = performance.now();\r\n        this._currentTime += this._deltaTime;\r\n    }\r\n\r\n    get time() { return this._currentTime; }\r\n    get deltaTime() { return this._deltaTime; }\r\n    get timeScale() { return this._timeScale; }\r\n    set timeScale(scale) { this._timeScale = scale; }\r\n}\r\n","const $name = Symbol.for('name');\r\n\r\nlet mask = null;\r\nlet element = null;\r\nexport default class InputSystem {\r\n    constructor(core) {\r\n        this[$name] = 'Input';\r\n        core.regEvent('onStartFrame', this);\r\n\r\n        this._up = new Uint32Array(8);\r\n        this._down = new Uint32Array(8);\r\n        this._state = new Uint32Array(8);\r\n        this._pos = { x: 0, y: 0 };\r\n        this._dpos = { x: 0, y: 0 };\r\n        this._aup = new Uint32Array(8);\r\n        this._adown = new Uint32Array(8);\r\n        this._astate = new Uint32Array(8);\r\n        this._apos = { x: 0, y: 0 };\r\n        this._awheel = 0;\r\n        this._pwheel = 0;\r\n        this._dposflag = true;\r\n\r\n        const dom = core.dom;\r\n        dom.setAttribute('tabindex', 1);\r\n        dom.addEventListener('keyup', (e) => { this.kUp(e); });\r\n        dom.addEventListener('keydown', (e) => { this.kDown(e); });\r\n        dom.addEventListener('mouseup', (e) => { this.mUp(e); });\r\n        dom.addEventListener('mousedown', (e) => { this.mDown(e); });\r\n        dom.addEventListener('mousemove', (e) => { this.mMove(e); });\r\n        dom.addEventListener('mousewheel', (e) => { this.mWheel(e); });\r\n        dom.addEventListener('touchend', (e) => { this.tEnd(e); });\r\n        dom.addEventListener('touchstart', (e) => { this.tStart(e); });\r\n        dom.addEventListener('touchmove', (e) => { this.tMove(e); });\r\n        dom.addEventListener('contextmenu', (e) => { e.preventDefault(); });\r\n    }\r\n\r\n    onStartFrame() {\r\n        for (let i = 0; i < 8; i++) {\r\n            this._up[i] = this._aup[i];\r\n            this._down[i] = this._adown[i];\r\n            this._state[i] = this._astate[i];\r\n            this._aup[i] = 0;\r\n            this._adown[i] = 0;\r\n        }\r\n        this._dpos.x = this._dposflag ? this._apos.x - this._pos.x : 0;\r\n        this._dpos.y = this._dposflag ? this._apos.y - this._pos.y : 0;\r\n        this._pos.x = this._apos.x;\r\n        this._pos.y = this._apos.y;\r\n        this._pwheel = this._awheel;\r\n        this._awheel = 0;\r\n        this._dposflag = true;\r\n    }\r\n\r\n    asyncDown(keyCode) {\r\n        mask = 1 << (keyCode % 32);\r\n        element = Math.floor(keyCode / 32);\r\n        this._adown[element] |= mask & ~this._astate[element];\r\n        this._astate[element] |= mask;\r\n    }\r\n    asyncUp(keyCode) {\r\n        mask = 1 << (keyCode % 32);\r\n        element = Math.floor(keyCode / 32);\r\n        this._aup[element] |= mask;\r\n        this._astate[element] &= ~mask;\r\n    }\r\n\r\n    kUp(e) {\r\n        this.asyncUp(e.keyCode);\r\n    }\r\n    kDown(e) {\r\n        this.asyncDown(e.keyCode);\r\n        if (e.keyCode !== 116) e.preventDefault();\r\n    }\r\n    mUp(e) {\r\n        switch (e.button) {\r\n            case 0: e.keyCode = 1; break;\r\n            case 1: e.keyCode = 4; break;\r\n            case 2: e.keyCode = 2; break;\r\n            default: e.keyCode = 0; break;\r\n        }\r\n        this.asyncUp(e.keyCode);\r\n    }\r\n    mDown(e) {\r\n        switch (e.button) {\r\n            case 0: e.keyCode = 1; break;\r\n            case 1: e.keyCode = 4; break;\r\n            case 2: e.keyCode = 2; break;\r\n            default: e.keyCode = 0; break;\r\n        }\r\n        this.asyncDown(e.keyCode);\r\n    }\r\n    mMove(e) {\r\n        this._apos.x = e.clientX;\r\n        this._apos.y = e.clientY;\r\n    }\r\n    mWheel(e) {\r\n        this._awheel += e.wheelDelta / 120;\r\n    }\r\n    tStart(e) {\r\n        this._apos.x = e.changedTouches[0].clientX;\r\n        this._apos.y = e.changedTouches[0].clientY;\r\n        this.asyncDown(1);\r\n        this._dposflag = false;\r\n        e.preventDefault();\r\n    }\r\n    tEnd(e) {\r\n        this._apos.x = e.changedTouches[0].clientX;\r\n        this._apos.y = e.changedTouches[0].clientY;\r\n        this.asyncUp(1);\r\n    }\r\n    tMove(e) {\r\n        this._apos.x = e.changedTouches[0].clientX;\r\n        this._apos.y = e.changedTouches[0].clientY;\r\n    }\r\n\r\n    keyUp(key) {\r\n        return (this._up[Math.floor(key / 32)] >> (key % 32)) & 0x1;\r\n    }\r\n    keyDown(key) {\r\n        return (this._down[Math.floor(key / 32)] >> (key % 32)) & 0x1;\r\n    }\r\n    keyState(key) {\r\n        return (this._state[Math.floor(key / 32)] >> (key % 32)) & 0x1;\r\n    }\r\n    mousePos() {\r\n        return this._pos;\r\n    }\r\n    mouseDeltaPos() {\r\n        return this._dpos;\r\n    }\r\n    mouseWheel() {\r\n        return this._pwheel;\r\n    }\r\n\r\n    get VK_LBUTTON() { return 1; }\r\n    get VK_RBUTTON() { return 2; }\r\n    get VK_MBUTTON() { return 4; }\r\n    get VK_XBUTTON1() { return 5; }\r\n    get VK_XBUTTON2() { return 6; }\r\n\r\n    get VK_BACK() { return 8; }\r\n    get VK_TAB() { return 9; }\r\n\r\n    get VK_ESCAPE() { return 27; }\r\n\r\n    get VK_SPACE() { return 32; }\r\n    get VK_PAGEUP() { return 33; }\r\n    get VK_PAGEDOWN() { return 34; }\r\n    get VK_END() { return 35; }\r\n    get VK_HOME() { return 36; }\r\n    get VK_LEFT() { return 37; }\r\n    get VK_UP() { return 38; }\r\n    get VK_RIGHT() { return 39; }\r\n    get VK_DOWN() { return 40; }\r\n\r\n    get VK_0() { return 48; }\r\n    get VK_1() { return 49; }\r\n    get VK_2() { return 50; }\r\n    get VK_3() { return 51; }\r\n    get VK_4() { return 52; }\r\n    get VK_5() { return 53; }\r\n    get VK_6() { return 54; }\r\n    get VK_7() { return 55; }\r\n    get VK_8() { return 56; }\r\n    get VK_9() { return 57; }\r\n\r\n    get VK_A() { return 65; }\r\n    get VK_B() { return 66; }\r\n    get VK_C() { return 67; }\r\n    get VK_D() { return 68; }\r\n    get VK_E() { return 69; }\r\n    get VK_F() { return 70; }\r\n    get VK_G() { return 71; }\r\n    get VK_H() { return 72; }\r\n    get VK_I() { return 73; }\r\n    get VK_J() { return 74; }\r\n    get VK_K() { return 75; }\r\n    get VK_L() { return 76; }\r\n    get VK_M() { return 77; }\r\n    get VK_N() { return 78; }\r\n    get VK_O() { return 79; }\r\n    get VK_P() { return 80; }\r\n    get VK_Q() { return 81; }\r\n    get VK_R() { return 82; }\r\n    get VK_S() { return 83; }\r\n    get VK_T() { return 84; }\r\n    get VK_U() { return 85; }\r\n    get VK_V() { return 86; }\r\n    get VK_W() { return 87; }\r\n    get VK_X() { return 88; }\r\n    get VK_Y() { return 89; }\r\n    get VK_Z() { return 90; }\r\n\r\n    get VK_N0() { return 96; }\r\n    get VK_N1() { return 97; }\r\n    get VK_N2() { return 98; }\r\n    get VK_N3() { return 99; }\r\n    get VK_N4() { return 100; }\r\n    get VK_N5() { return 101; }\r\n    get VK_N6() { return 102; }\r\n    get VK_N7() { return 103; }\r\n    get VK_N8() { return 104; }\r\n    get VK_N9() { return 105; }\r\n\r\n    get VK_F1() { return 112; }\r\n    get VK_F2() { return 113; }\r\n    get VK_F3() { return 114; }\r\n    get VK_F4() { return 115; }\r\n    get VK_F5() { return 116; }\r\n    get VK_F6() { return 117; }\r\n    get VK_F7() { return 118; }\r\n    get VK_F8() { return 119; }\r\n    get VK_F9() { return 120; }\r\n    get VK_F10() { return 121; }\r\n    get VK_F11() { return 122; }\r\n    get VK_F12() { return 123; }\r\n    get VK_F13() { return 124; }\r\n    get VK_F14() { return 125; }\r\n    get VK_F15() { return 126; }\r\n    get VK_F16() { return 127; }\r\n    get VK_F17() { return 128; }\r\n    get VK_F18() { return 129; }\r\n    get VK_F19() { return 130; }\r\n    get VK_F20() { return 131; }\r\n    get VK_F21() { return 132; }\r\n    get VK_F22() { return 133; }\r\n    get VK_F23() { return 134; }\r\n    get VK_F24() { return 135; }\r\n}\r\n","const $name = Symbol.for('name');\r\n\r\nexport default class ScreenSystem {\r\n    constructor(core) {\r\n        this[$name] = 'Screen';\r\n        core.regEvent('onStartFrame', this);\r\n        this.curWidth = 1;\r\n        this.curHeight = 1;\r\n        this.newWidth = 1;\r\n        this.newHeight = 1;\r\n        this.onscreen = false;\r\n        this.pr = window.devicePixelRatio || 1;\r\n    }\r\n\r\n    onStartFrame(core) {\r\n        performance.mark('screens');\r\n        this.newWidth = core.dom.clientWidth * this.pr;\r\n        this.newHeight = core.dom.clientHeight * this.pr;\r\n        this.onscreen = false;\r\n        if (this.curWidth !== this.newWidth) { this.curWidth = this.newWidth; this.onscreen = true; }\r\n        if (this.curHeight !== this.newHeight) { this.curHeight = this.newHeight; this.onscreen = true; }\r\n        if (this.onscreen) core.fireEvent('onScreen');\r\n        performance.mark('screene');\r\n        performance.measure('screen', 'screens', 'screene');\r\n    }\r\n\r\n    get width() { return this.curWidth; }\r\n    get height() { return this.curHeight; }\r\n    get widthNPR() { return this.curWidth / this.pr; }\r\n    get heightNPR() { return this.curHeight / this.pr; }\r\n}\r\n","const $k1 = Symbol('k1');\r\nconst $in = Symbol('in');\r\nconst $it1 = Symbol('it1');\r\nconst $it2 = Symbol('it2');\r\n\r\nlet temp = null;\r\nexport default class DMap {\r\n    constructor() {\r\n        this[$in] = new Map();\r\n        this[$it1] = null;\r\n        this[$it2] = null;\r\n    }\r\n\r\n    start() {\r\n        this[$it1] = null;\r\n        this[$it2] = null;\r\n    }\r\n\r\n    next(ret) {\r\n        if (!this[$it1]) this[$it1] = this[$in][Symbol.iterator]();\r\n\r\n        while (true) {\r\n            if (!this[$it2]) {\r\n                temp = this[$it1].next();\r\n                if (temp.done) {\r\n                    this[$it1] = null;\r\n                    this[$it2] = null;\r\n                    return null;\r\n                }\r\n                this[$k1] = temp.value[0];\r\n                this[$it2] = temp.value[1][Symbol.iterator]();\r\n            }\r\n\r\n            temp = this[$it2].next();\r\n            if (!temp.done) {\r\n                ret.k1 = this[$k1];\r\n                ret.k2 = temp.value[0];\r\n                ret.value = temp.value[1];\r\n                return ret;\r\n            }\r\n            this[$it2] = null;\r\n        }\r\n    }\r\n\r\n    set(k1, k2, value) {\r\n        if (this[$in].has(k1)) {\r\n            temp = this[$in].get(k1);\r\n        } else {\r\n            temp = new Map();\r\n            this[$in].set(k1, temp);\r\n        }\r\n        temp.set(k2, value);\r\n    }\r\n\r\n    get(k1, k2) {\r\n        temp = this[$in].get(k1);\r\n        if (temp) {\r\n            return temp.get(k2);\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    has(k1, k2) {\r\n        temp = this[$in].get(k1);\r\n        if (temp) {\r\n            return temp.has(k2);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    delete(k1, k2) {\r\n        temp = this[$in].get(k1);\r\n        if (temp) {\r\n            return temp.delete(k2);\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","const BATCH_SIZE = 64;\r\n\r\nexport default class Batch {\r\n    constructor(core, material, geometry, ibo, offset) {\r\n        this.mat = material;\r\n        this.geo = geometry;\r\n        this.ibo = ibo;\r\n        this.offset = offset * BATCH_SIZE;\r\n        this.size = 0;\r\n        this.vao = core.ext.vao.createVertexArrayOES();\r\n\r\n        // vao\r\n        const gl = core.gl;\r\n        const shader = this.mat.shader;\r\n        core.ext.vao.bindVertexArrayOES(this.vao);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.geo.vbo);\r\n        for (const attr in this.geo.attribute) {\r\n            if (shader.attribute[attr] !== undefined) {\r\n                gl.enableVertexAttribArray(shader.attribute[attr]);\r\n                gl.vertexAttribPointer(\r\n                    shader.attribute[attr],\r\n                    this.geo.attribute[attr].size,\r\n                    this.geo.attribute[attr].type,\r\n                    false,\r\n                    this.geo.attribute[attr].stride,\r\n                    this.geo.attribute[attr].offset\r\n                );\r\n            }\r\n        }\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.ibo);\r\n        let attr = gl.getAttribLocation(shader.program, 'ex');\r\n        gl.enableVertexAttribArray(attr);\r\n        gl.vertexAttribPointer(\r\n            attr,\r\n            3,\r\n            gl.FLOAT,\r\n            false,\r\n            48,\r\n            this.offset * 48\r\n        );\r\n        core.ext.inst.vertexAttribDivisorANGLE(attr, 1);\r\n        attr = gl.getAttribLocation(shader.program, 'ey');\r\n        gl.enableVertexAttribArray(attr);\r\n        gl.vertexAttribPointer(\r\n            attr,\r\n            3,\r\n            gl.FLOAT,\r\n            false,\r\n            48,\r\n            this.offset * 48 + 12\r\n        );\r\n        core.ext.inst.vertexAttribDivisorANGLE(attr, 1);\r\n        attr = gl.getAttribLocation(shader.program, 'ez');\r\n        gl.enableVertexAttribArray(attr);\r\n        gl.vertexAttribPointer(\r\n            attr,\r\n            3,\r\n            gl.FLOAT,\r\n            false,\r\n            48,\r\n            this.offset * 48 + 24\r\n        );\r\n        core.ext.inst.vertexAttribDivisorANGLE(attr, 1);\r\n        attr = gl.getAttribLocation(shader.program, 'et');\r\n        gl.enableVertexAttribArray(attr);\r\n        gl.vertexAttribPointer(\r\n            attr,\r\n            3,\r\n            gl.FLOAT,\r\n            false,\r\n            48,\r\n            this.offset * 48 + 36\r\n        );\r\n        core.ext.inst.vertexAttribDivisorANGLE(attr, 1);\r\n\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.geo.ebo);\r\n\r\n        // instance attr\r\n\r\n        core.ext.vao.bindVertexArrayOES(null);\r\n    }\r\n\r\n    add() {\r\n        this.size++;\r\n        if (this.size > BATCH_SIZE) throw new Error('BATCH_SIZE ERROR');\r\n        return this.offset + this.size - 1;\r\n    }\r\n\r\n    draw(core, camera) {\r\n        this.mat.use(core);\r\n        this.mat.shader.setUniform(core, 'PM', camera.pmat);\r\n        this.mat.shader.setUniform(core, 'WM', camera.wmat);\r\n        core.ext.vao.bindVertexArrayOES(this.vao);\r\n        core.ext.inst.drawElementsInstancedANGLE(core.gl.TRIANGLES, this.geo.length, core.gl.UNSIGNED_SHORT, 0, this.size);\r\n        core.ext.vao.bindVertexArrayOES(null);\r\n    }\r\n}\r\n","import Mesh from '../Components/Mesh';\r\nimport Camera from '../Components/Camera';\r\nimport Transform from '../Components/Transform';\r\nimport DMap from '../Math/DMap';\r\nimport Batch from '../Math/Batch';\r\n// import Animator from '../Components/Animator';\r\n\r\nconst $name = Symbol.for('name');\r\nconst IBO_LENGTH = 4096;\r\n\r\nlet gl = null;\r\nlet batch = null;\r\nlet screen = null;\r\nlet material = null;\r\nlet geometry = null;\r\nlet transform = null;\r\nconst ret = {};\r\n// let animator = null;\r\n// let skeleton = null;\r\nexport default class RenderSystem {\r\n    constructor(core) {\r\n        this[$name] = 'Render';\r\n        core.regEvent('onStart', this);\r\n        core.regEvent('onScreen', this);\r\n        core.regEvent('onRender', this);\r\n        core.regEvent('onModify', this);\r\n        this.camera = null;\r\n        this.envMesh = null;\r\n        this.batches = new DMap();\r\n        this.bid = 0;\r\n        this.ibo = null;\r\n        this.ibuf = new Float32Array(IBO_LENGTH * 12);\r\n\r\n        for (let i = 0; i < this.ibuf.length; i++) {\r\n            if (i % 12 === 0) this.ibuf[i] = 1;\r\n            if (i % 12 === 4) this.ibuf[i] = 1;\r\n            if (i % 12 === 8) this.ibuf[i] = 1;\r\n        }\r\n\r\n        console.log(this.batches);\r\n    }\r\n\r\n    onStart(core) {\r\n        gl = core.gl;\r\n        gl.clearColor(0.7, 0.65, 0.6, 1);\r\n        this.ibo = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.ibo);\r\n        gl.bufferData(gl.ARRAY_BUFFER, IBO_LENGTH * 48, gl.STREAM_DRAW);\r\n    }\r\n\r\n    onScreen(core) {\r\n        screen = core.getSystem('Screen');\r\n        core.gl.viewport(0, 0, screen.width, screen.height);\r\n        core.gldom.width = screen.width;\r\n        core.gldom.height = screen.height;\r\n    }\r\n\r\n    onRender(core) {\r\n        performance.mark('rnds');\r\n        core.gl.clear(core.gl.COLOR_BUFFER_BIT | core.gl.DEPTH_BUFFER_BIT);\r\n\r\n        if (this.camera) {\r\n            if (this.envMesh) {\r\n                material = core.getRes('material', this.envMesh.material);\r\n                material.use(core);\r\n                core.getRes('geometry', this.envMesh.geometry).use(core, material.shader);\r\n            }\r\n\r\n            for (const comp of core.getComp(Mesh)) {\r\n                if (comp.disable) continue;\r\n                transform = comp.owner.getCompOne(Transform);\r\n\r\n                if (comp.iid !== -1) {\r\n                    // update ibo\r\n                    this.ibuf[comp.iid * 12 + 0] = transform.wmat[0];\r\n                    this.ibuf[comp.iid * 12 + 1] = transform.wmat[1];\r\n                    this.ibuf[comp.iid * 12 + 2] = transform.wmat[2];\r\n                    this.ibuf[comp.iid * 12 + 3] = transform.wmat[4];\r\n                    this.ibuf[comp.iid * 12 + 4] = transform.wmat[5];\r\n                    this.ibuf[comp.iid * 12 + 5] = transform.wmat[6];\r\n                    this.ibuf[comp.iid * 12 + 6] = transform.wmat[8];\r\n                    this.ibuf[comp.iid * 12 + 7] = transform.wmat[9];\r\n                    this.ibuf[comp.iid * 12 + 8] = transform.wmat[10];\r\n                    this.ibuf[comp.iid * 12 + 9] = transform.wmat[12];\r\n                    this.ibuf[comp.iid * 12 + 10] = transform.wmat[13];\r\n                    this.ibuf[comp.iid * 12 + 11] = transform.wmat[14];\r\n                    continue;\r\n                }\r\n\r\n                material = core.getRes('material', comp.material);\r\n                material.use(core);\r\n                material.shader.setUniform(core, 'PM', this.camera.pmat);\r\n                material.shader.setUniform(core, 'WM', this.camera.wmat);\r\n                material.shader.setUniform(core, 'OM', transform.wmat);\r\n\r\n                // if (comp.skeleton) {\r\n                //     animator = comp.owner.getCompOne(Animator);\r\n                //     if (animator) {\r\n                //         skeleton = core.getRes('skeleton', animator.skeleton);\r\n                //         material.shader.setUniform(core, 'key', animator.key);\r\n                //         core.gl.uniform1i(material.shader.uniform.bones, 8);\r\n                //         core.gl.activeTexture(core.gl.TEXTURE0 + 8);\r\n                //         core.gl.bindTexture(core.gl.TEXTURE_2D, skeleton.bakeTex);\r\n                //     }\r\n                // }\r\n\r\n                core.getRes('geometry', comp.geometry).use(core, material.shader);\r\n            }\r\n\r\n            // TODO Draw Batches\r\n            gl = core.gl;\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.ibo);\r\n            gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.ibuf);\r\n            this.batches.start();\r\n            while (this.batches.next(ret)) {\r\n                ret.value.draw(core, this.camera);\r\n            }\r\n        }\r\n        performance.mark('rnde');\r\n        performance.measure('render', 'rnds', 'rnde');\r\n    }\r\n\r\n    onModify(core) {\r\n        for (const comp of core.getNewComp(Camera)) {\r\n            this.camera = comp;\r\n            screen = core.getSystem('Screen');\r\n            this.camera.aspect = screen.width / screen.height;\r\n            this.envMesh = comp.owner.getCompOne(Mesh);\r\n        }\r\n\r\n        for (const comp of core.getNewComp(Mesh)) {\r\n            material = core.getRes('material', comp.material);\r\n            if (material.batch) {\r\n                geometry = core.getRes('geometry', comp.geometry);\r\n                batch = this.batches.get(comp.material, comp.geometry);\r\n                if (!batch) {\r\n                    batch = new Batch(\r\n                        core,\r\n                        material,\r\n                        geometry,\r\n                        this.ibo,\r\n                        this.bid\r\n                    );\r\n                    this.bid++;\r\n                    this.batches.set(comp.material, comp.geometry, batch);\r\n                }\r\n                comp.iid = batch.add();\r\n            }\r\n        }\r\n    }\r\n\r\n    setMainCamera(camera) { this.camera = camera; }\r\n}\r\n","import Rotation from '../Components/Rotation';\r\nimport Transform from '../Components/Transform';\r\nimport Quat from '../Math/Quat';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nlet transform = null;\r\nconst quat = new Quat();\r\nexport default class RotationSystem {\r\n    constructor(core) {\r\n        this[$name] = 'Rotation';\r\n        core.regEvent('onUpdate', this);\r\n    }\r\n\r\n    onUpdate(core) {\r\n        for (const comp of core.getComp(Rotation)) {\r\n            if (comp.disable) continue;\r\n            transform = comp.owner.getCompOne(Transform);\r\n            quat.fromAxisAngle(comp.axis, comp.angle);\r\n            transform.orientation.premul(quat);\r\n        }\r\n    }\r\n}\r\n","import Movement from '../Components/Movement';\r\nimport Transform from '../Components/Transform';\r\nimport Vec3 from '../Math/Vec3';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nlet transform = null;\r\nexport default class MovementSystem {\r\n    constructor(core) {\r\n        this[$name] = 'Movement';\r\n        core.regEvent('onStart', this);\r\n        core.regEvent('onUpdate', this);\r\n        this.limearSpeed = new Vec3();\r\n    }\r\n\r\n    onStart(core) {\r\n        this.time = core.getSystem('Time');\r\n    }\r\n\r\n    onUpdate(core) {\r\n        for (const comp of core.getComp(Movement)) {\r\n            if (comp.disable) continue;\r\n            transform = comp.owner.getCompOne(Transform);\r\n            if (comp.linear && comp.owner.owner === null) transform.position.addScaledVec(this.limearSpeed, this.time.deltaTime);\r\n            transform.position.addScaledVec(comp.direction, this.time.deltaTime * comp.speed);\r\n        }\r\n    }\r\n}\r\n","import Camera from '../Components/Camera';\r\nimport Transform from '../Components/Transform';\r\nimport OrbitControl from '../Components/OrbitControl';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nlet input = null;\r\nlet camera = null;\r\nlet transform = null;\r\nexport default class OrbitControlSystem {\r\n    constructor(core) {\r\n        this[$name] = 'OrbitControl';\r\n        core.regEvent('onStart', this);\r\n        core.regEvent('onScreen', this);\r\n        core.regEvent('onLateUpdate', this);\r\n        this.count = 0;\r\n        this.screen = null;\r\n    }\r\n\r\n    onStart(core) {\r\n        this.screen = core.getSystem('Screen');\r\n        this.input = core.getSystem('Input');\r\n    }\r\n\r\n    onScreen(core) {\r\n        for (const comp of core.getComp(OrbitControl)) {\r\n            if (comp.disable) continue;\r\n            camera = comp.owner.getCompOne(Camera);\r\n            camera.aspect = this.screen.width / this.screen.height;\r\n            camera.pmat.perspective(camera.fov, camera.aspect, camera.near, camera.far);\r\n        }\r\n    }\r\n\r\n    onLateUpdate(core) { // TODO!!!\r\n        input = this.input;\r\n        for (const comp of core.getComp(OrbitControl)) {\r\n            if (comp.disable) continue;\r\n\r\n            transform = comp.owner.getCompOne(Transform);\r\n            camera = comp.owner.getCompOne(Camera);\r\n            if (input.keyState(input.VK_LBUTTON)) {\r\n                if (!comp.pfrozen) comp.polar -= input.mouseDeltaPos().y * comp.speed;\r\n                if (!comp.afrozen) comp.azimuthal -= input.mouseDeltaPos().x * comp.speed;\r\n                camera.wmat.orbit(comp.polar, comp.azimuthal, comp.distance, transform.position);\r\n            } else if (input.mouseWheel()) {\r\n                if (!comp.dfrozen) comp.distance -= input.mouseWheel() * comp.speed * 100;\r\n                camera.wmat.orbit(comp.polar, comp.azimuthal, comp.distance, transform.position);\r\n            } else if (comp.nupd) {\r\n                comp.nupd = false;\r\n                camera.wmat.orbit(comp.polar, comp.azimuthal, comp.distance, transform.position);\r\n                camera.aspect = this.screen.width / this.screen.height;\r\n                camera.pmat.perspective(camera.fov, camera.aspect, camera.near, camera.far);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import Transform from '../Components/Transform';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nlet towner = null;\r\nlet transform = null;\r\nexport default class TransformSystem {\r\n    constructor(core) {\r\n        this[$name] = 'Transform';\r\n        core.regEvent('onTransform', this);\r\n        core.regEvent('onModify', this);\r\n    }\r\n\r\n    onTransform(core) {\r\n        performance.mark('trfs');\r\n        for (const entity of core.getEntity()) {\r\n            if (entity.depth === 0) this.calcTransform(entity);\r\n        }\r\n        performance.mark('trfe');\r\n        performance.measure('transform', 'trfs', 'trfe');\r\n    }\r\n\r\n    onModify(core) { // TODO!!!\r\n        for (const comp of core.getNewComp(Transform)) {\r\n            this.calcTransform(comp.owner);\r\n        }\r\n    }\r\n\r\n    calcTransform(entity) {\r\n        transform = entity.getCompOne(Transform);\r\n        if (transform) {\r\n            transform.lmat.fromTRS(transform.position, transform.orientation, transform.scale);\r\n            transform.wmat.copy(transform.lmat);\r\n            if (entity.owner) {\r\n                towner = entity.owner.getCompOne(Transform);\r\n                transform.wmat.mul(towner.wmat);\r\n            }\r\n        }\r\n        for (const child of entity.child) this.calcTransform(child);\r\n    }\r\n}\r\n","import ATrigger from '../Components/ATrigger';\r\nimport STrigger from '../Components/STrigger';\r\nimport Transform from '../Components/Transform';\r\nimport Vec3 from '../Math/Vec3';\r\n\r\nconst $name = Symbol.for('name');\r\nconst tvec = new Vec3();\r\n\r\nfunction STS(c1, c2) {\r\n    tvec.copy(c1.pos).sub(c2.pos);\r\n    return (tvec.length - c1.radius - c2.radius) <= 0;\r\n}\r\nfunction ATS(c1, c2) {\r\n    tvec.copy(c2.pos).sub(c1.pos).abs().sub(c1.size).maxs(0);\r\n    return (tvec.length - c2.radius) <= 0;\r\n}\r\nfunction ATA(c1, c2) {\r\n    tvec.copy(c2.pos).sub(c1.pos).abs().sub(c1.size).sub(c2.size);\r\n    return (tvec.x <= 0) && (tvec.y <= 0) && (tvec.z <= 0);\r\n}\r\n\r\nclass Branch {\r\n    constructor(xl, yl, xh, yh, stp, maxStp) {\r\n        this.child = null;\r\n        this.inner = false;\r\n        this.xl = xl;\r\n        this.yl = yl;\r\n        this.xh = xh;\r\n        this.yh = yh;\r\n        this.c1 = null;\r\n        this.c2 = null;\r\n        this.bs = null;\r\n        this.es = null;\r\n        this.ba = null;\r\n        this.ea = null;\r\n\r\n        this.tx = (xl + xh) * 0.5;\r\n        this.ty = (yl + yh) * 0.5;\r\n\r\n        if (stp < maxStp) {\r\n            this.child = new Array(4);\r\n            this.child[0] = new Branch(xl, yl, this.tx, this.ty, stp + 1, maxStp);\r\n            this.child[1] = new Branch(this.tx, yl, xh, this.ty, stp + 1, maxStp);\r\n            this.child[2] = new Branch(xl, this.ty, this.tx, yh, stp + 1, maxStp);\r\n            this.child[3] = new Branch(this.tx, this.ty, xh, yh, stp + 1, maxStp);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.bs = null;\r\n        this.es = null;\r\n        this.ba = null;\r\n        this.ea = null;\r\n        if (this.child && this.inner) {\r\n            this.child[0].clear();\r\n            this.child[1].clear();\r\n            this.child[2].clear();\r\n            this.child[3].clear();\r\n        }\r\n        this.inner = false;\r\n    }\r\n\r\n    adds(comp, x, y, r) {\r\n        this.tx = (this.xl + this.xh) * 0.5;\r\n        this.ty = (this.yl + this.yh) * 0.5;\r\n\r\n        if (this.child) {\r\n            if (x + r < this.tx && y + r < this.ty) {\r\n                this.inner = true;\r\n                this.child[0].adds(comp, x, y, r);\r\n            } else if (x - r > this.tx && y + r < this.ty) {\r\n                this.inner = true;\r\n                this.child[1].adds(comp, x, y, r);\r\n            } else if (x + r < this.tx && y - r > this.ty) {\r\n                this.inner = true;\r\n                this.child[2].adds(comp, x, y, r);\r\n            } else if (x - r > this.tx && y - r > this.ty) {\r\n                this.inner = true;\r\n                this.child[3].adds(comp, x, y, r);\r\n            } else {\r\n                if (this.es === null) {\r\n                    this.bs = comp;\r\n                } else {\r\n                    this.es.next = comp;\r\n                }\r\n                this.es = comp;\r\n                comp.next = null;\r\n            }\r\n        } else {\r\n            if (this.es === null) {\r\n                this.bs = comp;\r\n            } else {\r\n                this.es.next = comp;\r\n            }\r\n            this.es = comp;\r\n            comp.next = null;\r\n        }\r\n    }\r\n\r\n    adda(comp, x, y, s) {\r\n        this.tx = (this.xl + this.xh) * 0.5;\r\n        this.ty = (this.yl + this.yh) * 0.5;\r\n\r\n        if (this.child) {\r\n            if (x + s.x < this.tx && y + s.z < this.ty) {\r\n                this.inner = true;\r\n                this.child[0].adda(comp, x, y, s);\r\n            } else if (x - s.x > this.tx && y + s.z < this.ty) {\r\n                this.inner = true;\r\n                this.child[1].adda(comp, x, y, s);\r\n            } else if (x + s.x < this.tx && y - s.z > this.ty) {\r\n                this.inner = true;\r\n                this.child[2].adda(comp, x, y, s);\r\n            } else if (x - s.x > this.tx && y - s.z > this.ty) {\r\n                this.inner = true;\r\n                this.child[3].adda(comp, x, y, s);\r\n            } else {\r\n                if (this.ea === null) {\r\n                    this.ba = comp;\r\n                } else {\r\n                    this.ea.next = comp;\r\n                }\r\n                this.ea = comp;\r\n                comp.next = null;\r\n            }\r\n        } else {\r\n            if (this.ea === null) {\r\n                this.ba = comp;\r\n            } else {\r\n                this.ea.next = comp;\r\n            }\r\n            this.ea = comp;\r\n            comp.next = null;\r\n        }\r\n    }\r\n\r\n    test() {\r\n        // STrigger\r\n        for (this.c1 = this.bs; this.c1 !== null; this.c1 = this.c1.next) {\r\n            // STrigger\r\n            for (this.c2 = this.c1.next; this.c2 !== null; this.c2 = this.c2.next) {\r\n                if (STS(this.c1, this.c2)) {\r\n                    this.c1.inner.push(this.c2);\r\n                    this.c2.inner.push(this.c1);\r\n                }\r\n            }\r\n            // ATrigger\r\n            for (this.c2 = this.ba; this.c2 !== null; this.c2 = this.c2.next) {\r\n                if (ATS(this.c2, this.c1)) {\r\n                    this.c1.inner.push(this.c2);\r\n                    this.c2.inner.push(this.c1);\r\n                }\r\n            }\r\n            // Child three\r\n            if (this.inner && this.child) {\r\n                this.child[0].tests(this.c1);\r\n                this.child[1].tests(this.c1);\r\n                this.child[2].tests(this.c1);\r\n                this.child[3].tests(this.c1);\r\n            }\r\n        }\r\n        // ATrigger\r\n        for (this.c1 = this.ba; this.c1 !== null; this.c1 = this.c1.next) {\r\n            // ATrigger\r\n            for (this.c2 = this.c1.next; this.c2 !== null; this.c2 = this.c2.next) {\r\n                if (ATA(this.c1, this.c2)) {\r\n                    this.c1.inner.push(this.c2);\r\n                    this.c2.inner.push(this.c1);\r\n                }\r\n            }\r\n            // Child three\r\n            if (this.inner && this.child) {\r\n                this.child[0].testa(this.c1);\r\n                this.child[1].testa(this.c1);\r\n                this.child[2].testa(this.c1);\r\n                this.child[3].testa(this.c1);\r\n            }\r\n        }\r\n        // Child three\r\n        if (this.inner && this.child) {\r\n            this.child[0].test();\r\n            this.child[1].test();\r\n            this.child[2].test();\r\n            this.child[3].test();\r\n        }\r\n    }\r\n\r\n    tests(comp) {\r\n        for (this.c1 = this.bs; this.c1 !== null; this.c1 = this.c1.next) {\r\n            if (STS(this.c1, comp)) {\r\n                this.c1.inner.push(comp);\r\n                comp.inner.push(this.c1);\r\n            }\r\n        }\r\n        for (this.c1 = this.ba; this.c1 !== null; this.c1 = this.c1.next) {\r\n            if (ATS(this.c1, comp)) {\r\n                this.c1.inner.push(comp);\r\n                comp.inner.push(this.c1);\r\n            }\r\n        }\r\n        if (this.inner && this.child) {\r\n            this.child[0].tests(comp);\r\n            this.child[1].tests(comp);\r\n            this.child[2].tests(comp);\r\n            this.child[3].tests(comp);\r\n        }\r\n    }\r\n\r\n    testa(comp) {\r\n        for (this.c1 = this.ba; this.c1 !== null; this.c1 = this.c1.next) {\r\n            if (ATA(this.c1, comp)) {\r\n                this.c1.inner.push(comp);\r\n                comp.inner.push(this.c1);\r\n            }\r\n        }\r\n        for (this.c1 = this.bs; this.c1 !== null; this.c1 = this.c1.next) {\r\n            if (ATS(comp, this.c1)) {\r\n                this.c1.inner.push(comp);\r\n                comp.inner.push(this.c1);\r\n            }\r\n        }\r\n        if (this.inner && this.child) {\r\n            this.child[0].testa(comp);\r\n            this.child[1].testa(comp);\r\n            this.child[2].testa(comp);\r\n            this.child[3].testa(comp);\r\n        }\r\n    }\r\n}\r\n\r\nconst TREEPOSX = 0;\r\nconst TREEPOSY = 700;\r\nconst TREESIZE = 1024;\r\nconst TREESTEP = 5;\r\nexport default class TriggerSystem {\r\n    constructor(core) {\r\n        this[$name] = 'Trigger';\r\n        core.regEvent('onStart', this);\r\n        core.regEvent('onPHYUpdate', this);\r\n    }\r\n\r\n    onStart() {\r\n        this.tree = new Branch(\r\n            TREEPOSX - TREESIZE,\r\n            TREEPOSY - TREESIZE,\r\n            TREEPOSX + TREESIZE,\r\n            TREEPOSY + TREESIZE,\r\n            0,\r\n            TREESTEP\r\n        );\r\n    }\r\n\r\n    onPHYUpdate(core) {\r\n        performance.mark('trs');\r\n\r\n        this.tree.clear();\r\n        for (const comp of core.getComp(STrigger)) {\r\n            comp.inner.length = 0;\r\n            comp.owner.getCompOne(Transform).worldPosition(comp.pos).add(comp.offset);\r\n            this.tree.adds(comp, comp.pos.x, comp.pos.z, comp.radius);\r\n        }\r\n        for (const comp of core.getComp(ATrigger)) {\r\n            comp.inner.length = 0;\r\n            comp.owner.getCompOne(Transform).worldPosition(comp.pos).add(comp.offset);\r\n            this.tree.adda(comp, comp.pos.x, comp.pos.z, comp.size);\r\n        }\r\n        this.tree.test();\r\n\r\n        performance.mark('tre');\r\n        performance.measure('trigger', 'trs', 'tre');\r\n    }\r\n}\r\n","import Transform from '../Components/Transform';\r\nimport Mesh from '../Components/Mesh';\r\nimport Movement from '../Components/Movement';\r\nimport ATrigger from '../Components/ATrigger';\r\nimport STrigger from '../Components/STrigger';\r\nimport Vec3 from '../Math/Vec3';\r\n\r\nlet child = null;\r\nlet movement = null;\r\nlet transform = null;\r\nconst tPos = new Vec3();\r\n\r\nexport function moveSphere(barrier, it, pos) {\r\n    transform = barrier[it].getCompOne(Transform);\r\n    transform.position.copy(pos);\r\n    transform.position.y = 6;\r\n    movement = barrier[it].getCompOne(Movement);\r\n    movement.speed = Math.random() * 20 * pos.x / Math.abs(pos.x);\r\n}\r\n\r\nexport function moveStatic(barrier, it, pos) {\r\n    transform = barrier[it].getCompOne(Transform);\r\n    transform.position.copy(pos);\r\n}\r\n\r\nexport function moveTrain(barrier, it, pos) {\r\n    tPos.copy(pos);\r\n    tPos.x = 0;\r\n    transform = barrier[it].getCompOne(Transform);\r\n    transform.position.copy(tPos);\r\n\r\n    tPos.copy(pos);\r\n    tPos.x -= 28;\r\n    tPos.y = 5;\r\n    tPos.z = 0;\r\n    for (child of barrier[it].child) {\r\n        movement = child.getCompOne(Movement);\r\n        transform = child.getCompOne(Transform);\r\n        transform.position.copy(tPos);\r\n        tPos.x += 28;\r\n        movement.speed = pos.x < 0 ? 30 : -30;\r\n    }\r\n}\r\n\r\nexport function createSphere(core, barrier, it, pos) {\r\n    barrier[it] = core.newEntity(null, true);\r\n    core.newComp(Transform, barrier[it], true, {\r\n        position: pos\r\n    }).position.y = 6;\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'SPHERE_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'SPHERE_SILVER',\r\n        material: 'silver_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'SPHERE_LIGHT',\r\n        material: 'light_mat'\r\n    });\r\n    core.newComp(Movement, barrier[it], true, {\r\n        direction: { x: -1, y: 0, z: 0 },\r\n        speed: Math.random() * 20 * pos.x / Math.abs(pos.x)\r\n    });\r\n    core.newComp(STrigger, barrier[it], true, {\r\n        radius: 1\r\n    });\r\n}\r\n\r\nexport function createPillar1(core, barrier, it, pos) {\r\n    barrier[it] = core.newEntity(null, true);\r\n    core.newComp(Transform, barrier[it], true, {\r\n        position: pos\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR1_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR1_SILVER',\r\n        material: 'silver_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR1_WALL_W',\r\n        material: 'wall_w_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR1_WALL_WG',\r\n        material: 'wall_wg_mat'\r\n    });\r\n    core.newComp(Movement, barrier[it], true, {\r\n        direction: { x: 0, y: 0, z: 1 },\r\n        speed: 0\r\n    });\r\n    core.newComp(ATrigger, barrier[it], true, {\r\n        size: { x: 4, y: 8, z: 4 }\r\n    });\r\n}\r\n\r\nexport function createPillar2(core, barrier, it, pos) {\r\n    barrier[it] = core.newEntity(null, true);\r\n    core.newComp(Transform, barrier[it], true, {\r\n        position: pos\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR2_SILVER',\r\n        material: 'silver_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR2_WALL_W',\r\n        material: 'wall_w_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR2_WALL_WG',\r\n        material: 'wall_wg_mat'\r\n    });\r\n    core.newComp(Movement, barrier[it], true, {\r\n        direction: { x: 0, y: 0, z: 1 },\r\n        speed: 0\r\n    });\r\n    core.newComp(ATrigger, barrier[it], true, {\r\n        size: { x: 4, y: 8, z: 4 }\r\n    });\r\n}\r\n\r\nexport function createPillar3(core, barrier, it, pos) {\r\n    barrier[it] = core.newEntity(null, true);\r\n    core.newComp(Transform, barrier[it], true, {\r\n        position: pos\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR3_SILVER',\r\n        material: 'silver_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR3_WALL_W',\r\n        material: 'wall_w_mat'\r\n    });\r\n    core.newComp(Movement, barrier[it], true, {\r\n        direction: { x: 0, y: 0, z: 1 },\r\n        speed: 0\r\n    });\r\n    core.newComp(ATrigger, barrier[it], true, {\r\n        size: { x: 4, y: 8, z: 4 }\r\n    });\r\n}\r\n\r\nexport function createPillar4(core, barrier, it, pos) {\r\n    barrier[it] = core.newEntity(null, true);\r\n    core.newComp(Transform, barrier[it], true, {\r\n        position: pos\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR4_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR4_SILVER',\r\n        material: 'silver_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR4_WALL_W',\r\n        material: 'wall_w_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR4_WALL_WG',\r\n        material: 'wall_wg_mat'\r\n    });\r\n    core.newComp(Movement, barrier[it], true, {\r\n        direction: { x: 0, y: 0, z: 1 },\r\n        speed: 0\r\n    });\r\n    core.newComp(ATrigger, barrier[it], true, {\r\n        size: { x: 4, y: 8, z: 4 }\r\n    });\r\n}\r\n\r\nexport function createPillar5(core, barrier, it, pos) {\r\n    barrier[it] = core.newEntity(null, true);\r\n    core.newComp(Transform, barrier[it], true, {\r\n        position: pos\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR5_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR5_SILVER',\r\n        material: 'silver_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR5_WALL_W',\r\n        material: 'wall_w_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'PILLAR5_WALL_WG',\r\n        material: 'wall_wg_mat'\r\n    });\r\n    core.newComp(Movement, barrier[it], true, {\r\n        direction: { x: 0, y: 0, z: 1 },\r\n        speed: 0\r\n    });\r\n    core.newComp(ATrigger, barrier[it], true, {\r\n        size: { x: 4, y: 8, z: 4 }\r\n    });\r\n}\r\n\r\nexport function createColumn1(core, barrier, it, pos) {\r\n    barrier[it] = core.newEntity(null, true);\r\n    core.newComp(Transform, barrier[it], true, {\r\n        position: pos\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN1_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN1_WALL_S',\r\n        material: 'wall_s_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN1_WALL_W',\r\n        material: 'wall_w_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN1_WALL_WG',\r\n        material: 'wall_wg_mat'\r\n    });\r\n    core.newComp(Movement, barrier[it], true, {\r\n        direction: { x: 0, y: 0, z: 1 },\r\n        speed: 0\r\n    });\r\n    core.newComp(ATrigger, barrier[it], true, {\r\n        size: { x: 7, y: 8, z: 7 }\r\n    });\r\n}\r\n\r\nexport function createColumn2(core, barrier, it, pos) {\r\n    barrier[it] = core.newEntity(null, true);\r\n    core.newComp(Transform, barrier[it], true, {\r\n        position: pos\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN2_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN2_SILVER',\r\n        material: 'silver_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN2_WALL_S',\r\n        material: 'wall_s_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN2_WALL_W',\r\n        material: 'wall_w_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN2_WALL_WG',\r\n        material: 'wall_wg_mat'\r\n    });\r\n    core.newComp(Movement, barrier[it], true, {\r\n        direction: { x: 0, y: 0, z: 1 },\r\n        speed: 0\r\n    });\r\n    core.newComp(ATrigger, barrier[it], true, {\r\n        size: { x: 7, y: 8, z: 7 }\r\n    });\r\n}\r\n\r\nexport function createColumn3(core, barrier, it, pos) {\r\n    barrier[it] = core.newEntity(null, true);\r\n    core.newComp(Transform, barrier[it], true, {\r\n        position: pos\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN3_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN3_SILVER',\r\n        material: 'silver_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN3_WALL_S',\r\n        material: 'wall_s_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN3_WALL_W',\r\n        material: 'wall_w_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'COLUMN3_WALL_WG',\r\n        material: 'wall_wg_mat'\r\n    });\r\n    core.newComp(Movement, barrier[it], true, {\r\n        direction: { x: 0, y: 0, z: 1 },\r\n        speed: 0\r\n    });\r\n    core.newComp(ATrigger, barrier[it], true, {\r\n        size: { x: 7, y: 8, z: 7 }\r\n    });\r\n}\r\n\r\nexport function createTunnel1(core, barrier, it, pos) {\r\n    barrier[it] = core.newEntity(null, true);\r\n    core.newComp(Transform, barrier[it], true, {\r\n        position: pos\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'TUNNEL1_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'TUNNEL1_WALL_S',\r\n        material: 'wall_s_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'TUNNEL1_WALL_WG',\r\n        material: 'wall_wg_mat'\r\n    });\r\n    core.newComp(Movement, barrier[it], true, {\r\n        direction: { x: 0, y: 0, z: 1 },\r\n        speed: 0\r\n    });\r\n    core.newComp(ATrigger, barrier[it], true, {\r\n        size: { x: 8, y: 8, z: 67 }\r\n    });\r\n}\r\n\r\nexport function createTunnel2(core, barrier, it, pos) {\r\n    barrier[it] = core.newEntity(null, true);\r\n    core.newComp(Transform, barrier[it], true, {\r\n        position: pos\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'TUNNEL2_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'TUNNEL2_WALL_S',\r\n        material: 'wall_s_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'TUNNEL2_WALL_W',\r\n        material: 'wall_w_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'TUNNEL2_WALL_WG',\r\n        material: 'wall_wg_mat'\r\n    });\r\n    core.newComp(Movement, barrier[it], true, {\r\n        direction: { x: 0, y: 0, z: 1 },\r\n        speed: 0\r\n    });\r\n    core.newComp(ATrigger, barrier[it], true, {\r\n        size: { x: 8, y: 8, z: 67 }\r\n    });\r\n}\r\n\r\nexport function createTrain(core, barrier, it, pos) {\r\n    const tmp = pos.x;\r\n\r\n    pos.x = 0;\r\n    barrier[it] = core.newEntity(null, true);\r\n    core.newComp(Transform, barrier[it], true, {\r\n        position: pos\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'GATE_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'GATE_LIGHT',\r\n        material: 'light_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'GATE_WALL_S',\r\n        material: 'wall_s_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'GATE_WALL_SG',\r\n        material: 'wall_sg_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'GATE_WALL_W',\r\n        material: 'wall_w_mat'\r\n    });\r\n    core.newComp(Mesh, barrier[it], true, {\r\n        geometry: 'GATE_WALL_WG',\r\n        material: 'wall_wg_mat'\r\n    });\r\n    core.newComp(Movement, barrier[it], true, {\r\n        direction: { x: 0, y: 0, z: 1 },\r\n        speed: 0\r\n    });\r\n    core.newComp(ATrigger, barrier[it], true, {\r\n        size: { x: 20, y: 20, z: 20 },\r\n        offset: { x: 220, y: 0, z: 0 }\r\n    });\r\n    core.newComp(ATrigger, barrier[it], true, {\r\n        size: { x: 20, y: 20, z: 20 },\r\n        offset: { x: -220, y: 0, z: 0 }\r\n    });\r\n\r\n    pos.x = tmp - 28;\r\n    pos.y = 5;\r\n    pos.z = 0;\r\n\r\n    let ent = core.newEntity(barrier[it], true);\r\n    core.newComp(Transform, ent, true, {\r\n        position: pos,\r\n        scale: { x: 0.7, y: 0.7, z: 0.7 }\r\n    });\r\n    core.newComp(Mesh, ent, true, {\r\n        geometry: 'PYRAMID_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, ent, true, {\r\n        geometry: 'PYRAMID_SILVER',\r\n        material: 'silver_mat'\r\n    });\r\n    core.newComp(Movement, ent, true, {\r\n        direction: { x: 1, y: 0, z: 0 },\r\n        speed: tmp < 0 ? 30 : -30\r\n    });\r\n    core.newComp(STrigger, ent, true, {\r\n        radius: 7\r\n    });\r\n\r\n    pos.x += 28;\r\n    ent = core.newEntity(barrier[it], true);\r\n    core.newComp(Transform, ent, true, {\r\n        position: pos\r\n    });\r\n    core.newComp(Mesh, ent, true, {\r\n        geometry: 'PYRAMID_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, ent, true, {\r\n        geometry: 'PYRAMID_SILVER',\r\n        material: 'silver_mat'\r\n    });\r\n    core.newComp(Movement, ent, true, {\r\n        direction: { x: 1, y: 0, z: 0 },\r\n        speed: tmp < 0 ? 30 : -30\r\n    });\r\n    core.newComp(STrigger, ent, true, {\r\n        radius: 10\r\n    });\r\n\r\n    pos.x += 28;\r\n    ent = core.newEntity(barrier[it], true);\r\n    core.newComp(Transform, ent, true, {\r\n        position: pos,\r\n        scale: { x: 0.7, y: 0.7, z: 0.7 }\r\n    });\r\n    core.newComp(Mesh, ent, true, {\r\n        geometry: 'PYRAMID_GOLD',\r\n        material: 'gold_mat'\r\n    });\r\n    core.newComp(Mesh, ent, true, {\r\n        geometry: 'PYRAMID_SILVER',\r\n        material: 'silver_mat'\r\n    });\r\n    core.newComp(Movement, ent, true, {\r\n        direction: { x: 1, y: 0, z: 0 },\r\n        speed: tmp < 0 ? 30 : -30\r\n    });\r\n    core.newComp(STrigger, ent, true, {\r\n        radius: 7\r\n    });\r\n}\r\n","import * as Helper from './GameSystemHelper';\r\nimport Transform from '../Components/Transform';\r\nimport STrigger from '../Components/STrigger';\r\nimport OrbitControl from '../Components/OrbitControl';\r\nimport Vec3 from '../Math/Vec3';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nlet it = 0;\r\nlet tmp = 0;\r\nlet transform = null;\r\nconst zAxis = new Vec3(0, 0, 1);\r\nconst BARRIER_MAX = 128;\r\nconst MAX_XMOVE = 0.5;\r\nconst SCOREDT = 0.25;\r\nconst tPos = new Vec3();\r\n\r\nexport default class GameSystem {\r\n    constructor(core) {\r\n        this[$name] = 'Game';\r\n        core.regEvent('onStart', this);\r\n        core.regEvent('onUpdate', this);\r\n        core.regEvent('onLateUpdate', this);\r\n\r\n        this.state = 0;\r\n        this.count = 0;\r\n        this.airplane = null;\r\n        this.transform = null;\r\n\r\n        this.speed = 500;\r\n        this.xmove = 0;\r\n\r\n        this.uibg = document.getElementById('app-ui-bg');\r\n        this.uimul = document.getElementById('app-ui-mul');\r\n        this.uiscore = document.getElementById('app-ui-score');\r\n        this.uiresult = document.getElementById('app-ui-result');\r\n\r\n        this.mul = 1;\r\n        this.score = 0;\r\n        this.scoredt = 0;\r\n\r\n        console.log(core); // TODO!!!\r\n    }\r\n\r\n    onStart(core) {\r\n        this.time = core.getSystem('Time');\r\n        this.input = core.getSystem('Input');\r\n        this.screen = core.getSystem('Screen');\r\n        this.movement = core.getSystem('Movement');\r\n\r\n        [this.airplane] = core.getEntitiesByName('airplane');\r\n        [this.camera] = core.getEntitiesByName('player');\r\n\r\n        [this.g1] = core.getEntitiesByName('ground1');\r\n        [this.g2] = core.getEntitiesByName('ground2');\r\n        [this.g3] = core.getEntitiesByName('ground3');\r\n        [this.g4] = core.getEntitiesByName('ground4');\r\n\r\n        this.barrier = new Array(BARRIER_MAX);\r\n\r\n        this.createBarrier(core);\r\n\r\n        // Hide load screen\r\n        this.time.timeScale = 0;\r\n        setTimeout(() => {\r\n            const start = document.getElementById('app-ui-start');\r\n            start.innerHTML = 'START';\r\n            start.addEventListener('click', () => {\r\n                this.uibg.style.display = 'none';\r\n                this.time.timeScale = 1;\r\n                this.state = 1;\r\n                this.start(core);\r\n            });\r\n            start.addEventListener('touchstart', () => {\r\n                this.uibg.style.display = 'none';\r\n                this.time.timeScale = 1;\r\n                this.state = 1;\r\n                this.start(core);\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    onUpdate() {\r\n        if (this.state === 0) return;\r\n\r\n        if (this.input.keyState(this.input.VK_SPACE)) {\r\n            this.mul = 2;\r\n            this.speed = 0; // 1000; // TODO\r\n            this.uimul.innerHTML = 'x2';\r\n        } else {\r\n            this.mul = 1;\r\n            this.speed = 500;\r\n            this.uimul.innerHTML = null;\r\n        }\r\n\r\n        this.score += this.time.deltaTime * this.mul * 10;\r\n        this.scoredt += this.time.deltaTime;\r\n        if (this.scoredt >= SCOREDT) {\r\n            this.scoredt = 0;\r\n            this.uiscore.innerText = `${Math.ceil(this.score)}`;\r\n        }\r\n\r\n        if (this.state) {\r\n            this.move();\r\n            this.updateBarrier();\r\n        }\r\n    }\r\n\r\n    onLateUpdate() {\r\n        if (this.state) {\r\n            transform = this.airplane.getCompOne(STrigger);\r\n            if (transform) {\r\n                if (transform.inner.length > 0 && this.state) {\r\n                    this.time.timeScale = 0;\r\n                    this.state = 0;\r\n                    setTimeout(() => {\r\n                        this.uiresult.innerHTML = `${Math.ceil(this.score)}`;\r\n                        this.uibg.style.display = 'block';\r\n                    }, 1000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    move() {\r\n        if (this.state === 1) this.movement.limearSpeed.z = -this.speed;\r\n        else this.movement.limearSpeed.z = 0;\r\n\r\n        transform = this.g1.getCompOne(Transform);\r\n        if (transform && transform.position.z < -510) transform.position.z += 4000;\r\n        transform = this.g2.getCompOne(Transform);\r\n        if (transform && transform.position.z < -510) transform.position.z += 4000;\r\n        transform = this.g3.getCompOne(Transform);\r\n        if (transform && transform.position.z < -510) transform.position.z += 4000;\r\n        transform = this.g4.getCompOne(Transform);\r\n        if (transform && transform.position.z < -510) transform.position.z += 4000;\r\n\r\n        transform = this.airplane.getCompOne(Transform);\r\n        if (transform) {\r\n            tmp = 0;\r\n            if (this.input.keyState(this.input.VK_LEFT)) tmp += 0.5;\r\n            if (this.input.keyState(this.input.VK_RIGHT)) tmp -= 0.5;\r\n            if (this.input.keyState(this.input.VK_LBUTTON)) {\r\n                if (this.input.mousePos().x > this.screen.widthNPR * 0.5) tmp -= 0.5;\r\n                else tmp += 0.5;\r\n            }\r\n\r\n            if (tmp > 0) {\r\n                this.xmove += 0.05;\r\n                if (this.xmove > MAX_XMOVE) this.xmove = MAX_XMOVE;\r\n            } else if (tmp < 0) {\r\n                this.xmove -= 0.05;\r\n                if (this.xmove < -MAX_XMOVE) this.xmove = -MAX_XMOVE;\r\n            } else if (this.xmove > 0) {\r\n                this.xmove -= 0.05;\r\n                if (this.xmove < 0) this.xmove = 0;\r\n            } else if (this.xmove < 0) {\r\n                this.xmove += 0.05;\r\n                if (this.xmove > 0) this.xmove = 0;\r\n            }\r\n\r\n            transform.orientation.fromAxisAngle(zAxis, this.xmove);\r\n            transform.position.x -= this.xmove * 2;\r\n            if (transform.position.x < -212) transform.position.x = -212;\r\n            if (transform.position.x > 216) transform.position.x = 216;\r\n        }\r\n\r\n        transform = this.camera.getCompOne(Transform);\r\n        if (transform) {\r\n            transform.position.x -= this.xmove * 2;\r\n            if (transform.position.x < -212) transform.position.x = -212;\r\n            if (transform.position.x > 216) transform.position.x = 216;\r\n        }\r\n        transform = this.camera.getCompOne(OrbitControl);\r\n        if (transform) {\r\n            transform.nupd = true;\r\n        }\r\n    }\r\n\r\n    start() {\r\n        this.score = 0;\r\n        this.uiscore.innerText = '0';\r\n        this.xmove = 0;\r\n        this.startMoveBarrier();\r\n    }\r\n\r\n    createBarrier(core) {\r\n        for (it = 0; it < BARRIER_MAX; it++) {\r\n            tPos.x = (Math.random() - 0.5) * 440;\r\n            tPos.y = 0;\r\n            tPos.z = 3000 + Math.random() * 2000;\r\n\r\n            if (it < 50) Helper.createSphere(core, this.barrier, it, tPos);\r\n            else if (it < 62) Helper.createPillar1(core, this.barrier, it, tPos);\r\n            else if (it < 74) Helper.createPillar2(core, this.barrier, it, tPos);\r\n            else if (it < 86) Helper.createPillar3(core, this.barrier, it, tPos);\r\n            else if (it < 98) Helper.createPillar4(core, this.barrier, it, tPos);\r\n            else if (it < 110) Helper.createPillar5(core, this.barrier, it, tPos);\r\n            else if (it < 113) Helper.createColumn1(core, this.barrier, it, tPos);\r\n            else if (it < 116) Helper.createColumn2(core, this.barrier, it, tPos);\r\n            else if (it < 119) Helper.createColumn3(core, this.barrier, it, tPos);\r\n            else if (it < 122) Helper.createTunnel1(core, this.barrier, it, tPos);\r\n            else if (it < 125) Helper.createTunnel2(core, this.barrier, it, tPos);\r\n            else Helper.createTrain(core, this.barrier, it, tPos);\r\n        }\r\n    }\r\n\r\n    updateBarrier() {\r\n        for (it = 0; it < BARRIER_MAX; it++) {\r\n            if (!this.barrier[it]) continue;\r\n            transform = this.barrier[it].getCompOne(Transform);\r\n            if (transform) {\r\n                if (transform.position.z < -20) {\r\n                    tPos.x = (Math.random() - 0.5) * 440;\r\n                    tPos.y = 0;\r\n                    tPos.z = 3000 + Math.random() * 2000;\r\n\r\n                    if (it < 50) Helper.moveSphere(this.barrier, it, tPos);\r\n                    else if (it < 125) Helper.moveStatic(this.barrier, it, tPos);\r\n                    else Helper.moveTrain(this.barrier, it, tPos);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    startMoveBarrier() {\r\n        for (it = 0; it < BARRIER_MAX; it++) {\r\n            if (!this.barrier[it]) continue;\r\n            transform = this.barrier[it].getCompOne(Transform);\r\n            if (transform) {\r\n                tPos.x = (Math.random() - 0.5) * 440;\r\n                tPos.y = 0;\r\n                tPos.z = 3000 + Math.random() * 2000;\r\n\r\n                if (it < 50) Helper.moveSphere(this.barrier, it, tPos);\r\n                else if (it < 125) Helper.moveStatic(this.barrier, it, tPos);\r\n                else Helper.moveTrain(this.barrier, it, tPos);\r\n            }\r\n        }\r\n    }\r\n\r\n    // =========================TEMP================================\r\n    // const e0 = core.newEntity(null, true);\r\n    // const c0 = core.newComp(Transform, e0, true, {});\r\n    // core.enableEntity(owner, false);\r\n    // core.enableComp(comp, false);\r\n    // core.delComp(c0);\r\n    // core.delEntity(e0);\r\n    // =========================TEMP================================\r\n}\r\n","export default class Vec2 {\r\n    constructor(x = 0, y = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n","export default class Vec4 {\r\n    constructor(x = 0, y = 0, z = 0, w = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n\r\n    copy(vec) {\r\n        this.x = vec.x;\r\n        this.y = vec.y;\r\n        this.z = vec.z;\r\n        this.w = vec.w;\r\n        return this;\r\n    }\r\n}\r\n","export default class TLayer {\r\n    constructor(texture = null, layer = 0) {\r\n        this.texture = texture;\r\n        this.layer = layer;\r\n    }\r\n\r\n    copy(tlayer) {\r\n        this.texture = tlayer.texture;\r\n        this.layer = tlayer.layer;\r\n    }\r\n}\r\n","import Vec2 from '../Math/Vec2';\r\nimport Vec3 from '../Math/Vec3';\r\nimport Vec4 from '../Math/Vec4';\r\nimport Quat from '../Math/Quat';\r\nimport Mat4 from '../Math/Mat4';\r\nimport TLayer from '../Math/TLayer';\r\n\r\nexport default class Shader {\r\n    constructor() {\r\n        this.program = null;\r\n        this.uniform = {};\r\n        this.attribute = {};\r\n    }\r\n\r\n    use(core) {\r\n        core.gl.useProgram(this.program);\r\n    }\r\n\r\n    setUniform(core, uniformName, value) { // TODO!!!\r\n        switch (value.constructor) {\r\n            case Number:\r\n                core.gl.uniform2f(this.uniform[uniformName], value);\r\n                break;\r\n            case Vec2:\r\n                core.gl.uniform2f(this.uniform[uniformName], value.x, value.y);\r\n                break;\r\n            case Vec3:\r\n                core.gl.uniform3f(this.uniform[uniformName], value.x, value.y, value.z);\r\n                break;\r\n            case Vec4:\r\n            case Quat:\r\n                core.gl.uniform4f(this.uniform[uniformName], value.x, value.y, value.z, value.w);\r\n                break;\r\n            case TLayer:\r\n                core.gl.uniform1i(this.uniform[uniformName], value.layer);\r\n                value.texture.use(core, value.layer);\r\n                break;\r\n            case Mat4:\r\n                core.gl.uniformMatrix4fv(this.uniform[uniformName], false, value);\r\n                break;\r\n            default: throw new Error('Type of value not found');\r\n        }\r\n    }\r\n}\r\n","import { Loader } from '../Core/Core';\r\nimport Shader from '../Resources/Shader';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class RawShaderLoader extends Loader {\r\n    parse(obj) {\r\n        if (typeof obj.name !== 'string' || obj.name === '') throw new Error('Shader not named');\r\n        const gl = this.core.gl;\r\n        const vsh = gl.createShader(gl.VERTEX_SHADER);\r\n        const fsh = gl.createShader(gl.FRAGMENT_SHADER);\r\n        const shader = new Shader();\r\n        shader.program = gl.createProgram();\r\n\r\n        gl.shaderSource(vsh, obj.vs);\r\n        gl.compileShader(vsh);\r\n        gl.shaderSource(fsh, obj.fs);\r\n        gl.compileShader(fsh);\r\n\r\n        if (!gl.getShaderParameter(vsh, gl.COMPILE_STATUS)) {\r\n            throw new Error(gl.getShaderInfoLog(vsh));\r\n        }\r\n        if (!gl.getShaderParameter(fsh, gl.COMPILE_STATUS)) {\r\n            throw new Error(gl.getShaderInfoLog(fsh));\r\n        }\r\n\r\n        gl.attachShader(shader.program, vsh);\r\n        gl.attachShader(shader.program, fsh);\r\n        gl.linkProgram(shader.program);\r\n\r\n        if (!gl.getProgramParameter(shader.program, gl.LINK_STATUS)) {\r\n            throw new Error(gl.getProgramInfoLog(shader.program));\r\n        }\r\n\r\n        gl.deleteShader(vsh);\r\n        gl.deleteShader(fsh);\r\n\r\n        // Get unifornm\r\n        for (let i = 0; i < gl.getProgramParameter(shader.program, gl.ACTIVE_UNIFORMS); i++) {\r\n            const name = gl.getActiveUniform(shader.program, i).name;\r\n            if (!name.includes('gl_')) shader.uniform[name] = gl.getUniformLocation(shader.program, name);\r\n        }\r\n\r\n        // Get attribute\r\n        for (let i = 0; i < gl.getProgramParameter(shader.program, gl.ACTIVE_ATTRIBUTES); i++) {\r\n            const name = gl.getActiveAttrib(shader.program, i).name;\r\n            if (!name.includes('gl_')) shader.attribute[name] = gl.getAttribLocation(shader.program, name);\r\n        }\r\n\r\n        this.core.addRes('shader', obj.name, shader);\r\n\r\n        return Promise.resolve(shader);\r\n    }\r\n}\r\nRawShaderLoader.prototype[$name] = 'RawShaderLoader';\r\n","let gl = null;\r\n\r\nexport default class Material {\r\n    constructor() {\r\n        this.shader = null;\r\n        this.depthtest = true;\r\n        this.depthwrite = true;\r\n        this.cullFace = 0;\r\n        this.blend = 0;\r\n        this.uniform = {};\r\n        this.batch = false;\r\n    }\r\n\r\n    use(core) {\r\n        gl = core.gl;\r\n        this.shader.use(core);\r\n\r\n        // DEPTH_TEST\r\n        if (this.depthtest) gl.enable(gl.DEPTH_TEST);\r\n        else gl.disable(gl.DEPTH_TEST);\r\n\r\n        // DEPTH_WRITE\r\n        gl.depthMask(this.depthwrite);\r\n\r\n        // CULL_FACE\r\n        switch (this.cullFace) {\r\n            case 0: gl.disable(gl.CULL_FACE); break;\r\n            case 1: gl.enable(gl.CULL_FACE); gl.cullFace(gl.BACK); break;\r\n            case 2: gl.enable(gl.CULL_FACE); gl.cullFace(gl.FRONT); break;\r\n            case 3: gl.enable(gl.CULL_FACE); gl.cullFace(gl.FRONT_AND_BACK); break;\r\n            default: gl.disable(gl.CULL_FACE); break;\r\n        }\r\n\r\n        // BLEND\r\n        switch (this.blend) { // TODO!!!\r\n            case 0: gl.disable(gl.BLEND); break;\r\n            case 1: gl.enable(gl.BLEND); break;\r\n            default: gl.disable(gl.BLEND); break;\r\n        }\r\n\r\n        // UNIFORMS\r\n        for (const key in this.uniform) {\r\n            this.shader.setUniform(core, key, this.uniform[key]);\r\n        }\r\n    }\r\n}\r\n","import { Loader } from '../Core/Core';\r\nimport Material from '../Resources/Material';\r\nimport Vec2 from '../Math/Vec2';\r\nimport Vec3 from '../Math/Vec3';\r\nimport Vec4 from '../Math/Vec4';\r\nimport TLayer from '../Math/TLayer';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class MaterialLoader extends Loader {\r\n    parse(obj) {\r\n        if (typeof obj.name !== 'string' || obj.name === '') throw new Error('Material not named');\r\n\r\n        const material = new Material();\r\n        material.shader = obj.shader;\r\n        material.depthtest = obj.depthtest !== undefined ? obj.depthtest : true;\r\n        material.depthwrite = obj.depthwrite !== undefined ? obj.depthwrite : true;\r\n        material.cullFace = obj.cullFace !== undefined ? obj.cullFace : 0;\r\n        material.blend = obj.blend !== undefined ? obj.blend : 0;\r\n        material.batch = obj.batch !== undefined ? obj.batch : false;\r\n\r\n        for (const name in obj.uniform) {\r\n            switch (obj.uniform[name].type) { // TODO!!!\r\n                case 'Float':\r\n                    material.uniform[name] = obj.uniform[name].value;\r\n                    break;\r\n                case 'Vec2':\r\n                    material.uniform[name] = new Vec2();\r\n                    material.uniform[name].copy(obj.uniform[name].value);\r\n                    break;\r\n                case 'Vec3':\r\n                    material.uniform[name] = new Vec3();\r\n                    material.uniform[name].copy(obj.uniform[name].value);\r\n                    break;\r\n                case 'Vec4':\r\n                    material.uniform[name] = new Vec4();\r\n                    material.uniform[name].copy(obj.uniform[name].value);\r\n                    break;\r\n                case 'Texture':\r\n                    material.uniform[name] = new TLayer();\r\n                    material.uniform[name].copy(obj.uniform[name].value);\r\n                    break;\r\n                default: throw new Error('Uniform type not found');\r\n            }\r\n        }\r\n\r\n        this.core.addRes('material', obj.name, material);\r\n\r\n        return Promise.resolve(material);\r\n    }\r\n    conf(material) {\r\n        material.shader = this.core.getRes('shader', material.shader);\r\n        for (const key in material.uniform) {\r\n            if (material.uniform[key] instanceof TLayer) {\r\n                material.uniform[key].texture = this.core.getRes('texture', material.uniform[key].texture);\r\n            }\r\n        }\r\n        return Promise.resolve(material);\r\n    }\r\n}\r\nMaterialLoader.prototype[$name] = 'MaterialLoader';\r\n","import { Loader } from '../Core/Core';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class ImageLoader extends Loader {\r\n    load(file) {\r\n        return new Promise((rv, rj) => {\r\n            const image = new Image();\r\n            const name = file.substring(file.lastIndexOf('/') + 1, file.lastIndexOf('.'));\r\n            image.onload = () => { rv(image); this.core.addRes('image', name, image); };\r\n            image.onerror = () => { rj(image); };\r\n            image.src = file;\r\n        });\r\n    }\r\n}\r\nImageLoader.prototype[$name] = 'ImageLoader';\r\n","let gl = null;\r\n\r\nexport default class Texture {\r\n    constructor() {\r\n        this.image = null;\r\n        this.tex = null;\r\n        this.type = 0x0DE1;\r\n    }\r\n\r\n    use(core, layer) {\r\n        gl = core.gl;\r\n        gl.activeTexture(gl.TEXTURE0 + layer);\r\n        gl.bindTexture(this.type, this.tex);\r\n    }\r\n}\r\n","import { Loader } from '../Core/Core';\r\nimport Texture from '../Resources/Texture';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class Texture2DLoader extends Loader { // TODO!!!\r\n    parse(obj) {\r\n        if (typeof obj.name !== 'string' || obj.name === '') throw new Error('Texture not named');\r\n        const gl = this.core.gl;\r\n\r\n        const texture = new Texture();\r\n        texture.image = obj.image;\r\n        texture.type = gl.TEXTURE_2D;\r\n        texture.tex = gl.createTexture();\r\n\r\n        this.core.addRes('texture', obj.name, texture);\r\n        return Promise.resolve(texture);\r\n    }\r\n    conf(texture) {\r\n        const gl = this.core.gl;\r\n        texture.image = this.core.getRes('image', texture.image);\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, texture.tex);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, texture.image);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\r\n        // gl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_MAX_ANISOTROPY_EXT, 8); // TODO!!!\r\n        gl.generateMipmap(gl.TEXTURE_2D);\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n\r\n        return Promise.resolve(texture);\r\n    }\r\n}\r\nTexture2DLoader.prototype[$name] = 'Texture2DLoader';\r\n","let gl = null;\r\n\r\nexport default class Geometry {\r\n    constructor() {\r\n        this.attribute = {};\r\n        this.length = 0;\r\n        this.vbo = null;\r\n        this.ebo = null;\r\n    }\r\n\r\n    use(core, shader) { // TODO!!! TEMP NEED RECODE!!!\r\n        gl = core.gl;\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vbo);\r\n        for (const attr in this.attribute) {\r\n            if (shader.attribute[attr] !== undefined) {\r\n                gl.enableVertexAttribArray(shader.attribute[attr]);\r\n                gl.vertexAttribPointer(\r\n                    shader.attribute[attr],\r\n                    this.attribute[attr].size,\r\n                    this.attribute[attr].type,\r\n                    false,\r\n                    this.attribute[attr].stride,\r\n                    this.attribute[attr].offset\r\n                );\r\n            }\r\n        }\r\n\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.ebo);\r\n        gl.drawElements(gl.TRIANGLES, this.length, gl.UNSIGNED_SHORT, 0);\r\n\r\n        for (const attr in this.attribute) {\r\n            if (shader.attribute[attr] !== undefined) gl.disableVertexAttribArray(shader.attribute[attr]);\r\n        }\r\n    }\r\n}\r\n","import { Loader } from '../Core/Core';\r\nimport Geometry from '../Resources/Geometry';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class GeometryLoader extends Loader {\r\n    parse(obj) {\r\n        if (typeof obj.name !== 'string' || obj.name === '') throw new Error('Geometry not named');\r\n\r\n        const gl = this.core.gl;\r\n        const geometry = new Geometry();\r\n\r\n        for (const key in obj.attribute) {\r\n            geometry.attribute[key] = obj.attribute[key];\r\n        }\r\n        geometry.vbo = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, geometry.vbo);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(obj.vbo), gl.STATIC_DRAW);\r\n\r\n        geometry.ebo = gl.createBuffer();\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, geometry.ebo);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(obj.ebo), gl.STATIC_DRAW);\r\n        geometry.length = obj.ebo.length;\r\n\r\n        this.core.addRes('geometry', obj.name, geometry);\r\n        return Promise.resolve(geometry);\r\n    }\r\n}\r\nGeometryLoader.prototype[$name] = 'GeometryLoader';\r\n","import { Loader } from '../Core/Core';\r\n\r\nconst $name = Symbol.for('name');\r\n\r\nexport default class SceneLoader extends Loader {\r\n    parse(obj) {\r\n        const parse = [];\r\n        const loaders = [];\r\n\r\n        for (const res of obj.res) {\r\n            const loader = this.core.getLoader(res.loader);\r\n            loaders.push(loader);\r\n            if (typeof res.conf === 'string') {\r\n                parse.push(loader.load(res.conf).then(robj => loader.parse(robj)));\r\n            } else {\r\n                parse.push(loader.parse(res.conf));\r\n            }\r\n        }\r\n\r\n        return Promise.all(parse).then((parseRes) => {\r\n            const conf = [];\r\n            for (let i = 0; i < parseRes.length; i++) {\r\n                conf.push(loaders[i].conf(parseRes[i]));\r\n            }\r\n            return Promise.all(conf);\r\n        }).then(() => {\r\n            const ent = [];\r\n            let owner = null;\r\n            for (const entity of obj.ent) {\r\n                owner = (entity.owner !== undefined && entity.owner !== null) ? ent[entity.owner] : null;\r\n                const entt = this.core.newEntity(owner, entity.enable || true);\r\n                ent.push(entt);\r\n                if (entity.name) entt.name = entity.name;\r\n                if (entity.tags) {\r\n                    for (const tag of entity.tags) entt.addTag(tag);\r\n                }\r\n                if (entity.comp) {\r\n                    for (const comp of entity.comp) {\r\n                        const compClass = this.core.getCompClassByName(comp.type);\r\n                        if (comp.enable === undefined) comp.enable = true;\r\n                        this.core.newComp(compClass, entt, comp.enable, comp.conf);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nSceneLoader.prototype[$name] = 'SceneLoader';\r\n","import Core from '../fog_modules/Core/Core';\r\n\r\nimport Mesh from '../fog_modules/Components/Mesh';\r\nimport Camera from '../fog_modules/Components/Camera';\r\nimport Movement from '../fog_modules/Components/Movement';\r\nimport Rotation from '../fog_modules/Components/Rotation';\r\nimport ATrigger from '../fog_modules/Components/ATrigger';\r\nimport STrigger from '../fog_modules/Components/STrigger';\r\nimport Animator from '../fog_modules/Components/Animator';\r\nimport Transform from '../fog_modules/Components/Transform';\r\nimport OrbitControl from '../fog_modules/Components/OrbitControl';\r\n\r\nimport TimeSystem from '../fog_modules/Systems/TimeSystem';\r\nimport InputSystem from '../fog_modules/Systems/InputSystem';\r\nimport ScreenSystem from '../fog_modules/Systems/ScreenSystem';\r\nimport RenderSystem from '../fog_modules/Systems/RenderSystem';\r\nimport RotationSystem from '../fog_modules/Systems/RotationSystem';\r\nimport MovementSystem from '../fog_modules/Systems/MovementSystem';\r\nimport OrbitControlSystem from '../fog_modules/Systems/OrbitControlSystem';\r\nimport TransformSystem from '../fog_modules/Systems/TransformSystem';\r\nimport TriggerSystem from '../fog_modules/Systems/TriggerSystem';\r\n// import AnimationSystem from '../fog_modules/Systems/AnimationSystem';\r\nimport GameSystem from '../fog_modules/Systems/GameSystem';\r\n\r\nimport RawShaderLoader from '../fog_modules/Loaders/RawShaderLoader';\r\nimport MaterialLoader from '../fog_modules/Loaders/MaterialLoader';\r\nimport ImageLoader from '../fog_modules/Loaders/ImageLoader';\r\nimport Texture2DLoader from '../fog_modules/Loaders/Texture2DLoader';\r\nimport GeometryLoader from '../fog_modules/Loaders/GeometryLoader';\r\n// import SkeletonLoader from '../fog_modules/Loaders/SkeletonLoader';\r\n// import AnimationLoader from '../fog_modules/Loaders/AnimationLoader';\r\nimport SceneLoader from '../fog_modules/Loaders/SceneLoader';\r\n\r\nconst core = new Core('app', {\r\n    alpha: false\r\n});\r\n\r\ncore.regLoader(new RawShaderLoader(core));\r\ncore.regLoader(new MaterialLoader(core));\r\ncore.regLoader(new ImageLoader(core));\r\ncore.regLoader(new Texture2DLoader(core));\r\ncore.regLoader(new GeometryLoader(core));\r\n// core.regLoader(new SkeletonLoader(core));\r\n// core.regLoader(new AnimationLoader(core));\r\ncore.regLoader(new SceneLoader(core));\r\n\r\ncore.regComp(Mesh);\r\ncore.regComp(Camera);\r\ncore.regComp(Movement);\r\ncore.regComp(Rotation);\r\ncore.regComp(ATrigger);\r\ncore.regComp(STrigger);\r\ncore.regComp(Animator);\r\ncore.regComp(Transform);\r\ncore.regComp(OrbitControl);\r\n\r\ncore.regSystem(new TimeSystem(core));\r\ncore.regSystem(new InputSystem(core));\r\ncore.regSystem(new ScreenSystem(core));\r\ncore.regSystem(new RenderSystem(core));\r\ncore.regSystem(new RotationSystem(core));\r\ncore.regSystem(new MovementSystem(core));\r\ncore.regSystem(new OrbitControlSystem(core));\r\ncore.regSystem(new TransformSystem(core));\r\ncore.regSystem(new TriggerSystem(core));\r\n// core.regSystem(new AnimationSystem(core));\r\ncore.regSystem(new GameSystem(core));\r\n\r\ncore.loadRes('SceneLoader', './res/scene.json').then(() => { core.start(); });\r\n"],"sourceRoot":""}