{
    "name": "texturedShaderNM",
    "vs": "precision highp float; uniform mat4 PM; uniform mat4 WM; uniform mat4 OM; attribute vec3 position; attribute vec3 normal; attribute vec3 tangent; attribute vec3 bitangent; attribute vec2 uv; varying vec3 vNor; varying vec3 vTNor; varying vec3 vBNor; varying float vDepth; varying vec2 vUv; void main() { mat3 NM = mat3(OM); vUv = uv; vNor = normalize(NM * normal); vTNor = normalize(NM * tangent); vBNor = normalize(NM * bitangent); vec4 pos = WM * OM * vec4(position, 1.0); vDepth = pos.z * 0.0005; gl_Position = PM * pos; }",
    "fs": "precision highp float; uniform sampler2D tex; uniform sampler2D tnm; varying vec3 vNor; varying vec3 vTNor; varying vec3 vBNor; varying vec2 vUv; varying float vDepth; void main() { mat3 NM = mat3(vTNor, -vBNor, -vNor); vec3 nor = NM*(vec3(1.0) - texture2D(tnm, vUv).rgb * 2.0); vec3 light = normalize(vec3(-1, 1, -1)); vec3 color = texture2D(tex, vUv).rgb; vec3 fragColor = mix(color * max(0.2, dot(nor, light)), vec3(0.7, 0.65, 0.6), min(1.0, vDepth * vDepth)); gl_FragColor = vec4(fragColor, 1.0); }"
}